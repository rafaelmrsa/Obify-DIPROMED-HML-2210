/*====================================================================================\
|Programa  | UTMKR3A        | Autor | Rodrigo Franco             | Data | 25/01/2002   |
|=====================================================================================|
|Descrição | Inicia o processo de impressao de Orçamento                              |
|          |                                                                          |
|          |                                                                          |
|=====================================================================================|
|Sintaxe   | UTMKR3A                                                                   |
|=====================================================================================|
|Uso       | Especifico DIPROMED                                                      |
|=====================================================================================|
|........................................Histórico....................................|
|Maximo    | 25/06/07 - Alterando rotina para ser usada pelo Modulo de licitação      |
|Maximo    | 13/08/07 - Incluindo novas Inf. de clientes, operadores e transportadoras|
|Eriberto  | DD/MM/AA - Descrição                                                     |
\====================================================================================*/

#include "Protheus.ch"
#include "rwmake.ch"
#include "Dialog.ch"
#INCLUDE "COLORS.CH"
#INCLUDE "MSOLE.CH"
#INCLUDE "RPTDEF.CH"
#INCLUDE "FWPrintSetup.ch"

User Function Ok2_PDF(nRadio)
Local _oDlg
Local _aMsg         := {}
Local _cAssunto     := ""
Local _cEmail       := ""
Local _cDestCli  	:= ""
Local _cFrom     	:= ""
Local _cFuncSent 	:= "UTMKR3A.PRX
Local oDlg2
Local _lSaidaP      := .F.
Local _cExplWor     := Space(100)
Local _Retorno 		:= .F.
Local cArquivo      := ""
Local _lFlagMsg     := .F.

Private lErroval    := .f.
Private nValIpi     := 0
Private cCliST      := ""
Private cContrib	:= ""
Private cRegEsp		:= ""
Private _nTotST		:= 0
Private _nPICMS		:= 0
Private _cMVista1	:= ""
Private _cMVista2	:= ""
Private lArquivo    := .F.
Private ADIPSLD     := {}    

//variaveis para calculo imposto MATXFIS
Private _nTtoPed	:= 0
Private _nValItem	:= 0
Private _nValPis	:= 0
Private _nValCof	:= 0
Private	_nValICM	:= 0
Private	_nValIPI	:= 0
Private	_nValISS	:= 0
Private	_nValIST	:= 0

Public nValST       := 0

If   ("MATA410"$FUNNAME())
	If _lComDir
		AltC6Edit()
	EndIf
EndIf

_nRadio1 := 1
@ 050,110 To 150,310 Dialog _oDlg Title OemToAnsi("Escolha a opção")
@ 010,010 RADIO _oRadio1 VAR _nRadio1 3D Items "Impressão","Impressão c/ Envio de Email" of _oDLG SIZE 80,10
@ 035,040 BmpButton Type 1 Action Close(_oDlg)

Activate MsDialog _oDlg Centered Valid _nRadio1 > 0  //.and. If(_nRadio1 >= 4,.T.,U_SENHA("PED",0,0,0) ) Desabilitada a solicitação de senha para imprimir no word MCVN - 09/04/2008

// Opção para escolher a tipo de frete a ser impresso no Orçamento(Apenas Informativo e Somente para BECS)  MCVN - 25/06/07
If "DIPAL10" $ FunName() .And. UA1->UA1_TIPO $ "6/2"
	
	_aFreteRadio := {"CIF","NOSSO CARRO"}
	_nFreteRadio := 1
	@ 050,110 To 150,280 Dialog _oDlg Title OemToAnsi("Frete do Orçamento! ")
	@ 010,010 RADIO _aFreteRadio VAR _nFreteRadio
	
	@ 035,050 BmpButton Type 1 Action Close(_oDlg)
	
	Activate MsDialog _oDlg Centered Valid _nFreteRadio > 0
	
EndIf

nTamDet  := 20                // Tamanho da Area de Detalhe
_cTotG   := _cTotI := nVez := 0

_cIA := "0,00"
_cIL := "0,00"
If "TMK" $ FunName() .or. (Type("lMenu") <> "U" .and. lMenu .and. (!"DIPAL10" $ FunName() .and. !"MATA410" $ FunName()))
	
	DbSelectArea("SUA")
	_nOrc    := SUA->UA_NUM
	_cCodCli := SUA->UA_CLIENTE
	_cCodPag := SUA->UA_CONDPG
	_cPraEnt := SUA->UA_PRAENT
	_cDtVali := SUA->UA_DTLIM
	_cFatMin := SUA->UA_FATMIN
	_cTipFre := SUA->UA_TPFRETE
	_cDestFre:= SUA->UA_DESTFRE //MCVN - 14/05/09
	_cAc     := SUA->UA_AC
	_cObs    := SUA->UA_MENNOTA
	_cEmi    := DtoC(SUA->UA_EMISSAO)
	nVal_Fre := SUA->UA_FRETE  /// valor do Frete
	nVal_Des := SUA->UA_DESPESA  /// valor das Despesas
	_cOperado:= SUA->UA_OPERADO
	_cNomeOpe:= Alltrim(Posicione("SU7",1,xFilial("SU7")+SUA->UA_OPERADO,"U7_NREDUZ"))
	_cMailOpe:= Alltrim(Posicione("SU7",1,xFilial("SU7")+SUA->UA_OPERADO,"U7_EMAIL"))
	_cPosto  := Posicione("SU7",1,xFilial("SU7")+SUA->UA_OPERADO,"U7_POSTO")
	_cVend   := SUA->UA_VEND
	_cNomeVen:= Alltrim(Posicione("SA3",1,xFilial("SA3")+SUA->UA_VEND,"A3_NOME"))
	_cMailVen:= Alltrim(Posicione("SA3",1,xFilial("SA3")+SUA->UA_VEND,"A3_EMAIL"))
	_cTipoVen:= Posicione("SA3",1,xFilial("SA3")+SUA->UA_VEND,"A3_TIPO")
	_cTransp := SUA->UA_TRANSP
	_cNomeTra:= Posicione("SA4",1,xFilial("SA4")+SUA->UA_TRANSP,"A4_NOME")
	If "TMK" $ FunName() // MCVN - 13/08/2007
		_cEndCli := SUBSTR(SUA->UA_ENDENT,1,60)    // End de entrega
		_cBaiCli := SUBSTR(SUA->UA_BAIRROE,1,30)
		_cMunCli := SUA->UA_MUNE
		_cEstCli := SUA->UA_ESTE
		_cCepCli := SUA->UA_CEPE
	Endif
	_cIA	 := SUA->UA_MARGATU
	_cIL	 := SUA->UA_MARGLIB
	_cCont := 'Produtos:'
	_cGera := 'TOTAL (produto + frete + despesa)'
	
ELSEIF "DIPAL10" $ FunName() // Quando a Rotina chamada de dentro do Módulo de Licitação MCVN - 25/06/07
	
	DbSelectArea("UA1")
	_nOrc    := UA1->UA1_CODIGO
	_cCodCli := UA1->UA1_CODCLI
	_cCodPag := UA1->UA1_CONDPA
	_cPraEnt := UA1->UA1_DENTRE
	_cDtVali := ""//SUA->UA_DTLIM
	_cFatMin := 0 //SUA->UA_FATMIN
	_cTipFre := Iif(UA1->UA1_TIPO $ "6/2",Iif (_nFreteRadio == 1,"CIF","NOSSO CARRO"),"")
	_cDestFre:= ""
	_cAc     := ""//SUA->UA_AC
	_cObs    := ""
	_cEmi    := DtoC(UA1->UA1_EMISSA)
	nVal_Fre := 0 //SUA->UA_FRETE  /// valor do Frete
	nVal_Des := 0 //SUA->UA_DESPESA  /// valor das Despesas
	_cOperado:= "" // Operador
	_cNomeOpe:= Alltrim(Posicione("SU7",3,xFilial("SU7")+UA1->UA1_USUDIG,"U7_NREDUZ"))
	_cMailOpe:= Alltrim(Posicione("SU7",3,xFilial("SU7")+UA1->UA1_USUDIG,"U7_EMAIL"))
	_cTipoVen:= Posicione("SA3",1,xFilial("SA3")+UA1->UA1_VEND,"A3_TIPO")
	_cPosto  := "03" // Posto do Operador
	_cTransp := "" // Transportadora
	_cNomeTra:= "" // Nome da transportadora
	_cVend   := "" // Vendedor
	_cNomeVen:= "" // Nome do Vendedor
	_cMailVen:= "" // E-mail do Vendedor
	_cCont := 'Produtos:'
	_cGera := 'TOTAL (produto + frete + despesa)'
	
	
ELSEIF "MATA410" $ FunName() // Quando a Rotina chamada de dentro do Módulo de Licitação MCVN - 25/06/07
	
	DbSelectArea("SC5")
	
	_nOrc    := SC5->C5_NUM
	_cCodCli := SC5->C5_CLIENTE
	_cCodPag := SC5->C5_CONDPAG
	_cPraEnt := SC5->C5_PRAENT
	_cDtVali := SC5->C5_DTLIM
	_cFatMin := SC5->C5_FATMIN
	_cTipFre := SC5->C5_TPFRETE
	_cDestFre:= SC5->C5_DESTFRE //MCVN - 14/05/09
	_cAc     := SC5->C5_AC
	_cObs    := SC5->C5_MENNOTA
	_cEmi    := DtoC(SC5->C5_EMISSAO)
	nVal_Fre := SC5->C5_FRETE  /// valor do Frete
	nVal_Des := SC5->C5_DESPESA  /// valor das Despesas
	_cOperado:= SC5->C5_OPERADO
	_cNomeOpe:= Alltrim(Posicione("SU7",1,xFilial("SU7")+SC5->C5_OPERADO,"U7_NREDUZ"))
	_cMailOpe:= Alltrim(Posicione("SU7",1,xFilial("SU7")+SC5->C5_OPERADO,"U7_EMAIL"))
	_cPosto  := Posicione("SU7",1,xFilial("SU7")+SC5->C5_OPERADO,"U7_POSTO")
	_cTransp := SC5->C5_TRANSP
	_cNomeTra:= Posicione("SA4",1,xFilial("SA4")+SC5->C5_TRANSP,"A4_NOME")
	_cVend   := SC5->C5_VEND1
	_cNomeVen:= Alltrim(Posicione("SA3",1,xFilial("SA3")+SC5->C5_VEND1,"A3_NOME"))
	_cMailVen:= Alltrim(Posicione("SA3",1,xFilial("SA3")+SC5->C5_VEND1,"A3_EMAIL"))
	_cTipoVen:= Posicione("SA3",1,xFilial("SA3")+SC5->C5_VEND1,"A3_TIPO")
	_cCont   := 'Produtos:'
	_cGera   := 'TOTAL (produto + frete + despesa)'
	_cIA	 := SC5->C5_MARGATU
	_cIL	 := SC5->C5_MARGLIB
	_cEndCli := SUBSTR(SC5->C5_ENDENT,1,60)  // End de entrega
	_cBaiCli := SUBSTR(SC5->C5_BAIRROE,1,30)
	_cMunCli := SC5->C5_MUNE
	_cEstCli := SC5->C5_ESTE
	_cCepCli := SC5->C5_CEPE
	
ELSE
	
	DbSelectArea("SCJ")
	_nOrc    := SCJ->CJ_NUM   //////  UA_NUM
	_cCodCli := SCJ->CJ_CLIENTE       ///// UA_CLIENTE
	_cCodPag := SCJ->CJ_CONDPAG      ////// UA_CONDPG
	_cPraEnt := SCJ->CJ_PRAENTR       ////
	_cDtVali := SCJ->CJ_VALIDA       /////   UA_DTLIM
	_cFatMin := SCJ->CJ_FATMIN      //////
	_cTipFre := SCJ->CJ_TPFRETE     ///////   UA_TPFRETE
	_cDestFre:= ""
	_cAc     := SCJ->CJ_AC          //////
	_cObs    := SCJ->CJ_OBS           //////  UA_OBS
	_cEmi    := DtoC(SCJ->CJ_EMISSAO)
	nVal_Fre := SCJ->CJ_FRETE  /// valor do Frete
	nVal_Des := SCJ->CJ_DESPESA  /// valor das Despesas
	_cOperado:= "" // Operador
	_cNomeOpe:= ""
	_cMailOpe:= ""
	_cPosto  := "" // Posto do Operador
	_cTransp := "" // Transportadora
	_cNomeTra:= "" // Nome da transportadora
	_cVend   := "" // Vendedor
	_cNomeVen:= "" // Nome do Vendedor
	_cMailVen:= "" // E-mail do Vendedor
	_cCont := 'Produtos:'
	_cGera := 'TOTAL (produto + frete + despesa)'
	
ENDIF

If _cTipFre == "F"
	_cTipFre := "FOB"
ELSEIF _cTipFre == "I"
	_cTipFre := "INCLUSO NA NOTA"
ELSEIF _cTipFre == "C"
	_cTipFre := "CIF"
ELSEIF _cTipFre == "N"
	_cTipFre := "NOSSO CARRO"
ELSEIF _cTipFre == "R"
	_cTipFre := "RETIRA"
ENDIF

DbSelectArea("SE4")
DbSetOrder(1)
_cNomPag := ""
IF DbSeek(xFilial("SE4")+_cCodPag)
	_cNomPag := SE4->E4_DESCRI
ENDIF

If SC5->C5_TIPO $ "BD"
	DbSelectArea("SA2")
	DbSetOrder(1)
	IF DbSeek(xFilial("SA2")+_cCodCli)
		
		_cNomCli :=  SA2->A2_NOME
		If !("TMK" $ FunName()) .And. !("MATA410" $ FunName())// MCVN - 13/08/2007
			_cEndCli :=  SUBSTR(SA2->A2_END,1,60)
			_cBaiCli :=  SUBSTR(SA2->A2_BAIRRO,1,30)
			_cMunCli :=  SA2->A2_MUN
			_cEstCli :=  SA2->A2_EST
			_cCepCli :=  SA2->A2_CEP
		Endif
		_cCgcCli :=  SA2->A2_CGC
		_cInsCli :=  SA2->A2_INSCR
		_cTelCli :=  SA2->A2_TEL
		_cFaxCli :=  SA2->A2_FAX
		_cSuframa := ""//SA2->A2_SUFRAMA
		_cCalcSuf := ""//SA2->A2_CALCSUF
	ENDIF
Else
	DbSelectArea("SA1")
	DbSetOrder(1)
	IF DbSeek(xFilial("SA1")+_cCodCli)
		
		_cNomCli :=  SA1->A1_NOME
		If !("TMK" $ FunName()) .And. !("MATA410" $ FunName())// MCVN - 13/08/2007
			_cEndCli :=  SUBSTR(SA1->A1_END,1,60)
			_cBaiCli :=  SUBSTR(SA1->A1_BAIRRO,1,30)
			_cMunCli :=  SA1->A1_MUN
			_cEstCli :=  SA1->A1_EST
			_cCepCli :=  SA1->A1_CEP
		Endif
		_cCgcCli :=  SA1->A1_CGC
		_cInsCli :=  SA1->A1_INSCR
		_cTelCli :=  If(Empty(SA1->A1_DDD),ALLTRIM(SA1->A1_TEL),"("+SA1->A1_DDD+")"+ALLTRIM(SA1->A1_TEL))
		_cFaxCli :=  SA1->A1_FAX
		_cSuframa:=  SA1->A1_SUFRAMA
		_cCalcSuf:=  SA1->A1_CALCSUF
		cCliST	 :=  SA1->A1_TIPO
		cRegEsp  :=  SA1->A1_DREGESP
		cContrib :=  SA1->A1_CONTRIB
	ENDIF
EndIf

xITEM_ORC 	:={}                         // Numero do Item do Pedido de Venda
xCOD_PRO  	:={}                         // Codigo  do Produto
xQTD_PRO  	:={}                         // Peso/Quantidade do Produto
xUM_PRO   	:={}                         // Peso/Quantidade do Produto
xDESC_PRO 	:={}                         // Peso/Quantidade do Produto
xREG_ANVI 	:={}                         // Registro Anvisa do Produto
xPRE_UNI  	:={}                         // Preco Unitario de Venda
xVAL_MERC 	:={}                         // Valor da Mercadoria
xAliq_Pro 	:={}                         // aliquota icms
xVal_cICM 	:={}                         // preco com ICMS incluso
xVal_IPI  	:={}
xIA		  	:={}
xIL		  	:={}
xVal_ST		:={}
xAL_ICMS	:={}
aDipST		:={}
//xDipST	:={}	//Mudança de varivel para que a mesma não gere erro de Type nas validações


If "TMK" $ FunName().or.(Type("lMenu") <> "U" .and. lMenu .and. (!"DIPAL10" $ FunName() .And. "MATA410" $ FunName()))
	dbSelectArea("SUB")                   // * Itens de Venda da N.F.
	dbSetOrder(1)
	IF DbSeek(xFilial("SUB")+SUA->UA_NUM)
		While SUB->(!Eof()) .AND. xFilial("SUB") == SUB->UB_FILIAL .AND. SUA->UA_NUM == SUB->UB_NUM
			AADD(xITEM_ORC ,ALLTRIM(SUB->UB_ITEM))     // UB_ITEM
			AADD(xCOD_PRO  ,ALLTRIM(SUB->UB_PRODUTO))  // UB_PRODUTO
			
			AADD(xIA  	   ,SUB->UB_MARGATU)
			AADD(xIL       ,SUB->UB_MARGITE)
			
			AADD(xQTD_PRO  ,SUB->UB_QUANT)             // UB QUANT
			AADD(xUM_PRO   ,ALLTRIM(SUB->UB_UM))       // UB_UM
			AADD(xDESC_PRO ,ALLTRIM(Posicione("SB1",1,xFilial("SB1")+SUB->UB_PRODUTO,"B1_DESC"))) // B1_DESC
			AADD(xALIQ_PRO ,Posicione("SB1",1,xFilial("SB1")+SUB->UB_PRODUTO,"B1_PICM")) // B1_PICM
			AADD(xPRE_UNI  ,Iif(nRadio==3,SUB->UB_VRUNIT / ((100-Posicione("SB1",1,xFilial("SB1")+SUB->UB_PRODUTO,"B1_PICM"))/100),SUB->UB_VRUNIT))  //  UB_VRUNIT
			AADD(xVAL_MERC ,SUB->UB_VLRITEM)           //  UB_VLRITEM
			AADD(xVAL_cICM ,SUB->UB_VRUNIT / ((100-Posicione("SB1",1,xFilial("SB1")+SUB->UB_PRODUTO,"B1_PICM"))/100) * SUB->UB_QUANT) //  VALOR COM ICMS INCLUSO
			_cTotG := _cTotG + SUB->UB_VLRITEM         // TOTAL GERAL
			_cTotI += SUB->UB_VRUNIT / ((100-Posicione("SB1",1,xFilial("SB1")+SUB->UB_PRODUTO,"B1_PICM"))/100) * SUB->UB_QUANT // TOTAL GERAL COM ICMS
			
			If !lErroVal  // MCVN - 20/10/2008
				If POSICIONE("SE4", 1, XFilial("SE4")+SUA->UA_CONDPG, "E4_USERDES") > 0 //11/11/2008
					If Round((SUB->UB_USERPRC * SUB->UB_QUANT)-SUB->UB_USERDES,2) <> SUB->UB_VLRITEM .And. (Empty(_cSuframa) .Or. _cCalcSuf = 'N')
						lErroVal := .T.
					Endif
				Else
					If Round((SUB->UB_VRUNIT * SUB->UB_QUANT),2) <> SUB->UB_VLRITEM .And. (Empty(_cSuframa) .Or. _cCalcSuf = 'N')
						lErroVal := .T.
					Endif
				Endif
			Endif
			SUB->(Dbskip())
		End
	ELSE
		dbSelectArea("SCK")                   // * Itens de Venda da N.F.
		dbSetOrder(1)
		IF DbSeek(xFilial("SCK")+SCJ->CJ_NUM)
			While !Eof() .AND. xFilial("SCK") == SCK->CK_FILIAL .AND. SCJ->CJ_NUM == SCK->CK_NUM
				AADD(xITEM_ORC ,ALLTRIM(SCK->CK_ITEM2))    ///// UB_ITEM
				AADD(xCOD_PRO  ,ALLTRIM(SCK->CK_PRODUTO))  ///// UB_PRODUTO
				AADD(xQTD_PRO  ,SCK->CK_QTDVEN)            ////// UB QUANT
				AADD(xUM_PRO   ,ALLTRIM(SCK->CK_UM))       ////// UB_UM
				AADD(xIA  	   ,0)
				AADD(xIL       ,0)
				dbSelectArea("SB1")                   // * Itens de Venda da N.F.
				dbSetOrder(1)
				IF DbSeek(xFilial("SB1")+SCK->CK_PRODUTO)
					AADD(xDESC_PRO ,ALLTRIM(SB1->B1_DESC))
				ENDIF
				AADD(xPRE_UNI  ,SCK->CK_PRCVEN)  ////  UB_VRUNIT
				AADD(xVAL_MERC ,SCK->CK_VALOR)   ////  UB_VLRITEM
				_cTotG := _cTotG + SCK->CK_VALOR
				
				If !lErroVal   // MCVN - 20/10/2008
					If Round((SCK->CK_PRCVEN * SCK->CK_QTDVEN),2) <> SCK->CK_VALOR .And. (Empty(_cSuframa) .Or. _cCalcSuf = 'N')
						lErroVal := .T.
					Endif
				Endif
				DbSelectArea("SCK")
				Dbskip()
			End
		ENDIF
	Endif
ElseIf "MATA410" $ FunName() // MCVN - 18/06/09
	dbSelectArea("SC6")                   // * ITENS DO PEDIDO DE VENDA
	dbSetOrder(1)
	IF DbSeek(xFilial("SC6")+SC5->C5_NUM)
		nItem := 1
		_nTtoPed:=CALCPED(SC5->C5_NUM)
		IniImp() 				//INICIO DAS INFORMACOES PARA CALCULO DOS IMPOSTOS
		While SC6->(!Eof()) .AND. xFilial("SC6") == SC6->C6_FILIAL .AND. SC5->C5_NUM == SC6->C6_NUM
			
			If ("MATA410"$FUNNAME())//Giovani Zago 13/03/2012
				AADD(xITEM_ORC ,Iif(Empty(SC6->C6_LICITA),ALLTRIM(SC6->C6_ITEM),alltrim(SC6->C6_LICITA))) // Giovani Zago 09/03/2012
			Else
				AADD(xITEM_ORC ,ALLTRIM(SC6->C6_ITEM))
			EndIf
			AADD(xCOD_PRO  ,ALLTRIM(SC6->C6_PRODUTO))
			AADD(xQTD_PRO  ,SC6->C6_QTDVEN)
			
			AADD(xIA  	   ,SC6->C6_MARGATU)
			AADD(xIL       ,SC6->C6_MARGITE)
			
			AADD(xUM_PRO   ,ALLTRIM(SC6->C6_UM))
			AADD(xDESC_PRO ,ALLTRIM(SC6->C6_DESCRI))
			AADD(xREG_ANVI ,Posicione("SB1",1,xFilial("SB1")+SC6->C6_PRODUTO,"B1_REG_ANV")) // B1_REG_ANV
			AADD(xALIQ_PRO ,Posicione("SB1",1,xFilial("SB1")+SC6->C6_PRODUTO,"B1_PICM")) // B1_PICM
			AADD(xPRE_UNI  ,Iif(nRadio==3 ,SC6->C6_PRCVEN / ((100-SB1->B1_PICM)/100),SC6->C6_PRCVEN))
			AADD(xVAL_MERC ,SC6->C6_VALOR)
			aAdd(xVAL_IPI  ,Round(U_CALCIPI(SC6->C6_NUM,SC6->C6_PRODUTO, SC6->C6_ITEM),2))
			/*
			--Adicionado nova regra de calculo da ST pela MATXFIS padrao
			--Tiago Stocco - Obify - 07/06/21
			*/
			//Verifica se tem frete para compor o valor da ST
			If nVal_Fre >0
				_nValItem := SC6->C6_VALOR + Round((SC6->C6_QTDVEN * SC6->C6_PRCVEN * nVal_Fre)/_nTtoPed,2)
			Else
				_nValItem := SC6->C6_VALOR
			EndIf
			ADDImp(_nValItem, SC6->C6_QTDVEN, SC6->C6_PRCVEN, SC6->C6_CLI, SC6->C6_LOJA, SC6->C6_PRODUTO, SC6->C6_TES)//Adicao os Itens para Imposto
			AADD(xVal_ST   ,MaFisRet(nItem,"IT_VALSOL"))
			_nTotST+=MaFisRet(nItem,"IT_VALSOL")
			/*                 
			/*
			If _cEstCli <> 'SP'	
				If cCliST == 'R' .And. (Empty(cRegEsp) .Or. SC5->C5_CLIENTE$GetNewPar("ES_STESPBA","010154")) .And. cContrib <> "2"
					If cEmpAnt == '01' .And. ('=ST=D'$SC5->C5_MENNOTA .or. SC5->C5_TIPODIP $"1")
						aDipST := u_M460SOLI(.T.)
					
						If Type('aDipST') <> 'U'
							AADD(xVal_ST   ,aDipST[2])					
							_nTotST+=aDipST[2]
						Else
						AADD(xVal_ST   ,0)					
						_nTotST+=0
					EndIf
					
					ElseIf cEmpant == '04'
						AADD(xAL_ICMS  ,0)
						AADD(xVal_ST ,Round(CalcSTItem(SC6->C6_PRODUTO,SC6->C6_VALOR),2))
					Else
						AADD(xVal_ST   ,0)
				Endif
			Else
				AADD(xVal_ST   ,0)
			EndIf
			*/
			If cEmpAnt == '01'
				If SB1->B1_ORIGEM$"1/2/3/6/7/8" .And. SC5->C5_ESTE<>"SP"
					_nPICMS := 4
				ElseIf SC5->C5_ESTE$"RJ/MG/PR/RS/SC"
					_nPICMS := 12
				ElseIf !(SC5->C5_ESTE$"RJ/MG/PR/RS/SC/SP")
					_nPICMS := 7
				Else
					_nPICMS := SB1->B1_PICM
				EndIf
				
				AADD(xAL_ICMS  ,_nPICMS)
			EndIf
			
			AADD(xVAL_cICM ,SC6->C6_PRCVEN / ((100-SB1->B1_PICM)/100) * SC6->C6_QTDVEN) //  VALOR COM ICMS INCLUSO
			
			_cTotG := _cTotG + SC6->C6_VALOR
			_cTotI += SC6->C6_PRCVEN / ((100-SB1->B1_PICM)/100) * SC6->C6_QTDVEN
			
			
			If !lErroVal  // MCVN - 20/10/2008
				If POSICIONE("SE4", 1, XFilial("SE4")+SUA->UA_CONDPG, "E4_USERDES") > 0 //11/11/2008
					If Round((SC6->C6_USERPRC * SC6->C6_QTDVEN)-SC6->C6_USERDES,2) <> SC6->C6_VALOR .And. (Empty(_cSuframa) .Or. _cCalcSuf = 'N')
						lErroVal := .T.
					Endif
				Else
					If Round((SC6->C6_PRCVEN  * SC6->C6_QTDVEN),2) <> SC6->C6_VALOR .And. (Empty(_cSuframa) .Or. _cCalcSuf = 'N')
						lErroVal := .T.
					Endif
				Endif
			Endif
			
			nItem++
			DbSelectArea("SC6")
			Dbskip()
		End
Endif
	
ElseIf "DIPAL10" $ FunName() //MCVN - 25/06/07
	_nDescICMS := 0
	dbSelectArea("UA4")                   // * Itens Edital
	dbSetOrder(1)
	IF DbSeek(xFilial("UA4")+UA1->UA1_CODIGO)
		While UA4->(!Eof()) .AND. xFilial("UA4") == UA4->UA4_FILIAL .AND. UA1->UA1_CODIGO == UA4->UA4_EDITAL
			AADD(xITEM_ORC ,Iif(!Empty(UA4->UA4_LOTE),ALLTRIM(UA4->UA4_LOTE)+"."+ALLTRIM(UA4->UA4_ITEMLT),UA4->UA4_ITEMAM))//ALLTRIM(UA4->UA4_ITEM))
			AADD(xCOD_PRO  ,ALLTRIM(UA4->UA4_PRODUT))
			AADD(xQTD_PRO  ,UA4->UA4_QUANT)
			AADD(xIA  	   ,0)
			AADD(xIL       ,0)
			AADD(xUM_PRO   ,ALLTRIM(UA4->UA4_UM))
			AADD(xDESC_PRO ,ALLTRIM(Posicione("SB1",1,xFilial("SB1")+UA4->UA4_PRODUT,"B1_DESC"))) // B1_DESC
			AADD(xREG_ANVI ,Posicione("SB1",1,xFilial("SB1")+SC6->C6_PRODUTO,"B1_REG_ANV")) // B1_REG_ANV
			AADD(xALIQ_PRO ,Posicione("SB1",1,xFilial("SB1")+UA4->UA4_PRODUT,"B1_PICM")) // B1_PICM
			AADD(xPRE_UNI  ,Iif(nRadio==3 ,UA4->UA4_PRCMIN / ((100-Posicione("SB1",1,xFilial("SB1")+UA4->UA4_PRODUT,"B1_PICM"))/100),UA4->UA4_PRCMIN))
			AADD(xVAL_MERC ,UA4->UA4_PRCMIN*UA4->UA4_QUANT)
			AADD(xVAL_cICM ,UA4->UA4_PRCMIN / ((100-Posicione("SB1",1,xFilial("SB1")+UA4->UA4_PRODUT,"B1_PICM"))/100) * UA4->UA4_QUANT) //  VALOR COM ICMS INCLUSO
			
			_cTotG := _cTotG + (UA4->UA4_PRCMIN*UA4->UA4_QUANT)         // TOTAL GERAL
			_cTotI += UA4->UA4_PRCMIN / ((100-Posicione("SB1",1,xFilial("SB1")+UA4->UA4_PRODUT,"B1_PICM"))/100) * UA4->UA4_QUANT // TOTAL GERAL COM ICMS
			
			If !lErroVal   // MCVN - 20/10/2008
				If Round((UA4->UA4_PRCMIN * UA4->UA4_QUANT),2) <> UA4->UA4_TOTAL .And. (Empty(_cSuframa) .Or. _cCalcSuf = 'N')
					lErroVal := .T.
				Endif
			Endif
			
			UA4->(Dbskip())
		End
		_nDescICMS := (_cTotI-_cTotG)
		If UA1->UA1_TIPO $ "6/2"  //MCVN - 05/10/2007
			_cObs      := "Desc.ICMS R$ "+Alltrim(Str(_nDescICMS,10,2))+" - "+Alltrim(UA1->UA1_PROCES)+" - "+Alltrim(UA1->UA1_NRCONC)
		Endif
	Else
	ENDIF
	
	
EndIf

While Len(xCOD_PRO) < nTamDet
	AADD(xITEM_ORC ," ")
	AADD(xCOD_PRO  ," ")
	AADD(xQTD_PRO  ," ")
	AADD(xUM_PRO   ," ")
	AADD(xDESC_PRO ," ")
	AADD(xREG_ANVI ," ")
	AADD(xPRE_UNI  ," ")
	AADD(xVAL_MERC ," ")
	AADD(xAliq_Pro ," ")
	AADD(xVal_cICM ," ")
	AADD(xVal_IPI  ," ")
	AADD(xVal_ST   ," ")
	AADD(xIA  	   ," ")
	AADD(xIL       ," ")
End

nIt := 1
nPagatu := 1

If lErroVal
	MsgAlert("Existe(m) erro(s) nos valores unitários e totais, FAVOR CONFERIR VALORES ANTES DE ENVIAR O ORÇAMENTO AO CLIENTE!","Atenção")
	_cFrom   := Lower(Alltrim(_cMailOpe))
	_cEmail  := SUPERGETMV("MV_#EMLTI",.F.,"ti@dipromed.com.br")+";"+Lower(Alltrim(_cMailOpe))
	_cAssunto:= EncodeUTF8("Problema nos valores unitários - Orçamento  "+_nOrc+" não impresso!  CONFERIR OS VALORES DO ORÇAMENTO","cp1252")
	Aadd( _aMsg , { "Operador: "            , _cOperado +" - "+ _cNomeOpe } )
	Aadd( _aMsg , { "Cliente:  "            , _cCodCli  +" - "+ _cNomCli  } )
	Aadd( _aMsg , { "Explicação: "          , _cExplWor } )
	U_UEnvMail(_cEmail,_cAssunto,_aMsg,"",_cFrom,_cFuncSent)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Impressao do relatorio                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nlin    	 := 50
Private ArialN6      := TFont():New("Arial"	,,6	,,.F.,,,,,.F.)
Private ArialN6B     := TFont():New("Arial"	,,6	,,.T.,,,,,.F.)
Private ArialN8      := TFont():New("Arial"	,,8	,,.F.,,,,,.F.)
Private ArialN8B     := TFont():New("Arial"	,,8	,,.T.,,,,,.F.)
Private ArialN9      := TFont():New("Arial"	,,9	,,.F.,,,,,.F.)
Private ArialN9B     := TFont():New("Arial"	,,9	,,.T.,,,,,.F.)
Private ArialN10     := TFont():New("Arial"	,,10,,.F.,,,,,.F.)
Private ArialN10B    := TFont():New("Arial"	,,10,,.T.,,,,,.F.)
Private ArialN10C    := TFont():New("Arial"	,,10,,.T.,,,,,.F.,.T.)
Private ArialN12     := TFont():New("Arial"	,,12,,.F.,,,,,.F.)
Private ArialN12B    := TFont():New("Arial"	,,12,,.T.,,,,,.F.)
Private ArialN14     := TFont():New("Arial"	,,14,,.F.,,,,,.F.)
Private ArialN14B    := TFont():New("Arial"	,,14,,.T.,,,,,.F.)
Private ArialN16     := TFont():New("Arial"	,,16,,.F.,,,,,.F.)
Private ArialN16B    := TFont():New("Arial"	,,16,,.T.,,,,,.F.)
Private ArialN18     := TFont():New("Arial"	,,18,,.F.,,,,,.F.)
Private ArialN18B    := TFont():New("Arial"	,,18,,.T.,,,,,.F.)
Private ArialN20     := TFont():New("Arial"	,,20,,.F.,,,,,.F.)
Private ArialN20B    := TFont():New("Arial"	,,20,,.T.,,,,,.F.)
Private Times14	     := TFont():New("Times New Roman",,14,,.T.,,,,,.F. )
Private Times20      := TFont():New("Times New Roman",,20,,.T.,,,,,.F. )
Private CourN10      := TFont():New("Courier New",,10,,.F.,,,,.T.,.F.)
Private CourN10B     := TFont():New("Courier New",,10,,.T.,,,,.T.,.F.)
Private CourN12      := TFont():New("Courier New",,12,,.F.,,,,.T.,.F.)
Private CourN12B     := TFont():New("Courier New",,12,,.T.,,,,.T.,.F.)
Private _lICM 		 := (nRadio == 3)
Private _cNomTel     := ""
Private cComNoPed    := 'ORC_'+SC5->C5_NUM+"_"+substr(time(),1,2)+substr(time(),4,2)+substr(time(),7,2)
//Private cComNoPed    := 'ORC_'+SC5->C5_NUM+"_"+substr(DTOS(dDatabase),7,2)+substr(dtos(ddatabase),5,2)+"_"+substr(time(),1,2)+substr(time(),4,2)+substr(time(),7,2)
Private oPrint 		 := FWMSPrinter():New(cComNoPed,6,.T.,,.T.,,,,,,,.F.) 
Private aDipSld	     :={}

cArquivo  := "C:\pedidos\"+cComNoPed+".pdf"

oPrint:SetResolution(72)
oPrint:SetLandScape()
oPrint:SetPaperSize(9)
oPrint:cPathPDF:= "C:\pedidos\"

_nORC := Iif("DIPAL10" $ FunName() .Or. "MATA410" $ FunName(),SC5->C5_NUM,SUA->UA_NUMSC5)

If nRadio == 1
	_cTelefon	:= If(cEmpAnt+cFilAnt == '0401',"(11) 4016-1506",If(_cPosto == '01',"APOIO:  0800-7700217","TELEVENDAS: 0800-0114066"))
	_cFax		:= If(cEmpAnt+cFilAnt == '0401',"FAX: (11) 4016-1506","FAX: 0800-0144997")
Else
	_cTelefon 	:= "TELEFONE: (11) 3646-0192"
	_cFax		:= "FAX: (11) 3646-0193"
EndIf

_cTitulo	:= If(nRadio = 4,"PROGRAMAÇÃO","ORCAMENTO")
_cTitulo2	:= If(nRadio != 1 .And. nRadio != 4,"LICITACOES","")
_cDipMail	:= If(nRadio != 1 .And. nRadio != 4,"publico",If(_cPosto == '01',"dipromed","televendas"))+"@dipromed.com.br"
_cDipMail   := If(cEmpAnt+cFilAnt == '0401',"www.healthquality.ind.br   -   vendas@healthquality.ind.br","www.dipromed.com.br  -  "+_cDipMail)

If Alltrim(_cTelCli) == Alltrim(_cFaxCli)
	_cNomTel := "Fone/Fax:"
Else
	_cNomTel := "Fone:"
	_CTELCLI := _cTelCli+If(!Empty(Alltrim(_cFaxCli))," - Fax: "+_cFaxCli,"")
Endif


nPagina 	:= 0
U_CabecPDF(@nlin)
U_CorpoPDF(@nLin)
U_FinalPDF()
U_RodapPDF()

oPrint:Endpage()


if _nRadio1 == 2 
	If _lRascunho
		MsgAlert("O e-mail não será enviado, pois foi selecionada a opção de Rascunho!","Atenção")
		oPrint:SetViewPDF(.T.)
		oPrint:Preview()//Visualiza antes de imprimir	
	Else       
		While File(cArquivo)
			fErase(cArquivo)
			If _lFlagMsg 
				MsgAlert("FECHAR o arquivo "+cArquivo+" antes de enviar o e-mail.","ATENÇÃO!")
			EndIf	
			_lFlagMsg := .T.
			Loop
		EndDo                                                                     
		oPrint:Print()
		_cTo		:= Alltrim(SA1->A1_EMAILD)+If(_cPosto $ '01/03',";"+_cMailVen,Space(1))+Space(60)
		_cBodyPrvt 	:= U_RetBody(@_cTo)
		If !Empty(_cTo)
			U_PDFMail(_cMailOpe,_cTo,_cTipoVen,.T.)		
		EndIf
		WinExec("Explorer.exe C:\pedidos\"+cComNoPed+".pdf")		
	EndIf
Else
	oPrint:SetViewPDF(.T.)
	oPrint:Preview()//Visualiza antes de imprimir	
EndIf
FreeObj(oPrint)
oPrint := Nil


Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³UTMKR3A    ºAutor  ³Microsiga           º Data ³  03/25/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AltC6Edit()
Local aArea 	:= GetArea()
Local oDlg
Local cCadastro := "Itens Do Edital"
Local aCpoEnch	:= {}
Local aPos	  	:= {010,000,600,600}
Local aButtons 	:= {}
Local nOpcA		:= 0
Local oOk		:= LoadBitmap( GetResources(), "LBOK" )
Local oNo		:= LoadBitmap( GetResources(), "LBNO" )
Local oChk
Local lMark		:= .F.
Local lRetorno   := .F.

Private lChk	 := .F.
Private aVetor	 := {}
Private oLbx
Private lInverte := .F.
Private nContLin := 0
Private lLote    := .F.

RegToMemory("SC6",.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Montagem dos campos da Enchoice 		   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea("SC6")
SC6->(dbSetOrder(1))
If SC6->(dbSeek(xFilial("SC6") + SC5->C5_NUM))

	While !SC6->(Eof()) .And. SC6->C6_FILIAL == xFilial("SC6") .And. SC6->C6_NUM == SC5->C5_NUM

		aAdd(aVetor,{SC6->C6_ITEM,SubStr(alltrim(SC6->C6_LICITA ),1,3), SC6->C6_PRODUTO, SC6->C6_DESCRI, SC6->C6_QTDVEN, SC6->C6_PRCVEN })

		SC6->(dbSkip())
	EndDo

	Define msDialog odlg title ccadastro from 000,000 to 300,850 pixel
	
	//Cria Enchoice
	//EnChoice( cAlias ,nReg, nOpcx, , , , aCpoEnch, aPos, {}, 3 )
	
	//Cria a listbox com os produtos do edital
	@ 010,000 listbox oLbx fields header "Item", "Item Edital", "Produto", "Descricao", "Quantidade", "Vlr. Unitario"  size 800,150 of oDlg pixel on dbLclick(u_EdLisC6(oLbx:nat))
	
	oLbx:SetArray( aVetor )
	oLbx:bLine := {|| {	aVetor[oLbx:nAt,1],;
	aVetor[oLbx:nAt,2],;
	aVetor[oLbx:nAt,3],;
	aVetor[oLbx:nAt,4],;
	aVetor[oLbx:nAt,5],;
	TransForm(aVetor[oLbx:nAt,6], "@E 999,999,999.99")}}
	
	Activate msDialog oDlg centered on init ;
	EnchoiceBar(oDlg, {|| nOpca := 1,oDlg:End()},{|| nOpca := 0,oDlg:End()},,aButtons)
	
EndIf

RestArea(aArea)

Return()
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³UTMKR3A    ºAutor  ³Microsiga           º Data ³  10/02/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CalcSTItem(cProduto,nValor)   
Local aAreaSB1 	  := SB1->(GetArea())
Local _nPRedICMS  := 0
Local _nVRedICMS  := 0
Local _nPICMSE    := 0
Local _nVICMSE    := 0
Local _nPIPI      := 0
Local _nVIPI      := 0
Local _nPIVA      := 0
Local _nVIVA      := 0
Local _nVICMSS    := 0
Local _nVST       := 0

DEFAULT cProduto  := ""
DEFAULT nValor 	  := 0

SB1->(dbSetOrder(1))
If SB1->(dbSeek(xFilial("SB1")+AllTrim(cProduto)))
	_nPRedICMS  := Posicione("SF4",1,xFilial('SF4')+SB1->B1_TE,"F4_BASEICM")
	_nVRedICMS  := _nPRedICMS/100 *(nValor)
	_nPICMSE    := Iif(Posicione("SA2",1,xFilial('SA2')+SB1->B1_PROC+SB1->B1_LOJPROC,"A2_OPTSIMP")='2',0,Iif(SA2->A2_EST='SP',SB1->B1_PICM,12))
	_nVICMSE    := _nPICMSE/100 * Iif(_nVRedICMS<>0,_nVRedICMS,nValor)
	_nPIPI      := SB1->B1_IPI
	_nVIPI      := _nPIPI/100 * nValor
	_nPIVA      := SB1->B1_PICMRET
	_nVIVA      := Iif(_nPIVA=0,0,(1+_nPIVA/100)*(Iif(_nPRedICMS=38.89,nValor*_nPRedICMS/100,nValor)+_nVIPI))
	_nVICMSS    := SB1->B1_PICM/100 * _nVIVA
	_nVST       := Iif(_nPIVA<>0,_nVICMSS - _nVICMSE,0)    
EndIf
	
RestArea(aAreaSB1)                               

Return(_nVST)

/*
|-----------------------------------------------------------------------------------|
|  Programa : IniImp                                       Data : 07/06/2021        |
|-----------------------------------------------------------------------------------|
|  Cliente  : DIPROMED                                        						|
|-----------------------------------------------------------------------------------|
|  Uso      : Rotina de calculo dos impostos através da MATXFIS 		            |
|-----------------------------------------------------------------------------------|
*/
Static Function IniImp()
Local aArea		:= GetArea()
Local aAreaSA1	:= SA1->(GetArea())
Local nPrcLista := 0
Local nValMerc  := 0
Local nDesconto := 0
Local nQtdPeso  := 0
Local nPosEntr  := 0
Local cProduto  := ""
Local nTotDesc  := 0
Local lSaldo    := .F.
Local nQtdEnt   := 0
Local aSolid	:= {}
Local nLancAp	:=	0
Local aTransp	:= {"",""}
Local aSaldos	:= {}
Local nValRetImp:= 0
Local cImpRet 	:= ""
Local cCliAux   := ""
Local cLjAux    := ""
Local cProsp    := ""
Local nTotal	:= 0
Private oLogApICMS
Private _nTotOper_ := 0		//total de operacoes (vendas) realizadas com um cliente - calculo de IB - Argentina
Private _aValItem_ := {}
Private cTpCli	   := SA1->A1_TIPO
MaFisSave()
MaFisEnd()
MaFisIni(SA1->A1_COD,SA1->A1_LOJA,"C","N",cTpCli,Nil,Nil,Nil,Nil,"MATA461",Nil,Nil,cProsp,Nil,Nil,Nil,Nil,aTransp)
/*
MaFisIni(SA1->A1_COD,;	// 1-Codigo Cliente/Fornecedor
		 SA1->A1_LOJA,;	// 2-Loja do Cliente/Fornecedor
		"C",;			// 3-C:Cliente , F:Fornecedor
		"N",;			// 4-Tipo da NF
		cTpCli,;		// 5-Tipo do Cliente/Fornecedor
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		"MATA461",;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		aTransp,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		nTotal,;
		Nil,;
		_cTipFre)
*/
Return

/*
|-----------------------------------------------------------------------------------|
|  Programa : ADDImp                                       Data : 07/06/2021        |
|-----------------------------------------------------------------------------------|
|  Cliente  : DIPROMED                                         						|
|-----------------------------------------------------------------------------------|
|  Uso      : Rotina de calculo dos impostos através da MATXFIS 		            |
|-----------------------------------------------------------------------------------|
*/
Static Function ADDImp(_nVALOR, _nQTDVEN, _nPRCVEN, _cCLIENT, _cLOJA, _cPRODUT, _cTES)
Local nRecOri   := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Agrega os itens para a funcao fiscal         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nQtdPeso := 0

cProduto := _cPRODUT
SB1->(dbSetOrder(1))
If SB1->(MsSeek(xFilial("SB1")+cProduto))
	nQtdPeso := SB1->B1_PESO
EndIf

SB2->(dbSetOrder(1))
SB2->(MsSeek(xFilial("SB2")+SB1->B1_COD+SB1->B1_LOCPAD))

SF4->(dbSetOrder(1))
SF4->(MsSeek(xFilial("SF4")+_cTES))

cNfOri     := Nil
cSeriOri   := Nil
nRecnoSD1  := Nil
nDesconto  := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Calcula o preco de lista                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

nValMerc  := _nVALOR
nPrcLista := _nPRCVEN
nQtd  	  := _nQTDVEN

If (nPrcLista == 0)
	nPrcLista := NoRound(nValMerc/nQtd,TamSX3("C6_PRCVEN")[2])
EndIf

nAcresFin := 0 //A410Arred(SCK->CK_PRCVEN*SCJ->CJ_ACRSFIN/100,"D2_PRCVEN")
nValMerc  += A410Arred(nQtd*nAcresFin,"D2_TOTAL")		
nDesconto := a410Arred(nPrcLista*nQtd,"D2_DESCON")-nValMerc
nDesconto := Max(0,nDesconto)
nPrcLista += nAcresFin
nValMerc  += nDesconto

//nPrcLista := SC6->C6_PRCVEN
//nValMerc  := SC6->C6_PRCVEN*SC6->C6_QTDVEN

dDataCnd  := dDatabase

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Agrega os itens para a funcao fiscal         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MaFisAdd(cProduto,;	      // 1-Codigo do Produto ( Obrigatorio )
		 _cTES,; 		 // 2-Codigo do TES ( Opcional )
		 nQtd,;  		 // 3-Quantidade ( Obrigatorio )
		 nPrcLista,;     // 4-Preco Unitario ( Obrigatorio )
		 nDesconto,;     // 5-Valor do Desconto ( Opcional )
		 cNfOri,;        // 6-Numero da NF Original ( Devolucao/Benef )
		 cSeriOri,;      // 7-Serie da NF Original ( Devolucao/Benef )
		 nRecOri,;        // 8-RecNo da NF Original no arq SD1/SD2
		 0,;              // 9-Valor do Frete do Item ( Opcional )
		 0,;              // 10-Valor da Despesa do item ( Opcional )
		 0,;              // 11-Valor do Seguro do item ( Opcional )
		 0,;              // 12-Valor do Frete Autonomo ( Opcional )
		 nValMerc,;       // 13-Valor da Mercadoria ( Obrigatorio )
		 0,;              // 14-Valor da Embalagem ( Opiconal )
		 ,;               // 15
		 ,;               // 16
		 "",;             // 17
		 0,;              // 18-Despesas nao tributadas - Portugal
		 0,;              // 19-Tara - Portugal
		 SF4->F4_CF)      // 20-CFO

MaFisWrite(1)
Return

/*
|-----------------------------------------------------------------------------------|
|  Programa : EndImp                                       Data : 18/08/2020        |
|-----------------------------------------------------------------------------------|
|  Cliente  : DIPROMED                                         						|
|-----------------------------------------------------------------------------------|
|  Uso      : Rotina de calculo dos impostos através da MATXFIS 		            |
|-----------------------------------------------------------------------------------|
*/
Static Function EndImp()
MaFisEnd()
MaFisRestore()
Return

/*
|-----------------------------------------------------------------------------------|
|  Programa : CALCPED                                       Data : 18/08/2020       |
|-----------------------------------------------------------------------------------|
|  Cliente  : DIPROMED                                         						|
|-----------------------------------------------------------------------------------|
|  Uso      : Rotina de calculo total do pedido							            |
|-----------------------------------------------------------------------------------|
*/
Static Function CALCPED(cNumPed)
Local _cQry 	:= "" 
Local _nTotPed	:= 0
_cQry :=" SELECT ISNULL(SUM(C6_VALOR),0) AS 'TOT'   "
_cQry +=" FROM "+RETSQLNAME ("SC6") + " SC6 "
_cQry +=" WHERE C6_NUM       =  '"+cNumPed+"' "
_cQry +=" AND SC6.D_E_L_E_T_ = ' '       "
_cQry +=" AND C6_FILIAL      =  '"+XFILIAL("SC6")+"' "
dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQry),'TMP2A',.T.,.F.)
DbSelectArea("TMP2A")
TMP2A->(dbgotop())
_nTotPed:=TMP2A->TOT
TMP2A->(DbCloseArea())
Return(_nTotPed)   
