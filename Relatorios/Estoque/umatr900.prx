#INCLUDE "MATR900.CH"
#INCLUDE "PROTHEUS.CH"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR900  ³ Autor ³ Nereu Humberto Junior ³ Data ³ 25.07.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Kardex fisico - financeiro                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function UMATR900()

Local oReport

If FindFunction("TRepInUse") .And. TRepInUse()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Interface de impressao                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:= ReportDef()
	oReport:PrintDialog()
Else
	MATR900R3()
EndIf

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³Nereu Humberto Junior  ³ Data ³25.07.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatorio                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()

Local oReport 
Local oSection1
Local oSection2
Local oSection3
Local oCell         
Local aOrdem    := {}
Local aSB1Cod   := {}
Local aSB1Ite   := {}
Local cPicB2Qt  := PesqPictQt("B2_QATU" ,18)
Local cTamB2Qt  := TamSX3('B2_QATU')[1]
Local cPicB2Cust:= PesqPict("SB2","B2_CM1",18)
Local cTamB2Cust:= TamSX3('B2_CM1')[1]
Local cPicD1Qt  := PesqPict("SD1","D1_QUANT" ,18)
Local cTamD1Qt  := TamSX3('D1_QUANT')[1]
Local cPicD1Cust:= PesqPict("SD1","D1_CUSTO",18)
Local cTamD1Cust:= TamSX3('D1_CUSTO')[1]
Local cPicD2Qt  := PesqPict("SD2","D2_QUANT" ,18)
Local cTamD2Qt  := TamSX3('D2_QUANT')[1]
Local cPicD2Cust:= PesqPict("SD2","D2_CUSTO1",18)
Local cTamD2Cust:= TamSX3('D2_CUSTO1')[1]
Local cTamD1CF  := TamSX3('D1_CF')[1]
Local lVEIC 	:= Upper(GetMV("MV_VEICULO"))=="S"
//Local nTamSX1	:= Len(SX1->X1_GRUPO)
Local nTamData 	:= IIF(__SetCentury(),10,8)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL",.F.))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta perguntas no SX1 a fim de preparar o relatorio p/     ³
//³ custo unificado por empresa                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusUnif
	MTR900CUnf(lCusUnif)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta perguntas no SX1 									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//AjustaSX1()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajustar o SX1 para SIGAVEI, SIGAPEC e SIGAOFI                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aSB1Cod	:= TAMSX3("B1_COD")
aSB1Ite	:= TAMSX3("B1_CODITE")

/*If lVeic
   dbSelectArea("SX1")
   dbSetOrder(1)
   dbSeek(PADR("MTR900",nTamSX1))
   Do While SX1->X1_GRUPO == PADR("MTR900",nTamSX1) .And. !SX1->(Eof())
      If "PRODU" $ Upper(SX1->X1_PERGUNT) .And. Upper(SX1->X1_TIPO) == "C" .And. ;
	     (SX1->X1_TAMANHO <> aSB1Ite[1] .Or. Upper(SX1->X1_F3) <> "VR4")
         RecLock("SX1",.F.)
         SX1->X1_TAMANHO := aSB1Ite[1]
         SX1->X1_F3 := "VR4"
         dbCommit()
         MsUnlock()
      EndIf
      dbSkip()
   EndDo
   dbCommitAll()
Else
   dbSelectArea("SX1")
   dbSetOrder(1)
   dbSeek(PADR("MTR900",nTamSX1))
   Do While SX1->X1_GRUPO == PADR("MTR900",nTamSX1) .And. !SX1->(Eof())
      If "PRODU" $ Upper(SX1->X1_PERGUNT) .And. Upper(SX1->X1_TIPO) == "C" .And. ;
  	     (SX1->X1_TAMANHO <> aSB1Cod[1] .Or. Upper(SX1->X1_F3) <> "SB1")
         RecLock("SX1",.F.)
         SX1->X1_TAMANHO := aSB1Cod[1]
         SX1->X1_F3 := "SB1"
         dbCommit()
         MsUnlock()
      EndIf
      dbSkip()
   EndDo
   dbCommitAll()
EndIf*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:= TReport():New("MATR900",STR0001,"MTR900", {|oReport| ReportPrint(oReport)},STR0002+" "+STR0003)
oReport:SetLandscape()    
oReport:SetTotalInLine(.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                     ³
//³ mv_par01         // Do produto                           ³
//³ mv_par02         // Ate o produto                        ³
//³ mv_par03         // Do tipo                              ³
//³ mv_par04         // Ate o tipo                           ³
//³ mv_par05         // Da data                              ³
//³ mv_par06         // Ate a data                           ³
//³ mv_par07         // Lista produtos s/movimento           ³
//³ mv_par08         // Qual Local (almoxarifado)            ³
//³ MV_par09         // (d)OCUMENTO/(s)EQUENCIA              ³
//³ mv_par10         // moeda selecionada ( 1 a 5 )          ³
//³ mv_par11         // Seq.de Digitacao /Calculo            ³
//³ mv_par12         // Pagina Inicial                       ³
//³ mv_par13         // Lista Transf Locali (Sim/Nao)        ³
//³ mv_par14         // Do  Grupo                            ³
//³ mv_par15         // Ate o Grupo                          ³
//³ mv_par16         // Seleciona Filial?                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTR900",.F.)

Aadd( aOrdem, STR0004 ) // " Codigo Produto "
Aadd( aOrdem, STR0005 ) // " Tipo do Produto"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da Sessao 1 - Dados do Produto                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection1 := TRSection():New(oReport,STR0059,{"SB1","SB2"},aOrdem) //"Produtos (Parte 1)"
oSection1 :SetTotalInLine(.F.)
oSection1 :SetReadOnly()
oSection1 :SetLineStyle()

If lVeic
	TRCell():New(oSection1,"B1_CODITE","SB1",/*Titulo*/	,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
EndIf
TRCell():New(oSection1,"cProduto"	,"   ",/*Titulo*/	,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
oSection1:Cell("cProduto"):GetFieldInfo("B1_COD")
TRCell():New(oSection1,"B1_DESC"	,"SB1",/*Titulo*/	,/*Picture*/,30				,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"B1_UM"		,"SB1",STR0053		,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"cTipo"		,"   ",STR0054		,"@!"		,2				,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"B1_GRUPO"	,"SB1",STR0055		,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"nCusMed"	,"   ",STR0056		,cPicB2Cust	,cTamB2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"nQtdSal"	,"   ",STR0034		,cPicB2Qt	,cTamB2Qt		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"nVlrSal"	,"   ",STR0035		,cPicB2Cust	,cTamB2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da Sessao 2 - Cont. dos dados do Produto           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection2 := TRSection():New(oSection1,STR0060,{"SB1","SB2"}) //"Produtos (Parte 2)"
oSection2 :SetTotalInLine(.F.)
oSection2 :SetReadOnly()
oSection2 :SetLineStyle()

If lVeic
	TRCell():New(oSection2	,"cProduto"		,"   ",/*Titulo*/	,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	oSection2:Cell("cProduto"):GetFieldInfo("B1_COD")
	TRCell():New(oSection2	,"B1_UM"		,"SB1",STR0053		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection2	,"cTipo"		,"   ",STR0054		,"@!"			,2			,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection2	,"B1_GRUPO"		,"SB1",STR0055		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
Endif	
If cPaisLoc<>"CHI"
	TRCell():New(oSection2	,"B1_POSIPI"	,"SB1",STR0057		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
Endif	
TRCell():New(oSection2		,"B2_LOCALIZ"	,"SB2",STR0058		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,{|| If(lCusUnif , MV_PAR08 , SB2->B2_LOCALIZ) })
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da Sessao 3 - Movimentos                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection3 := TRSection():New(oSection2,STR0061,{"SD1","SD2","SD3"}) //"Movimentação dos Produtos"
oSection3 :SetHeaderPage()
oSection3 :SetTotalInLine(.F.)
oSection3 :SetTotalText(STR0021) //"T O T A I S  :"
oSection3 :SetReadOnly()

TRCell():New(oSection3,"dDtMov"		,"   ",STR0036+CRLF+STR0037	,/*Picture*/,nTamData	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTES"		,"   ",STR0038				,"@!"		,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cCF"		,"   ",STR0039				,"@!"		,cTamD1CF	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cDoc"		,"   ",STR0040+CRLF+STR0041	,"@!"		,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nENTQtd"	,"   ",STR0042+CRLF+STR0043	,cPicD1Qt	,cTamD1Qt	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nENTCus"	,"   ",STR0042+CRLF+STR0044	,cPicD1Cust	,cTamD1Cust	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nCusMov"	,"   ",STR0045+CRLF+STR0046	,cPicB2Cust	,cTamB2Cust	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nSAIQtd"	,"   ",STR0047+CRLF+STR0043	,cPicD2Qt	,cTamD2Qt	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nSAICus"	,"   ",STR0047+CRLF+STR0044	,cPicD2Cust	,cTamD2Cust	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nSALDQtd"	,"   ",STR0048+CRLF+STR0043	,cPicB2Qt	,cTamB2Qt	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"nSALDCus"	,"   ",STR0048+CRLF+STR0049	,cPicB2Cust	,cTamB2Cust	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cCCPVPJOP"	,"   ",STR0050+CRLF+STR0051	,"@!"		,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)

// Definir o formato de valores negativos (para o caso de devolucoes)
oSection3:Cell("nENTQtd"):SetNegative("PARENTHESES")
oSection3:Cell("nENTCus"):SetNegative("PARENTHESES")
oSection3:Cell("nSAIQtd"):SetNegative("PARENTHESES")
oSection3:Cell("nSAICus"):SetNegative("PARENTHESES")

TRFunction():New(oSection3:Cell("nENTQtd")	,NIL,"SUM"		,/*oBreak*/,"",cPicD1Qt		,{|| oSection3:Cell("nENTQtd"):GetValue(.T.) },.T.,.F.)
TRFunction():New(oSection3:Cell("nENTCus")	,NIL,"SUM"		,/*oBreak*/,"",cPicD1Cust	,{|| oSection3:Cell("nENTCus"):GetValue(.T.) },.T.,.F.)

TRFunction():New(oSection3:Cell("nSAIQtd")	,NIL,"SUM"		,/*oBreak*/,"",cPicD2Qt		,{|| oSection3:Cell("nSAIQtd"):GetValue(.T.) },.T.,.F.)
TRFunction():New(oSection3:Cell("nSAICus")	,NIL,"SUM"		,/*oBreak*/,"",cPicD2Cust	,{|| oSection3:Cell("nSAICus"):GetValue(.T.) },.T.,.F.)

TRFunction():New(oSection3:Cell("nSALDQtd")	,NIL,"ONPRINT"	,/*oBreak*/,"",cPicB2Qt		,{|| oSection3:Cell("nSALDQtd"):GetValue(.T.) },.T.,.F.)
TRFunction():New(oSection3:Cell("nSALDCus")	,NIL,"ONPRINT"	,/*oBreak*/,"",cPicB2Cust	,{|| oSection3:Cell("nSALDCus"):GetValue(.T.) },.T.,.F.)

oSection3:SetNoFilter("SD1")
oSection3:SetNoFilter("SD2")
oSection3:SetNoFilter("SD3")

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³Nereu Humberto Junior  ³ Data ³21.06.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport)

Static lIxbConTes := NIL

Local oSection1 := oReport:Section(1) 
Local oSection2 := oReport:Section(1):Section(1)  
Local oSection3 := oReport:Section(1):Section(1):Section(1)  
Local nOrdem    := oReport:Section(1):GetOrder() 
Local cSelectD1 := '', cWhereD1 := ''
Local cSelectD2 := '', cWhereD2 := ''
Local cSelectD3 := '', cWhereD3 := ''
Local cSelectVe := '%%', cUnion := '%%'
Local aDadosTran:={}
Local lContinua := .F.
Local cProdAnt  := ""
Local cLocalAnt := ""
Local lFirst    := .T. , lTransEnd := .T.
Local aSalAtu   := { 0,0,0,0,0,0,0 }
Local cPicB2Qt2 := PesqPictQt("B2_QTSEGUM" ,18)
Local cTRBSD1	:= CriaTrab(,.F.)
Local cTRBSD2	:= Subs(cTrbSD1,1,7)+"A"
Local cTRBSD3	:= Subs(cTrbSD1,1,7)+"B"
Local nInd      := 0
Local cIndice	:= ""
Local cCampo1   := ""
Local cCampo2   := ""
Local cCampo3   := ""
Local cCampo4   := ""
Local cNumSeqTr := "" , nRegTr := 0
Local cSeqIni 	:= Replicate("z",6)
Local nTotRegs  := 0
Local cAlias    := ""
// Indica se esta listando relatorio do almox. de processo
Local lLocProc  := mv_par08 == GetMv("MV_LOCPROC")
// Indica se deve imprimir movimento invertido (almox. de processo)
Local lInverteMov :=.F.
Local lPriApropri :=.T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe ponto de entrada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lTesNEst := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Codigo do produto importado - NAO DEVE SER LISTADO           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cProdImp := GetMV("MV_PRODIMP")

Local cWhereB1A:= " " 
Local cWhereB1B:= " " 
Local cWhereB1C:= " " 
Local cWhereB1D:= " " 

Local cQueryB1A:= " " 
Local cQueryB1B:= " " 
Local cQueryB1C:= " " 
Local cQueryB1D:= " " 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Concessionaria de Veiculos                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lVEIC    := Upper(GetMV("MV_VEICULO"))=="S"

Local lImpSMov := .F.
Local lImpS3   := .F.
LOCAL cProdMNT := GetMv("MV_PRODMNT")
LOCAL cProdTER := GetMv("MV_PRODTER")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para processamento de Filiais           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aFilsCalc := MatFilCalc( mv_par16 == 1 )
Local cFilBack  := cFilAnt
Local nForFilial:= 0

#IFNDEF TOP
	Local cCondicao := ""
#ELSE
	Local cAliasTop := GetNextAlias()
#ENDIF

Private bBloco   := { |nV,nX| Trim(nV)+IIf(Valtype(nX)='C',"",Str(nX,1)) }

cProdMNT := cProdMNT + Space(15-Len(cProdMNT))
cProdTER := cProdTER + Space(15-Len(cProdTER))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL",.F.))

lCusUnif:=lCusUnif .And. mv_par08 == "**"

Private lDev := .F. // Flag que indica se nota ‚ devolu‡ao (.T.) ou nao (.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ aFilsCalc - Array com filiais a serem processadas            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aFilsCalc)

	For nForFilial := 1 To Len( aFilsCalc )
	
		If aFilsCalc[ nForFilial, 1 ]
		
			cFilAnt := aFilsCalc[ nForFilial, 2 ]

			oReport:EndPage() //Reinicia Pagina
			
			oReport:SetTitle(OemToAnsi(STR0008)+IIf(mv_par11==1,OemToAnsi(STR0009),OemToAnsi(STR0010) ) + If(lCusUnif,"",OemToAnsi(STR0011)+" "+mv_par08)) // "KARDEX FISICO-FINANCEIRO "###"(SEQUENCIA)"###"(CALCULO)"###"L O C A L :"
				
			If nOrdem == 1
				oReport:SetTitle( oReport:Title()+Alltrim(STR0017+STR0004+STR0018+AllTrim(GetMv("MV_SIMB"+Ltrim(Str(mv_par10))))+")")+' - ' + aFilsCalc[ nForFilial, 3 ] ) //" (Por "###" ,em "
			Else
				oReport:SetTitle( oReport:Title()+Alltrim(STR0017+STR0005+STR0018+AllTrim(GetMv("MV_SIMB"+Ltrim(Str(mv_par10))))+")")+' - ' + aFilsCalc[ nForFilial, 3 ] ) //" (Por "###" ,em "
			EndIf
				
			If lVeic
				oSection1:Cell("cProduto"	):Disable()
				oSection1:Cell("B1_UM"		):Disable()
				oSection1:Cell("cTipo"		):Disable()
				oSection1:Cell("B1_GRUPO"	):Disable()
			EndIf
				
			If mv_par09 $ "Ss"
				oSection3:Cell("cDoc"):SetTitle(STR0052+CRLF+STR0041) //"SEQUENCIA"
			EndIf	

			dbSelectArea("SD1")   // Itens de Entrada
			nTotRegs += LastRec()
			
			dbSelectArea("SD2")   // Itens de Saida
			nTotRegs += LastRec()
			
			dbSelectArea("SD3")   // movimentacoes internas (producao/requisicao/devolucao)
			nTotRegs += LastRec()
			
			dbSelectArea("SB2")  // Saldos em estoque
			dbSetOrder(1)
			nTotRegs += LastRec()
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³MTAAVLTES - Ponto de Entrada executado durante a montagem do relatorio  |
			//|            para verificar se devera considerar TES que nao atualiza    |
			//|            saldos em estoque.                                          |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lIxbConTes := IF(lIxbConTes == NIL,ExistBlock("MTAAVLTES"),lIxbConTes)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Filtragem do relatorio                                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			#IFDEF TOP
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Transforma parametros Range em expressao SQL                            ³	
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MakeSqlExpr(oReport:uParam)
				 
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Query do relatorio da secao 1                                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oReport:Section(1):BeginQuery()	
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do SELECT da tabela SD1                                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cSelectD1 := "% D1_CUSTO"
				If mv_par10 > 1
					cSelectD1 += Str(mv_par10,1,0) // Coloca a Moeda do Custo
				EndIf
				cSelectD1 += " CUSTO,"
				cSelectD1 += "%"
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do SELECT da tabela SB1 para MV_VEICULO                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
				cSelectVe := "%" 
				cSelectVe += ","
				If lVEIC
					cSelectVe += "SB1.B1_CODITE B1_CODITE,"
				EndIf
				cSelectVe += "%" 
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do Where da tabela SD1                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
				cWhereD1 := "%" 
				cWhereD1 += "AND" 
				If !lCusUnif
					cWhereD1 += " D1_LOCAL = '" + mv_par08 + "' AND"
				EndIf
				cWhereD1 += "%" 
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do SELECT da tabela SD2                                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			    cSelectD2 := "% D2_CUSTO"
				cSelectD2 += Str(mv_par10,1,0) // Coloca a Moeda do Custo
				cSelectD2 += " CUSTO,"
			    cSelectD2 += "%"	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do Where da tabela SD1                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
				cWhereD2 := "%" 
				cWhereD2 += "AND" 
				If !lCusUnif
					cWhereD2 += " D2_LOCAL = '" + mv_par08 + "' AND"
				EndIf
				cWhereD2 += "%"    
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do SELECT da tabelas SD3                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cSelectD3 := "% D3_CUSTO"
				cSelectD3 += Str(mv_par10,1,0) // Coloca a Moeda do Custo
				cSelectD3 +=	" CUSTO," 
				cSelectD3 += "%"    
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do WHERE da tabela SD3                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			    cWhereD3 := "%"
				If SuperGetMV('MV_D3ESTOR', .F., 'N') == 'N'
					cWhereD3 += " D3_ESTORNO <> 'S' AND"
				EndIf
				If SuperGetMV('MV_D3SERVI', .F., 'N') == 'N' .And. IntDL()
					cWhereD3 += " ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
					cWhereD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+SuperGetMV('MV_CQ', .F., '98')+"') ) AND"
				EndIf
				If !lCusUnif .And. !lLocProc
					cWhereD3 += " D3_LOCAL = '"+mv_par08+"' AND" 
				EndIf
				If	!lVEIC
					cWhereD3+= " SB1.B1_COD >= '"+mv_par01+"' AND SB1.B1_COD <= '"+mv_par02+"' AND"
				Else
					cWhereD3+= " SB1.B1_CODITE >= '"+mv_par01+"' AND SB1.B1_CODITE <= '"+mv_par02+"' AND"
				EndIf	
				cWhereD3 += " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
				cWhereD3 += " SB1.B1_GRUPO >= '"+mv_par14+"' AND SB1.B1_GRUPO <= '"+mv_par15+"' AND SB1.B1_COD <> '"+cProdimp+"' AND "
				cWhereD3 += " SB1.D_E_L_E_T_=' ' AND"
				cWhereD3 += "%"	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Complemento do WHERE da tabela SB1 para todos os selects                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cWhereB1A:= "%" 
			   	cWhereB1B:= "%" 
			    cWhereB1C:= "%" 
			    cWhereB1D:= "%" 	
				If	!lVEIC
					cWhereB1A+= " AND SB1.B1_COD >= '"+mv_par01+"' AND SB1.B1_COD <= '"+mv_par02+"'"
					cWhereB1B+= " AND SB1.B1_COD = SB1EXS.B1_COD"
					cWhereB1C+= " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
					cWhereB1D+= " SB1EXS.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1EXS.B1_COD >= '"+mv_par01+"' AND SB1EXS.B1_COD <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"
				Else
					cWhereB1A+= " AND SB1.B1_CODITE >= '"+mv_par01+"' AND SB1.B1_CODITE <= '"+mv_par02+"'"
					cWhereB1B+= " AND SB1.B1_COD = SB1EXS.B1_COD"
					cWhereB1C+= " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
					cWhereB1D+= " SB1EXS.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1EXS.B1_CODITE >= '"+mv_par01+"' AND SB1EXS.B1_CODITE <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"
				EndIf	
			
				cWhereB1C += " SB1.B1_GRUPO >= '"+mv_par14+"' AND SB1.B1_GRUPO <= '"+mv_par15+"' AND SB1.B1_COD <> '"+cProdimp+"' AND "
				cWhereB1C += " SB1.D_E_L_E_T_=' '"
				cWhereB1D += " SB1EXS.B1_GRUPO >= '"+mv_par14+"' AND SB1EXS.B1_GRUPO <= '"+mv_par15+"' AND SB1EXS.B1_COD <> '"+cProdimp+"' AND "
				cWhereB1D += " SB1EXS.D_E_L_E_T_=' '"	
				
				cQueryB1A:= Subs(cWhereB1A,2)
				cQueryB1B:= Subs(cWhereB1B,2)
				cQueryB1C:= Subs(cWhereB1C,2)
				cQueryB1D:= Subs(cWhereB1D,2)
				
				cWhereB1A+= "%" 
			   	cWhereB1B+= "%" 
			    cWhereB1C+= "%" 
			    cWhereB1D+= "%" 	
			 	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ So inclui as condicoes a seguir qdo lista produtos sem ³
				//³ movimento                                              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cQueryD1 := " FROM "
				cQueryD1 += RetSqlName("SB1") + " SB1"
				cQueryD1 += (", " + RetSqlName("SD1")+ " SD1 ")
				cQueryD1 += (", " + RetSqlName("SF4")+ " SF4 ")
				cQueryD1 += " WHERE SB1.B1_COD = D1_COD"
				cQueryD1 += (" AND D1_FILIAL = '"+xFilial("SD1")+"'")
				cQueryD1 += (" AND F4_FILIAL = '" + xFilial("SF4") + "'")
				cQueryD1 += (" AND SD1.D1_TES = F4_CODIGO AND F4_ESTOQUE = 'S'")
				cQueryD1 += (" AND D1_DTDIGIT >= '" + DTOS(mv_par05) + "'")
				cQueryD1 += (" AND D1_DTDIGIT <= '" + DTOS(mv_par06) + "'")
				cQueryD1 +=  " AND D1_ORIGLAN <> 'LF'"
				If !lCusUnif
					cQueryD1 += " AND D1_LOCAL = '" + mv_par08 + "'"
				EndIf
				cQueryD1 += " AND SD1.D_E_L_E_T_=' ' AND SF4.D_E_L_E_T_=' '"
				
				cQueryD2 := " FROM "
				cQueryD2 += RetSqlName("SB1") + " SB1 , "+ RetSqlName("SD2")+ " SD2 , "+ RetSqlName("SF4")+" SF4 "
				cQueryD2 += " WHERE SB1.B1_COD = D2_COD AND D2_FILIAL = '"+xFilial("SD2")+"'"
				cQueryD2 += " AND F4_FILIAL = '"+xFilial("SF4")+"' AND SD2.D2_TES = F4_CODIGO AND F4_ESTOQUE = 'S'"
				cQueryD2 += " AND D2_EMISSAO >= '"+DTOS(mv_par05)+"' AND D2_EMISSAO <= '"+DTOS(mv_par06)+"'"
				cQueryD2 += " AND D2_ORIGLAN <> 'LF'"
				If !lCusUnif
					cQueryD2 += " AND D2_LOCAL = '"+mv_par08+"'"
				EndIf
				cQueryD2 += " AND SD2.D_E_L_E_T_=' ' AND SF4.D_E_L_E_T_=' '"	
				
				cQueryD3 := " FROM "
				cQueryD3 += RetSqlName("SB1") + " SB1 , "+ RetSqlName("SD3")+ " SD3 "
				cQueryD3 += " WHERE SB1.B1_COD = D3_COD AND D3_FILIAL = '"+xFilial("SD3")+"' "
				cQueryD3 += " AND D3_EMISSAO >= '"+DTOS(mv_par05)+"' AND D3_EMISSAO <= '"+DTOS(mv_par06)+"'"
				If SuperGetMV('MV_D3ESTOR', .F., 'N') == 'N'
					cQueryD3 += " AND D3_ESTORNO <> 'S'"
				EndIf
				If SuperGetMV('MV_D3SERVI', .F., 'N') == 'N' .And. IntDL()
					cQueryD3 += " AND ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
					cQueryD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+SuperGetMV('MV_CQ', .F., '98')+"') )"
				EndIf					
				If !lCusUnif .And. !lLocProc
					cQueryD3 += " AND D3_LOCAL = '"+mv_par08+"'"
				EndIf
				cQueryD3 += " AND SD3.D_E_L_E_T_=' '"	
				
				cQuerySub:= "SELECT 1 "
				
				If mv_par07 == 1
					cQuery2 := " AND NOT EXISTS (" + cQuerySub + cQueryD1
					cQuery2 += cQueryB1B
					cQuery2 += " AND "
					cQuery2 += cQueryB1C
					cQuery2 += ") AND NOT EXISTS ("
					cQuery2 += cQuerySub + cQueryD2
					cQuery2 += cQueryB1B
					cQuery2 += " AND "
					cQuery2 += cQueryB1C
					cQuery2 += ") AND NOT EXISTS ("
					cQuery2 += cQuerySub + cQueryD3
					cQuery2 += cQueryB1B
					cQuery2 += " AND "
					cQuery2 += cQueryB1C + ")"
			        
					cUnion := "%"
					cUnion += " UNION SELECT 'SB1'"		// 01
					cUnion += ", SB1EXS.B1_COD"			// 02
					cUnion += ", SB1EXS.B1_TIPO"		// 03
					cUnion += ", SB1EXS.B1_UM"			// 04
					cUnion += ", SB1EXS.B1_GRUPO"		// 05
					cUnion += ", SB1EXS.B1_DESC"		// 06
					cUnion += ", SB1EXS.B1_POSIPI"		// 07
					cUnion += ", ''"					// 08
					cUnion += ", ''"					// 09
					cUnion += ", ''"					// 10
					cUnion += ", ''"					// 11
					cUnion += ", ''"					// 12
					cUnion += ", ''"					// 13
					cUnion += ", ''"					// 14
					cUnion += ", 0"						// 15
					cUnion += ", 0"						// 16
					cUnion += ", ''"					// 17
					cUnion += ", ''"					// 18
					cUnion += ", ''"					// 19
					cUnion += ", ''"					// 20
					cUnion += ", ''"					// 21
					cUnion += ", ''"					// 22
					cUnion += ", ''"					// 23
					cUnion += ", ''"					// 24
					cUnion += ", 0"						// 25
					cUnion += ", ''"					// 26
					cUnion += ", ''"					// 27
					If lVEIC
						cUnion += ", SB1EXS.B1_CODITE CODITE"	// 28
					EndIf		
					cUnion += ", 0"						// 29		   
					cUnion += " FROM "+RetSqlName("SB1") + " SB1EXS WHERE"
					cUnion += cQueryB1D
					cUnion += cQuery2
					cUnion += "%"
				EndIf
				
				cOrder := "%"
				If ! lVEIC
					If nOrdem == 1 //" Codigo Produto "###" Tipo do Produto"
						cOrder += " 2,"
					ElseIf nOrdem == 2
						cOrder += " 3,2,"
					EndIf
				Else
					If nOrdem ==1 //" Codigo Produto "###" Tipo do Produto"
						cOrder += " 28, 2, 5," 	// B1_CODITE, B1_COD, B1_GRUPO
					ElseIf nOrdem == 2
						cOrder += " 3, 28, 2, 5," // B1_TIPO, B1_CODITE, B1_COD, B1_GRUPO
					EndIf
				EndIf
			
				If mv_par11 == 1
					cOrder += "17,12"
				Else
					If lCusUnif
						cOrder += "8,12"
					Else
						cOrder += "17,8,12"
					EndIf
				EndIf	
				cOrder += "%"
				
				BeginSql Alias cAliasTop
				
					SELECT 	'SD1' ARQ, 				//-- 01 ARQ
							 SB1.B1_COD PRODUTO, 	//-- 02 PRODUTO
							 SB1.B1_TIPO TIPO, 		//-- 03 TIPO
							 SB1.B1_UM,   			//-- 04 UM
							 SB1.B1_GRUPO,      	//-- 05 GRUPO
							 SB1.B1_DESC,      		//-- 06 DESCR
						     SB1.B1_POSIPI, 		//-- 07
						     D1_SEQCALC SEQCALC,    //-- 08
							 D1_DTDIGIT DATA,		//-- 09 DATA
							 D1_TES TES,			//-- 10 TES
							 D1_CF CF,				//-- 11 CF
							 D1_NUMSEQ SEQUENCIA,	//-- 12 SEQUENCIA
							 D1_DOC DOCUMENTO,		//-- 13 DOCUMENTO
							 D1_SERIE SERIE,		//-- 14 SERIE
							 D1_QUANT QUANTIDADE,	//-- 15 QUANTIDADE
							 D1_QTSEGUM QUANT2UM,	//-- 16 QUANT2UM
							 D1_LOCAL ARMAZEM,		//-- 17 ARMAZEM
				             ' ' PROJETO,			//-- 18 PROJETO
							 ' ' OP,				//-- 19 OP
							 ' ' CC,				//-- 20 OP
							 D1_FORNECE FORNECEDOR,	//-- 21 FORNECEDOR
							 D1_LOJA LOJA,			//-- 22 LOJA
							 ' ' PEDIDO,            //-- 23 PEDIDO
							 D1_TIPO TIPONF,		//-- 24 TIPO NF
							 %Exp:cSelectD1%		//-- 25 CUSTO 
							 ' ' TRT, 				//-- 26 TRT
							 D1_LOTECTL LOTE 	   	//-- 27 LOTE
							 %Exp:cSelectVe%       	//-- 28 CODITE
							 SD1.R_E_C_N_O_ NRECNO  //-- 29 RECNO
							 					 
					FROM %table:SB1% SB1,%table:SD1% SD1,%table:SF4% SF4
					
					WHERE SB1.B1_COD     =  SD1.D1_COD		AND  	SD1.D1_FILIAL  =  %xFilial:SD1%		AND
						  SF4.F4_FILIAL  =  %xFilial:SF4%  	AND 	SD1.D1_TES     =  SF4.F4_CODIGO		AND
						  SF4.F4_ESTOQUE =  'S'				AND 	SD1.D1_DTDIGIT >= %Exp:mv_par05%   AND
						  SD1.D1_DTDIGIT <= %Exp:mv_par06%	AND		SD1.D1_ORIGLAN <> 'LF'				   
						  %Exp:cWhereD1%
						  SD1.%NotDel%						AND 	SF4.%NotDel%                           
						  %Exp:cWhereB1A%                   AND
						  %Exp:cWhereB1C%
						  
				    UNION
				    
					SELECT 'SD2',	     			
							SB1.B1_COD,	        	
							SB1.B1_TIPO,		    
							SB1.B1_UM,				
							SB1.B1_GRUPO,		    
							SB1.B1_DESC,		    
							SB1.B1_POSIPI,
							D2_SEQCALC,
							D2_EMISSAO,				
							D2_TES,					
							D2_CF,					
							D2_NUMSEQ,				
							D2_DOC,					
							D2_SERIE,				
							D2_QUANT,				
							D2_QTSEGUM,				
							D2_LOCAL,				
							' ',					
							' ',					
							' ',					
							D2_CLIENTE,				
							D2_LOJA,				
							D2_PEDIDO,
							D2_TIPO,				
							%Exp:cSelectD2%			
							' ', 					
							D2_LOTECTL
							%Exp:cSelectVe%
							SD2.R_E_C_N_O_ SD2RECNO //-- 29 RECNO
							
					FROM %table:SB1% SB1,%table:SD2% SD2,%table:SF4% SF4
					
					WHERE	SB1.B1_COD     =  SD2.D2_COD		AND	SD2.D2_FILIAL  = %xFilial:SD2%		AND
							SF4.F4_FILIAL  = %xFilial:SF4% 		AND	SD2.D2_TES     =  SF4.F4_CODIGO		AND
							SF4.F4_ESTOQUE =  'S'				AND	SD2.D2_EMISSAO >= %Exp:mv_par05%	AND
							SD2.D2_EMISSAO <= %Exp:mv_par06%	AND	SD2.D2_ORIGLAN <> 'LF'				   
							%Exp:cWhereD2%
							SD2.%NotDel%						AND SF4.%NotDel%						   
							%Exp:cWhereB1A%                     AND
						  	%Exp:cWhereB1C%
			
					UNION		
				
					SELECT 	'SD3',	    			
							SB1.B1_COD,	    	    
							SB1.B1_TIPO,		    
							SB1.B1_UM,				
							SB1.B1_GRUPO,	     	
							SB1.B1_DESC,		    
							SB1.B1_POSIPI,
							D3_SEQCALC,
							D3_EMISSAO,				
							D3_TM,					
							D3_CF,					
							D3_NUMSEQ,				
							D3_DOC,					
							' ',					
							D3_QUANT,				
							D3_QTSEGUM,				
							D3_LOCAL,				
							D3_PROJPMS,
							D3_OP,					
							D3_CC,
							' ',					
							' ',					
							' ',					
							' ',									
							%Exp:cSelectD3%			
							D3_TRT, 
							D3_LOTECTL
							%Exp:cSelectVe%
							SD3.R_E_C_N_O_ SD3RECNO //-- 29 RECNO
			
					FROM %table:SB1% SB1,%table:SD3% SD3
			
					WHERE	SB1.B1_COD     =  SD3.D3_COD 		AND SD3.D3_FILIAL  =  %xFilial:SD3%		AND
							SD3.D3_EMISSAO >= %Exp:mv_par05%	AND	SD3.D3_EMISSAO <= %Exp:mv_par06%	AND
							%Exp:cWhereD3% 	
							SD3.%NotDel% 
							
					%Exp:cUnion%			
			
					ORDER BY %Exp:cOrder%
				
				EndSql 
			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Metodo EndQuery ( Classe TRSection )                                    ³
				//³                                                                        ³
				//³Prepara o relatorio para executar o Embedded SQL.                       ³
				//³                                                                        ³
				//³ExpA1 : Array com os parametros do tipo Range                           ³
				//³                                                                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Inicio da impressao do fluxo do relatorio                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea(cAliasTop)
				oReport:SetMeter(nTotRegs)
				
				TcSetField(cAliasTop,DATA ,"D", TamSx3("D1_DTDIGIT")[1], TamSx3("D1_DTDIGIT")[2] )

				While !oReport:Cancel() .And. !(cAliasTop)->(Eof())
					
					If oReport:Cancel()
						Exit
					EndIf
					
					oReport:IncMeter()
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Se nao encontrar no arquivo de saldos ,nao lista ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SB2")
					If !dbSeek(xFilial("SB2")+(cAliasTop)->PRODUTO+If(lCusUnif,"",mv_par08))
						dbSelectArea(cAliasTop)
						dbSkip()
						Loop
					EndIf
					
					dbSelectArea(cAliasTop)
					cProdAnt  := (cAliasTop)->PRODUTO
					cLocalAnt := SB2->B2_LOCAL
					
					lFirst:=.F.
			
					MR900ImpS1(@aSalAtu,cAliasTop,.T.,lVEIC,lCusUnif,oSection1,oSection2,oReport)
					
					oSection3:Init()
					While !oReport:Cancel() .And. !(cAliasTop)->(Eof()) .And. (cAliasTop)->PRODUTO = cProdAnt .And. If(lCusUnif .Or. lLocProc,.T.,IIf((cAliasTop)->ARQ <> 'SB1',(cAliasTop)->ARMAZEM==cLocalAnt,.T.))
						oReport:IncMeter()
						lContinua := .F.
						lImpSMov  := .F.
						If Alltrim((cAliasTop)->ARQ) $ "SD1/SD2"
							lFirst:=.T.
							SF4->(dbSeek(xFilial("SF4")+(cAliasTop)->TES))
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Executa ponto de entrada para verificar se considera TES que ³
							//³ NAO ATUALIZA saldos em estoque.                              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
								lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
								lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
							EndIf
							If SF4->F4_ESTOQUE != "S" .And. !lTesNEst
								dbSkip()
								Loop
							EndIf
						ElseIf Alltrim((cAliasTop)->ARQ) == "SD3"
							lFirst:=.T.
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Quando movimento ref apropr. indireta, so considera os         ³
							//³ movimentos com destino ao almoxarifado de apropriacao indireta.³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							lInverteMov:=.F.
							If (cAliasTop)->ARMAZEM != cLocalAnt .Or. lCusUnif
								If !(Substr((cAliasTop)->CF,3,1) == "3")
									If !lCusUnif
										dbSkip()
										Loop
									EndIf
								ElseIf lPriApropri
									lInverteMov:=.T.
								EndIf
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Caso seja uma transferencia de localizacao verifica se lista   ³
							//³ o movimento ou nao                                             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If mv_par13 == 2 .And. Substr((cAliasTop)->CF,3,1) == "4"
								cNumSeqTr := (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM)
								aDadosTran:={(cAliasTOP)->TES,(cAliasTOP)->QUANTIDADE,(cAliasTOP)->CUSTO,(cAliasTOP)->QUANT2UM,(cAliasTOP)->TIPO,;
								(cAliasTOP)->DATA,(cAliasTOP)->CF,(cAliasTOP)->SEQUENCIA,(cAliasTOP)->DOCUMENTO,(cAliasTOP)->PRODUTO,;
								(cAliasTOP)->OP,(cAliasTOP)->PROJETO,(cAliasTOP)->CC,(cAliasTOP)->ARQ}
								dbSkip()
								If (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM) == cNumSeqTr
									dbSkip()
									Loop
								Else
									lContinua := .T.
									If !Localiza(aDadosTran[10])
										If lFirst
											oSection3:Cell("dDtMov"):SetValue(STOD(aDadosTran[6]))
											oSection3:Cell("cTES"):SetValue(aDadosTran[1])
											If ( cPaisLoc=="BRA" )
												oSection3:Cell("cCF"):Show()
												If	lInverteMov
													oSection3:Cell("cCF"):SetValue(Substr(aDadosTran[7],1,3)+"*")
												Else
													oSection3:Cell("cCF"):SetValue(aDadosTran[7])
												EndIf
											Else
												oSection3:Cell("cCF"):Hide()
												oSection3:Cell("cCF"):SetValue("   ")
											EndIf
											If mv_par09 $ "Ss"
												oSection3:Cell("cDoc"):SetValue(aDadosTran[8])
											Else
												oSection3:Cell("cDoc"):SetValue(aDadosTran[9])
											Endif
										EndIf
										If aDadosTran[1] <= "500"
											oSection3:Cell("nENTQtd"):Show()
											oSection3:Cell("nENTCus"):Show()
											oSection3:Cell("nCusMov"):Show()
											
											oSection3:Cell("nENTQtd"):SetValue(aDadosTran[2])
											oSection3:Cell("nENTCus"):SetValue(aDadosTran[3])
											oSection3:Cell("nCusMov"):SetValue(aDadosTran[3] / aDadosTran[2])
											
											oSection3:Cell("nSAIQtd"):Hide()
											oSection3:Cell("nSAICus"):Hide()
											oSection3:Cell("nSAIQtd"):SetValue(0)
											oSection3:Cell("nSAICus"):SetValue(0)
											
											aSalAtu[1] += aDadosTran[2]
											aSalAtu[mv_par10+1] += aDadosTran[3]
											aSalAtu[7] += aDadosTran[4]
										Else
											oSection3:Cell("nENTQtd"):Hide()
											oSection3:Cell("nENTCus"):Hide()
											oSection3:Cell("nENTQtd"):SetValue(0)
											oSection3:Cell("nENTCus"):SetValue(0)
											
											oSection3:Cell("nCusMov"):Show()
											oSection3:Cell("nSAIQtd"):Show()
											oSection3:Cell("nSAICus"):Show()
											
											oSection3:Cell("nCusMov"):SetValue(aDadosTran[3] / aDadosTran[2])
											oSection3:Cell("nSAIQtd"):SetValue(aDadosTran[2])
											oSection3:Cell("nSAICus"):SetValue(aDadosTran[3])
											
											aSalAtu[1] -= aDadosTran[2]
											aSalAtu[mv_par10+1] -= aDadosTran[3]
											aSalAtu[7] -= aDadosTran[4]
										EndIf
									Else
										lTransEnd := .F.
									EndIf
								EndIf
							EndIf
						EndIf
						If lFirst .And. !lContinua .And. lTransEnd
							oSection3:Cell("dDtMov"):SetValue(STOD(DATA))
							oSection3:Cell("cTES"):SetValue(TES)
							If ( cPaisLoc=="BRA" )
								oSection3:Cell("cCF"):Show()
								oSection3:Cell("cCF"):SetValue(CF)
								If	lInverteMov
									oSection3:Cell("cCF"):SetValue(Substr(CF,1,3)+"*")
								Else
									oSection3:Cell("cCF"):SetValue(CF)
								EndIf
							Else
								oSection3:Cell("cCF"):Hide()
								oSection3:Cell("cCF"):SetValue("   ")
							EndIf
							If mv_par09 $ "Ss"
								oSection3:Cell("cDoc"):SetValue(SEQUENCIA)
							Else
								oSection3:Cell("cDoc"):SetValue(DOCUMENTO)
							Endif
						EndIf
						
						Do Case
							Case Alltrim((cAliasTop)->ARQ) == "SD1" .And. !lContinua .And. lTransEnd
								lDev:=MTR900Dev("SD1",cAliasTop)
								If (cAliasTOP)->TES <= "500" .And. !lDev
									If (cAliasTOP)->TIPONF != "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf
									
									oSection3:Cell("nENTQtd"):Show()
									oSection3:Cell("nENTCus"):Show()
									
									oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
									
									oSection3:Cell("nSAIQtd"):Hide()
									oSection3:Cell("nSAICus"):Hide()
									oSection3:Cell("nSAIQtd"):SetValue(0)
									oSection3:Cell("nSAICus"):SetValue(0)
									
									aSalAtu[1] += (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
									aSalAtu[7] += (cAliasTOP)->QUANT2UM
								Else
									If (cAliasTOP)->TIPONF != "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf
									
									oSection3:Cell("nENTQtd"):Hide()
									oSection3:Cell("nENTCus"):Hide()
									oSection3:Cell("nENTQtd"):SetValue(0)
									oSection3:Cell("nENTCus"):SetValue(0)
									
									oSection3:Cell("nSAIQtd"):Show()
									oSection3:Cell("nSAICus"):Show()
									
									If lDev
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE * -1)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO * -1)
										
										aSalAtu[1] += (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
										aSalAtu[7] += (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
										
										aSalAtu[1] 			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									EndIf
								EndIf
							Case Alltrim((cAliasTop)->ARQ) = "SD2" .And. !lContinua .And. lTransEnd
								lDev:=MTR900Dev("SD2",cAliasTop)
								If (cAliasTOP)->TES <= "500" .Or. lDev
									If lDev
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										
										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE * -1)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO * -1)
										
										aSalAtu[1] 			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										
										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
										
										aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	+= (cAliasTOP)->CUSTO
										aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
									EndIf
									
									If (cAliasTOP)->TIPONF != "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf
									oSection3:Cell("nSAIQtd"):Hide()
									oSection3:Cell("nSAICus"):Hide()
									oSection3:Cell("nSAIQtd"):SetValue(0)
									oSection3:Cell("nSAICus"):SetValue(0)
								Else
									If (cAliasTOP)->TIPONF != "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf
									
									oSection3:Cell("nENTQtd"):Hide()
									oSection3:Cell("nENTCus"):Hide()
									oSection3:Cell("nENTQtd"):SetValue(0)
									oSection3:Cell("nENTCus"):SetValue(0)
									
									oSection3:Cell("nSAIQtd"):Show()
									oSection3:Cell("nSAICus"):Show()
									
									oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
									
									aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
									aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
								EndIf
							Case Alltrim((cAliasTop)->ARQ) == "SD3" .And. !lContinua  .And. lTransEnd
								lDev := .F.
								If	lInverteMov
									If (cAliasTOP)->TES > "500"
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										oSection3:Cell("nCusMov"):Show()
										
										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										
										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)
										
										aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	+= (cAliasTOP)->CUSTO
										aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)
										
										oSection3:Cell("nCusMov"):Show()
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()
										
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
										
										aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									EndIf
									If lCusUnif
										lPriApropri:=.F.
									EndIf
								Else
									If (cAliasTOP)->TES <= "500"
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										oSection3:Cell("nCusMov"):Show()
										
										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										
										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)
										
										aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	+= (cAliasTOP)->CUSTO
										aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)
										
										oSection3:Cell("nCusMov"):Show()
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()
										
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
										
										aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									EndIf
									If lCusUnif
										lPriApropri:=.T.
									EndIf
								EndIf
						EndCase
						If lFirst  .And. lTransEnd
							oSection3:Cell("nSALDQtd"):SetValue(aSalAtu[1])
							oSection3:Cell("nSALDCus"):SetValue(aSalAtu[mv_par10+1])
						EndIf
						Do Case
							Case Alltrim((cAliasTop)->ARQ) == "SD3" .And. !lContinua  .And. lTransEnd
								If Empty((cAliasTOP)->OP) .And. Empty((cAliasTOP)->PROJETO)
									oSection3:Cell("cCCPVPJOP"):SetValue('CC'+(cAliasTOP)->CC)
								ElseIf !Empty((cAliasTOP)->PROJETO)
									oSection3:Cell("cCCPVPJOP"):SetValue('PJ'+(cAliasTOP)->PROJETO)
								ElseIf !Empty((cAliasTOP)->OP)
									oSection3:Cell("cCCPVPJOP"):SetValue('OP'+(cAliasTOP)->OP)
								EndIf
							Case Alltrim((cAliasTop)->ARQ) == "SD1" .And. !lContinua .And. lTransEnd
								oSection3:Cell("cCCPVPJOP"):SetValue('F-'+(cAliasTOP)->FORNECEDOR)
							Case Alltrim((cAliasTop)->ARQ) == "SD2" .And. !lContinua .And. lTransEnd
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³N - QNC: 002117                                                       ³
								//³Corrigida a ultima coluna do relatorio onde apresentava nas notas     ³
								//³de saida o número do pedido de compra , ao invés de apresentar        ³
								//³o codigo do cliente quando o D2_TIPO="N",                             ³
								//³quando D2_TIPO="B" mostrar o codigo do fornecedor.                    ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If ((cAliasTop)->TIPONF) == "B"
									oSection3:Cell("cCCPVPJOP"):SetValue('F-'+(cAliasTop)->FORNECEDOR)
								Else
									oSection3:Cell("cCCPVPJOP"):SetValue('C-'+(cAliasTop)->FORNECEDOR)
								EndIf
							Case lContinua .And. aDadosTran[14] == "SD3" .And. lTransEnd
								If Empty(aDadosTran[11]) .And. Empty(aDadosTran[12])
									oSection3:Cell("cCCPVPJOP"):SetValue('CC'+aDadosTran[13])
								ElseIf !Empty(aDadosTran[12])
									oSection3:Cell("cCCPVPJOP"):SetValue('PJ'+aDadosTran[12])
								ElseIf !Empty(aDadosTran[11])
									oSection3:Cell("cCCPVPJOP"):SetValue('OP'+aDadosTran[11])
								EndIf
						EndCase
						
						If lFirst .And. lTransEnd
							oSection3:PrintLine()
						Endif
						lTransEnd := .T.
						
						If !lInverteMov .Or. (lInverteMov .And. lPriApropri)
							If !lContinua //Acerto para utilizar o Array aDadosTranf[]
								dbSkip()
							EndIf
						EndIf
					EndDo
					
					If lFirst
						oReport:PrintText(STR0022+TransForm(aSalAtu[7],cPicB2Qt2),,oSection3:Cell('nSAICus'):ColPos()) //"QTD. NA SEGUNDA UM: "
					Else
						If !MTR900IsMNT() .Or. (MTR900IsMNT().And. SB1->B1_COD <> cProdMNT .And. SB1->B1_COD <> cProdTER)
							oReport:PrintText(STR0023)	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
							oReport:ThinLine()
							lImpSMov := .T.
						EndIf
					EndIf
					
					oSection1:Finish()
					oSection2:Finish()
					If !lImpSMov
						oSection3:Finish()
					Endif
				EndDo
				dbSelectArea(cAliasTop)
			
			#ELSE
				dbSelectArea("SD1")
				If mv_par11 == 1
					dbSetOrder(5)
				Else
					If lCusUnif
						cIndice:="D1_FILIAL+D1_COD+D1_SEQCALC+D1_NUMSEQ"
					Else
						cIndice:="D1_FILIAL+D1_COD+D1_LOCAL+D1_SEQCALC+D1_NUMSEQ"
					EndIf
					INDREGUA("SD1",cTrbSD1,cIndice,,DBFilter(),STR0019)	//"Selecionando Registros"
					nInd := RetIndex("SD1")
					#IFNDEF TOP
			  		   dbSetIndex(cTrbSD1+OrdBagExt())
					#ENDIF
					dbSetOrder(nInd+1)
				EndIf
				
				dbSelectArea("SD2")
				If mv_par11 == 1
					dbSetOrder(1)
				Else
					If lCusUnif
						cIndice:="D2_FILIAL+D2_COD+D2_SEQCALC+D2_NUMSEQ"
					Else
						cIndice:="D2_FILIAL+D2_COD+D2_LOCAL+D2_SEQCALC+D2_NUMSEQ"
					EndIf
					INDREGUA("SD2",cTrbSD2,cIndice,,,STR0019)	//"Selecionando Registros"
					nInd := RetIndex("SD2")
					#IFNDEF TOP
					  dbSetIndex(cTrbSD2+OrdBagExt())
					#ENDIF
					dbSetOrder(nInd+1)
				EndIf
				
				dbSelectArea("SD3")
			
				If mv_par11 == 1
					dbSetOrder(3)
				Else
					If lCusUnif
						cIndice:="D3_FILIAL+D3_COD+D3_SEQCALC+D3_NUMSEQ"
					Else
						cIndice:="D3_FILIAL+D3_COD+D3_LOCAL+D3_SEQCALC+D3_NUMSEQ"
					EndIf
			
					IndRegua("SD3",cTrbSD3,cIndice,,,STR0019)	//"Selecionando Registros"
			
					nInd := RetIndex("SD3")
					#IFNDEF TOP
			     	  dbSetIndex(cTrbSD3+OrdBagExt())
			 		#ENDIF
				    dbSetOrder(nInd+1)
				EndIf
				
				dbSelectArea("SB1")
				If ! lVEIC
					If nOrdem == 1
						dbSetOrder(1)
						dbseek(cFilial+mv_par01)
						cOrder := IndexKey()
					ElseIf nOrdem == 2
						dbSetOrder(2)
						dbseek(cFilial+mv_par03)
						cOrder := IndexKey()
					EndIf  
				Else
					If nOrdem == 1
						cOrder := "B1_FILIAL+B1_CODITE"
					ElseIf nOrdem == 2
						cOrder := "B1_FILIAL+B1_TIPO+B1_CODITE"
					EndIf  
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Transforma parametros Range em expressao Advpl                          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MakeAdvplExpr(oReport:uParam)
			
				cCondicao := 'B1_FILIAL == "'+xFilial("SB1")+'".And.' 
				cCondicao += 'B1_TIPO >= "'+mv_par03+'".And.B1_TIPO <="'+mv_par04+'".And.'
				If ! lVEIC
					cCondicao += 'B1_COD >= "'+mv_par01+'".And.B1_COD <="'+mv_par02+'".And.'
				Else
					cCondicao += 'B1_CODITE >= "'+mv_par01+'".And.B1_CODITE <="'+mv_par02+'".And.'
				Endif	
				cCondicao += 'B1_GRUPO >= "'+mv_par14+'".And.B1_GRUPO <="'+mv_par15+'".And.'	
				cCondicao += 'B1_COD <> "'+Substr(cProdImp,1,Len(B1_COD))+'"'
			
				oReport:Section(1):SetFilter(cCondicao,cOrder)
				
				dbSelectArea("SB1")
				oReport:SetMeter(nTotRegs)
				
				While !oReport:Cancel() .And. SB1->(!Eof())
					
					If oReport:Cancel()
						Exit
					EndIf
					
					oReport:IncMeter()
					
					dbSelectArea("SB2")
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Se nao encontrar no arquivo de saldos ,nao lista ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !dbSeek(xFilial("SB2")+SB1->B1_COD+IF(lCusUnif,"",mv_par08))
						dbSelectArea("SB1")
						dbSkip()
						Loop
					EndIf
					
					cProdAnt  := SB1->B1_COD
					cLocalAnt := B2_LOCAL
					
					dbSelectArea("SD1")
					dbSeek(cFilial+SB1->B1_COD+If(lCusUnif,"",SB2->B2_LOCAL))
					dbSelectArea("SD2")
					dbSeek(cFilial+SB1->B1_COD+If(lCusUnif,"",SB2->B2_LOCAL))
					dbSelectArea("SD3")
					dbSeek(cFilial+SB1->B1_COD+If(lCusUnif.Or.lLocProc,"",SB2->B2_LOCAL))
					
					oSection3:Init()
					While .T.
						lImpSMov := .F.
						lImpS3   := .F.
						dbSelectArea("SD1")
						If !Eof() .and. D1_FILIAL == xFilial("SD1") .and. D1_COD = cProdAnt .and. If(lCusUnif,.T.,D1_LOCAL = cLocalAnt)
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea("SF4")
							dbSeek(xFilial("SF4")+SD1->D1_TES)
							dbSelectArea("SD1")
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Executa ponto de entrada para verificar se considera TES que ³
							//³ NAO ATUALIZA saldos em estoque.                              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
								lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
								lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
							EndIf
							
							If D1_ORIGLAN $ "LF" .Or. (SF4->F4_ESTOQUE != "S" .And. !lTesNEst)
								dbSkip()
								Loop
							Else
								If D1_DTDIGIT < mv_par05 .or. D1_DTDIGIT > mv_par06
									dbSkip()
									loop
								Else
									cSeqIni := IIf(mv_par11==1,D1_NUMSEQ,D1_SEQCALC+D1_NUMSEQ)
									cAlias := Alias()
								Endif
							EndIf
						EndIf
						
						dbSelectArea("SD2")
						If !Eof() .and. D2_FILIAL == xFilial("SD2") .and. D2_COD = cProdAnt .and. If(lCusUnif,.T.,D2_LOCAL = cLocalAnt)
							
							dbSelectArea("SF4")
							dbSeek(cFilial+SD2->D2_TES)
							dbSelectArea("SD2")
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Executa ponto de entrada para verificar se considera TES que ³
							//³ NAO ATUALIZA saldos em estoque.                              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
								lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
								lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
							EndIf
							
							If D2_ORIGLAN == "LF" .Or. (SF4->F4_ESTOQUE != "S" .And. !lTesNEst)
								dbSkip()
								Loop
							Else
								If D2_EMISSAO < mv_par05 .or. D2_EMISSAO > mv_par06
									dbSkip()
									Loop
								Else
									If mv_par11 == 1
										If D2_NUMSEQ < cSeqIni
											cSeqIni := D2_NUMSEQ
											cAlias  := Alias()
										Endif
									Else
										If D2_SEQCALC+D2_NUMSEQ < cSeqIni
											cSeqIni := D2_SEQCALC+D2_NUMSEQ
											cAlias  := Alias()
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf
						
						dbSelectArea("SD3")
						If !Eof() .and. D3_FILIAL == xFilial("SD3") .and. D3_COD = cProdAnt .and. If(lCusUnif.Or.lLocProc,.T.,D3_LOCAL = cLocalAnt)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Quando movimento ref apropr. indireta, so considera os         ³
							//³ movimentos com destino ao almoxarifado de apropriacao indireta.³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							lInverteMov:=.F.
							If D3_LOCAL != cLocalAnt .Or. lCusUnif
								If !(Substr(D3_CF,3,1) == "3")
									If !lCusUnif
										dbSkip()
										Loop
									EndIf
								ElseIf lPriApropri
									lInverteMov:=.T.
								EndIf
							EndIf
							
							If D3_EMISSAO < mv_par05 .or. D3_EMISSAO > mv_par06
								dbSkip()
								Loop
							EndIf
							// VALIDACAO TRATAMENTO SE CONSIDERA OS ESTORNO E SE CONSIDERA MOVIMENTOS WMS
							If !D3Valido()
								dbSkip()
								Loop
							EndIf
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Caso seja uma transferencia de localizacao verifica se lista   ³
							//³ o movimento ou nao                                             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If mv_par13 == 2 .And. Substr(D3_CF,3,1) == "4"
								cNumSeqTr := SD3->D3_COD+SD3->D3_NUMSEQ+SD3->D3_LOCAL
								nRegTr    := Recno()
								dbSkip()
								If SD3->D3_COD+SD3->D3_NUMSEQ+SD3->D3_LOCAL == cNumSeqTr
									dbSkip()
									Loop
								Else
									dbGoto(nRegTr)
								EndIf
							EndIf
							If mv_par11 == 1
								If D3_NUMSEQ < cSeqIni
									cSeqIni := D3_NUMSEQ
									cAlias  := Alias()
								EndIf
							Else
								If D3_SEQCALC+D3_NUMSEQ < cSeqIni
									cSeqIni := D3_SEQCALC+D3_NUMSEQ
									cAlias  := Alias()
								EndIf
							EndIf
						EndIf
						
						If !Empty(cAlias)
							dbSelectArea(cAlias)
							cCampo1 := Subs(cAlias,2,2)+IIf(cAlias=="SD1","_DTDIGIT","_EMISSAO")
							cCampo2 := Subs(cAlias,2,2)+"_TES"
							cCampo3 := Subs(cAlias,2,2)+"_CF"
							cCampo4 := Subs(cAlias,2,2)+IIf(mv_par09 $ "Ss","_NUMSEQ","_DOC" )
							
							If lFirst
								MR900ImpS1(@aSalAtu,,.F.,lVEIC,lCusUnif,oSection1,oSection2,oReport)
								lFirst  := .F.
								lFirst1 := .F.
							EndIf
							
							oSection3:Cell("dDtMov"):SetValue(&cCampo1)
							If cAlias == "SD3"
								oSection3:Cell("cTES"):SetValue(D3_TM)
							Else
								oSection3:Cell("cTES"):SetValue(&cCampo2)
							EndIf
							
							If ( cPaisLoc=="BRA" )
								oSection3:Cell("cCF"):Show()
								oSection3:Cell("cCF"):SetValue(&cCampo3)
							Else
								oSection3:Cell("cCF"):Hide()
								oSection3:Cell("cCF"):SetValue("   ")
							EndIf
							oSection3:Cell("cDoc"):SetValue(&cCampo4)
							
							Do Case
								Case cAlias = "SD1"
									lDev:=MTR900Dev("SD1")
									If D1_TES <= "500" .And. !lDev
										If SF1->F1_TIPO != "C"
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10))) / D1_QUANT))
											oSection3:Cell("nCusMov"):Show()
										Else
											oSection3:Cell("nCusMov"):SetValue(0)
											oSection3:Cell("nCusMov"):Hide()
										EndIf
										
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										
										oSection3:Cell("nENTQtd"):SetValue(D1_QUANT)
										oSection3:Cell("nENTCus"):SetValue(&(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10))))
										
										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)
										
										aSalAtu[1] 			+= D1_QUANT
										aSalAtu[mv_par10+1]	+= &(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10)))
										aSalAtu[7]			+= D1_QTSEGUM
									Else
										If SF1->F1_TIPO != "C"
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10))) / D1_QUANT))
											oSection3:Cell("nCusMov"):Show()
										Else
											oSection3:Cell("nCusMov"):SetValue(0)
											oSection3:Cell("nCusMov"):Hide()
										EndIf
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)
										
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()
										
										If lDev
											oSection3:Cell("nSAIQtd"):SetValue(D1_QUANT * -1)
											oSection3:Cell("nSAICus"):SetValue(&(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10))) * -1)
			
											aSalAtu[1]			+= D1_QUANT
											aSalAtu[mv_par10+1]	+= &(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10)))
											aSalAtu[7]			+= D1_QTSEGUM
										Else
											oSection3:Cell("nSAIQtd"):SetValue(D1_QUANT)
											oSection3:Cell("nSAICus"):SetValue(&(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10))))
			
											aSalAtu[1]			-= D1_QUANT
											aSalAtu[mv_par10+1]	-= &(Eval(bBloco,"D1_CUSTO",iif(mv_par10==1," ",mv_par10)))
											aSalAtu[7]			-= D1_QTSEGUM
										EndIf
									EndIf
								Case cAlias = "SD2"
									lDev:=MTR900Dev("SD2")
									If D2_TES <= "500" .Or. lDev
										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)
										
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										If lDev
											oSection3:Cell("nENTQtd"):SetValue(D2_QUANT  * -1)
											oSection3:Cell("nENTCus"):SetValue(&(Eval(bBloco,"D2_CUSTO",mv_par10)) * -1)
											
											aSalAtu[1]			-= D2_QUANT
											aSalAtu[mv_par10+1]	-= &(Eval(bBloco,"D2_CUSTO",mv_par10))
											aSalAtu[7]			-= D2_QTSEGUM
										Else
											oSection3:Cell("nENTQtd"):SetValue(D2_QUANT)
											oSection3:Cell("nENTCus"):SetValue(&(Eval(bBloco,"D2_CUSTO",mv_par10)))
											
											aSalAtu[1]			+= D2_QUANT
											aSalAtu[mv_par10+1]	+= &(Eval(bBloco,"D2_CUSTO",mv_par10))
											aSalAtu[7]			+= D2_QTSEGUM
										EndIf
										If SF2->F2_TIPO != "C"
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D2_CUSTO",mv_par10)) / D2_QUANT))
											oSection3:Cell("nCusMov"):Show()
										Else
											oSection3:Cell("nCusMov"):SetValue(0)
											oSection3:Cell("nCusMov"):Hide()
										EndIf
									Else
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)
										
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()
										
										If SF2->F2_TIPO != "C"
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D2_CUSTO",mv_par10)) / D2_QUANT))
											oSection3:Cell("nCusMov"):Show()
										Else
											oSection3:Cell("nCusMov"):SetValue(0)
											oSection3:Cell("nCusMov"):Hide()
										EndIf
										
										oSection3:Cell("nSAIQtd"):SetValue(D2_QUANT)
										oSection3:Cell("nSAICus"):SetValue(&(Eval(bBloco,"D2_CUSTO",mv_par10)))
			
										aSalAtu[1]			-= D2_QUANT
										aSalAtu[mv_par10+1]	-= &(Eval(bBloco,"D2_CUSTO",mv_par10))
										aSalAtu[7]			-= D2_QTSEGUM
									EndIf
								Otherwise
									lDev := .F.
									If	lInverteMov
										If D3_TM > "500"
											
											oSection3:Cell("nENTQtd"):Show()
											oSection3:Cell("nENTCus"):Show()
											oSection3:Cell("nCusMov"):Show()
											
											oSection3:Cell("nENTQtd"):SetValue(D3_QUANT)
											oSection3:Cell("nENTCus"):SetValue(&(Eval(bBloco,"D3_CUSTO",mv_par10)))
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT))
											
											oSection3:Cell("nSAIQtd"):Hide()
											oSection3:Cell("nSAICus"):Hide()
											oSection3:Cell("nSAIQtd"):SetValue(0)
											oSection3:Cell("nSAICus"):SetValue(0)
											
											aSalAtu[1]			+= D3_QUANT
											aSalAtu[mv_par10+1]	+= &(Eval(bBloco,"D3_CUSTO",mv_par10))
											aSalAtu[7]			+= D3_QTSEGUM
										Else
											oSection3:Cell("nENTQtd"):Hide()
											oSection3:Cell("nENTCus"):Hide()
											oSection3:Cell("nENTQtd"):SetValue(0)
											oSection3:Cell("nENTCus"):SetValue(0)
											
											oSection3:Cell("nCusMov"):Show()
											oSection3:Cell("nSAIQtd"):Show()
											oSection3:Cell("nSAICus"):Show()
											
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT))
											oSection3:Cell("nSAIQtd"):SetValue(D3_QUANT)
											oSection3:Cell("nSAICus"):SetValue(&(Eval(bBloco,"D3_CUSTO",mv_par10)))
											
											aSalAtu[1]			-= D3_QUANT
											aSalAtu[mv_par10+1]	-= &(Eval(bBloco,"D3_CUSTO",mv_par10))
											aSalAtu[7]			-= D3_QTSEGUM
										EndIf
										If lCusUnif
											lPriApropri:=.F.
										EndIf
									Else
										If D3_TM <= "500"
											
											oSection3:Cell("nENTQtd"):Show()
											oSection3:Cell("nENTCus"):Show()
											oSection3:Cell("nCusMov"):Show()
											
											oSection3:Cell("nENTQtd"):SetValue(D3_QUANT)
											oSection3:Cell("nENTCus"):SetValue(&(Eval(bBloco,"D3_CUSTO",mv_par10)))
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT))
											
											oSection3:Cell("nSAIQtd"):Hide()
											oSection3:Cell("nSAICus"):Hide()
											oSection3:Cell("nSAIQtd"):SetValue(0)
											oSection3:Cell("nSAICus"):SetValue(0)
											
											aSalAtu[1]			+= D3_QUANT
											aSalAtu[mv_par10+1]	+= &(Eval(bBloco,"D3_CUSTO",mv_par10))
											aSalAtu[7]			+= D3_QTSEGUM
										Else
											oSection3:Cell("nENTQtd"):Hide()
											oSection3:Cell("nENTCus"):Hide()
											oSection3:Cell("nENTQtd"):SetValue(0)
											oSection3:Cell("nENTCus"):SetValue(0)
											
											oSection3:Cell("nCusMov"):Show()
											oSection3:Cell("nSAIQtd"):Show()
											oSection3:Cell("nSAICus"):Show()
											
											oSection3:Cell("nCusMov"):SetValue((&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT))
											oSection3:Cell("nSAIQtd"):SetValue(D3_QUANT)
											oSection3:Cell("nSAICus"):SetValue(&(Eval(bBloco,"D3_CUSTO",mv_par10)))
											
											aSalAtu[1]			-= D3_QUANT
											aSalAtu[mv_par10+1]	-= &(Eval(bBloco,"D3_CUSTO",mv_par10))
											aSalAtu[7]			-= D3_QTSEGUM
										EndIf
										If lCusUnif
											lPriApropri:=.T.
										EndIf
									EndIf
							EndCase
							
							oSection3:Cell("nSALDQtd"):SetValue(aSalAtu[1])
							oSection3:Cell("nSALDCus"):SetValue(aSalAtu[mv_par10+1])
							
							Do Case
								Case cAlias = "SD3"  && movimentos (SD3)
									If Empty(D3_OP) .And. Empty(D3_PROJPMS)
										oSection3:Cell("cCCPVPJOP"):SetValue('CC'+D3_CC)
									ElseIf !Empty(D3_PROJPMS)
										oSection3:Cell("cCCPVPJOP"):SetValue('PJ'+D3_PROJPMS)
									ElseIf !Empty(D3_OP)
										oSection3:Cell("cCCPVPJOP"):SetValue('OP'+D3_OP)
									EndIf
								Case cAlias = "SD1"  && compras    (SD1)
									oSection3:Cell("cCCPVPJOP"):SetValue('F-'+D1_FORNECE)
								Case cAlias = "SD2"  && vendas     (SD2)
									If D2_TIPO == "B"
										oSection3:Cell("cCCPVPJOP"):SetValue('F-'+D2_CLIENTE)
									Else
										oSection3:Cell("cCCPVPJOP"):SetValue('C-'+D2_CLIENTE)
									EndIf
							EndCase
				
							cSeqIni := Replicate("z",6)
							cAlias := ""
							
							If !lImpSMov
								oSection3:PrintLine()
							Endif
							
							If !lInverteMov .Or. (lInverteMov .And. lPriApropri)
								dbSkip()
							EndIf
						Else
							If !lFirst
								oReport:PrintText(STR0022+AllTrim(TransForm(aSalAtu[7],cPicB2Qt2)),,oSection3:Cell('nSAICus'):ColPos()) //"QTD. NA SEGUNDA UM: "
								lImpS3 := .T.
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Verifica se deve ou nao listar os produtos s/movimento ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If mv_par07 == 1
									MR900ImpS1(@aSalAtu,,.F.,lVEIC,lCusUnif,oSection1,oSection2,oReport)
									
									If !MTR900IsMNT() .Or. (MTR900IsMNT().And. SB1->B1_COD <> cProdMNT .And. SB1->B1_COD <> cProdTER)
										oReport:PrintText(STR0023)	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
										oReport:ThinLine()
										lImpSMov := .T.
									EndIf	
									
								EndIf
							EndIf
							Exit
						EndIf
					EndDo
					lFirst  := .T.
					oSection1:Finish()
					oSection2:Finish()
					If !lImpSMov .And. lImpS3
						oSection3:Finish()
					EndIf
					
					dbSelectArea("SB1")
					dbSkip()
				EndDo
				
				dbSelectArea("SD1")
				If !Empty(cTrbSD1) .And. File(cTrbSD1 + OrdBagExt())
					RetIndex("SD1")
					Ferase(cTrbSD1+OrdBagExt())
				EndIf
				dbSetOrder(1)
				dbSelectArea("SD2")
				If !Empty(cTrbSD2) .And. File(cTrbSD2 + OrdBagExt())
					RetIndex("SD2")
					Ferase(cTrbSD2+OrdBagExt())
				EndIf
				dbSetOrder(1)
				dbSelectArea("SD3")
				If !Empty(cTrbSD3) .And. File(cTrbSD2 + OrdBagExt())
					RetIndex("SD3")
					Ferase(cTrbSD3+OrdBagExt())
				EndIf
				dbSetOrder(1)	
			#ENDIF		

		EndIf
        
        #IFDEF TOP
	    	If Select(cAliasTop)>0
	    		dbSelectArea(cAliasTop)
	       		dbCloseArea() 
	       	Endif 
		#ENDIF
	Next nForFilial
	
EndIf

// Restaura Filial Corrente
cFilAnt := cFilBack

Return NIL
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MATR900R3 ³ Autor ³ Paulo Boschetti       ³ Data ³ 06.10.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Kardex fisico - financeiro (Antigo)                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Rodrigo     ³24/06/98³XXXXXX³Acerto no tamanho do documento para 12    ³±±
±±³            ³        ³      ³posicoes                                  ³±±
±±³Rodrigo     ³17/07/98³13742A³Acerto na impressao de devolucoes conforme³±±
±±³            ³        ³      ³MATR910                                   ³±±
±±³Rodrigo Sart³05/11/98³XXXXXX³ Acerto p/ Bug Ano 2000                   ³±±
±±³Bruno Sobies³18/12/98³Melhor³Exclucao impressao do CF nas localizacoes ³±±
±±³Cesar       ³25/03/99³20051A³Alteracao do Lay-Out p/ Sair #OP Completa ³±±
±±³Patricia Sal³26/11/99³25253A³Acerto da Coluna do TES(ano c/ 4 digitos).³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marcos Hirak³11/05/05³XXXXXX³Imprimir B1_CODITE quando for gestao de   ³±±
±±³            ³        ³      ³Concessionarias ( MV_VEICULO = "S").      ³±±
±±³            ³        ³      ³foi retirado a variavel "cProdant"        ³±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Descri‡ao ³ PLANO DE MELHORIA CONTINUA        ³Programa     MATR900.PRX³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ITEM PMC  ³ Responsavel              ³ Data                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³      01  ³ Marcos V. Ferreira       ³ 23/03/2006                      ³±±
±±³      02  ³ Marcos V. Ferreira       ³ 23/03/2006                      ³±±
±±³      03  ³ Marcos V. Ferreira       ³ 23/05/2006 - Bops: 00000100000  ³±±
±±³      04  ³ Marcos V. Ferreira       ³ 23/05/2006 - Bops: 00000100000  ³±±
±±³      05  ³ Marcos V. Ferreira       ³ 10/04/2006 - Bops: 00000096422  ³±±
±±³      06  ³ Marcos V. Ferreira       ³ 10/04/2006 - Bops: 00000096422  ³±±
±±³      07  ³ Marcos V. Ferreira       ³ 04/04/2006                      ³±±
±±³      08  ³ Marcos V. Ferreira       ³ 04/04/2006                      ³±±
±±³      09  ³                          ³                                 ³±±
±±³      10  ³ Ricardo Berti            ³ 13/11/2006 - Bops: 00000113200  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MATR900R3()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local titulo   := STR0001		//"Kardex Fisico"
Local cDesc1   := STR0002		//"Este programa emitir  uma rela‡„o com as movimenta‡”es"
Local cDesc2   := STR0003		//"dos produtos selecionados, ordenados sequencialmente."
Local cDesc3   := ""
Local cString  := "SB1"
Local lRet     := .T.
//Local nTamSX1  := Len(SX1->X1_GRUPO)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis tipo Local para SIGAVEI, SIGAPEC e SIGAOFI         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea1	:= Getarea() 
Local lEnd		:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis tipo Private para SIGAVEI, SIGAPEC e SIGAOFI       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lVEIC   := Upper(GetMV("MV_VEICULO"))=="S"
Private aSB1Cod := {}
Private aSB1Ite := {}
Private nCOL1	:= 0
Private Tamanho := "G"
Private wnrel   := "MATR900"
Private aOrd    := {OemToAnsi(STR0004),OemToAnsi(STR0005)}						//" Codigo Produto "###" Tipo do Produto"
Private aReturn := {OemToAnsi(STR0006), 1,OemToAnsi(STR0007), 1, 2, 1, "",1 }	//"Zebrado"###"Administracao"
Private aLinha  := { },nLastKey := 0
Private cPerg   :="MTR900"
Private bBloco  := { |nV,nX| Trim(nV)+IIf(Valtype(nX)='C',"",Str(nX,1)) }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL",.F.))

dbSelectArea("SF4")
dbSetOrder(1)

dbSelectArea("SD3")
dbSetOrder(1)

dbSelectArea("SD2")
dbSetOrder(1)

dbSelectArea("SF2")
dbSetOrder(1)

dbSelectArea("SD1")
dbSetOrder(1)

dbSelectArea("SF1")
dbSetOrder(1)

dbSelectArea("SB2")
dbSetOrder(1)

dbSelectArea("SB1")
dbSetOrder(1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta perguntas no SX1 a fim de preparar o relatorio p/     ³
//³ custo unificado por empresa                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusUnif
	MTR900CUnf(lCusUnif)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta perguntas no SX1 									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//AjustaSX1()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajustar o SX1 para SIGAVEI, SIGAPEC e SIGAOFI                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aSB1Cod	:= TAMSX3("B1_COD")
aSB1Ite	:= TAMSX3("B1_CODITE")

/*If lVEIC

   dbSelectArea("SX1")
   dbSetOrder(1)
   dbSeek(PADR(cPerg,nTamSX1))
   Do While SX1->X1_GRUPO == PADR(cPerg,nTamSX1) .And. !SX1->(Eof())
      If "PRODU" $ Upper(SX1->X1_PERGUNT) .And. Upper(SX1->X1_TIPO) == "C" .And. ;
	     (SX1->X1_TAMANHO <> aSB1Ite[1] .Or. Upper(SX1->X1_F3) <> "VR4")
         RecLock("SX1",.F.)
         SX1->X1_TAMANHO := aSB1Ite[1]
         SX1->X1_F3 := "VR4"
         dbCommit()
         MsUnlock()
      EndIf
      dbSkip()
   EndDo
   dbCommitAll()
   RestArea(aArea1)
Else
   dbSelectArea("SX1")
   dbSetOrder(1)
   dbSeek(PADR(cPerg,nTamSX1))
   Do While SX1->X1_GRUPO == PADR(cPerg,nTamSX1) .And. !SX1->(Eof())
      If "PRODU" $ Upper(SX1->X1_PERGUNT) .And. Upper(SX1->X1_TIPO) == "C" .And. ;
	     (SX1->X1_TAMANHO <> aSB1Cod[1] .Or. Upper(SX1->X1_F3) <> "SB1")
         RecLock("SX1",.F.)
         SX1->X1_TAMANHO := aSB1Cod[1]
         SX1->X1_F3 := "SB1"
         dbCommit()
         MsUnlock()
      EndIf
      dbSkip()
   EndDo
   dbCommitAll()
   RestArea(aArea1)
EndIf*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                     ³
//³ mv_par01         // Do produto                           ³
//³ mv_par02         // Ate o produto                        ³
//³ mv_par03         // Do tipo                              ³
//³ mv_par04         // Ate o tipo                           ³
//³ mv_par05         // Da data                              ³
//³ mv_par06         // Ate a data                           ³
//³ mv_par07         // Lista produtos s/movimento           ³
//³ mv_par08         // Qual Local (almoxarifado)            ³
//³ MV_par09         // (d)OCUMENTO/(s)EQUENCIA              ³
//³ mv_par10         // moeda selecionada ( 1 a 5 )          ³
//³ mv_par11         // Seq.de Digitacao /Calculo            ³
//³ mv_par12         // Pagina Inicial                       ³
//³ mv_par13         // Lista Transf Locali (Sim/Nao)        ³
//³ mv_par14         // Do  Grupo                            ³
//³ mv_par15         // Ate o Grupo                          ³
//³ mv_par16         // Seleciona Filial?                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTR900",.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:=SetPrint(cString,wnrel,cPerg,titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,.F.,Tamanho)

If nLastKey = 27
	dbClearFilter()
	lRet := .F.
EndIf

If lRet

	SetDefault(aReturn,cString)

	If nLastKey = 27
		dbClearFilter()
		lRet := .F.
	EndIf

	If lRet 
		RptStatus( { |lEnd| R900Imp( @lEnd, wnRel, tamanho, titulo ) }, titulo )
    EndIf

EndIf    

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ R900IMP  ³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 16.11.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada do Relatorio                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ R900Imp(ExpL1,ExpC1,ExpC2,ExpC3)		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = var. p/ controle de interrupcao pelo usuario 	  ³±±
±±³          ³ ExpC1 = codigo do relatorio                                ³±±
±±³          ³ ExpC2 = codigo ref. ao tamanho do relatorio (P/M/G)        ³±±
±±³          ³ ExpC3 = titulo do relatorio                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900			                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R900Imp(lEnd,WnRel,tamanho,titulo)

Static lIxbConTes  := NIL

Local aDadosTran:= {}
Local lContinua := .F.
Local nTam      := 18
Local CbTxt,CbCont,Cabec1,Cabec2
Local cAlias    := ""
Local cSeqIni   := Replicate("z",6)
Local cProdAnt  := ""
Local cLocalAnt := ""
Local cCampo1   := "" , cCampo2 := "" , cCampo3 := "" , cCampo4 := ""
Local cNumSeqTr := "" , nRegTr  := 0
Local lFirst    := .T., lFirst1 := .T., lTransEnd := .T.
Local aSalAtu   := { 0,0,0,0,0,0,0 } , nTipo
Local nEntrada  := nSaida :=0
Local nCEntrada := nCSaida:=0
Local cPicB2Qt  := PesqPictQt("B2_QATU"  ,nTam)
Local cPicB2Qt2 := PesqPictQt("B2_QTSEGUM",nTam)
Local cPicD1Qt  := PesqPictQt("D1_QUANT" ,nTam)
Local cPicD2Qt  := PesqPictQt("D2_QUANT" ,nTam)
Local cPicD3Qt  := PesqPictQt("D3_QUANT" ,nTam)
Local cPicB2Cust:= PesqPict("SB2","B2_CM"+Str(mv_par10,1),nTam,mv_par10)
Local cPicD1Cust:= PesqPict("SD1","D1_CUSTO"+IIf(mv_par10 == 1 ,"",Str(mv_par10,1)),nTam,mv_par10)
Local cPicD2Cust:= PesqPict("SD2","D2_CUSTO"+Str(mv_par10,1),nTam,mv_par10)
Local cPicD3Cust:= PesqPict("SD3","D3_CUSTO"+Str(mv_par10,1),nTam,mv_par10)
Local cTRBSD1   := CriaTrab(,.F.)
Local cTRBSD2   := Subs(cTrbSD1,1,7)+"A"
Local cTRBSD3   := Subs(cTrbSD1,1,7)+"B"
Local nInd
Local lDev  // Flag que indica se nota ‚ devolu‡ao (.T.) ou nao (.F.)
Local cCusto    := ""
Local nTotRegs  := 0
// Indica se esta listando relatorio do almox. de processo
Local lLocProc  := mv_par08 == SuperGetMv("MV_LOCPROC")
// Indica se deve imprimir movimento invertido (almox. de processo)
Local lInverteMov:=.F.

Local lPriApropri:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe ponto de entrada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lTesNEst := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Codigo do produto importado - NAO DEVE SER LISTADO           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cProdImp := GetMV("MV_PRODIMP")

Local cAliasTop:="KARDEXSQL"
Local cQuery   := ""
Local cQuery2  := ""
Local cQueryD1 := ""
Local cQueryD2 := ""
Local cQueryD3 := ""
Local cQueryD1P:= ""
Local cQueryD2P:= ""
Local cQueryD3P:= "" 
Local cQuerySub:= ""
Local cQueryB1A:= "" 	
Local cQueryB1B:= "" 	
Local cQueryB1C:= "" 	
Local cQueryB1D:= "" 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis tipo Local para SIGAVEI, SIGAPEC e SIGAOFI         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cArq1     := "" 
Local nInd1     := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para processamento por Filial           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aFilsCalc := MatFilCalc( mv_par16 == 1 )
Local cFilBack  := cFilAnt
Local nForFilial:= 0
LOCAL cProdMNT := GetMv("MV_PRODMNT")
LOCAL cProdTER := GetMv("MV_PRODTER")

cProdMNT := cProdMNT + Space(15-Len(cProdMNT))
cProdTER := cProdTER + Space(15-Len(cProdTER))

If !Empty(aFilsCalc)

	For nForFilial := 1 To Len( aFilsCalc )
	
		If aFilsCalc[ nForFilial, 1 ]
		
			cFilAnt := aFilsCalc[ nForFilial, 2 ]
	
			If !lVEIC
				cQueryB1A:= " AND SB1.B1_COD >= '" + mv_par01 + "'"
				cQueryB1A+= " AND SB1.B1_COD <= '" + mv_par02 + "'"
			Else
				cQueryB1A:= " AND SB1.B1_CODITE >= '" + mv_par01 + "'"
				cQueryB1A+= " AND SB1.B1_CODITE <= '" + mv_par02 + "'"
			EndIf
	
			cQueryB1B:= " AND SB1.B1_COD = SB1EXS.B1_COD"
	
			cQueryB1C:= " AND SB1.B1_FILIAL = '"	+ xFilial("SB1") + "'"
			cQueryB1C+= " AND SB1.B1_TIPO >= '"		+ mv_par03	+ "'"
			cQueryB1C+= " AND SB1.B1_TIPO <= '"		+ mv_par04	+ "'"
			cQueryB1C+= " AND SB1.B1_GRUPO >= '"	+ mv_par14	+ "'"
			cQueryB1C+= " AND SB1.B1_GRUPO <= '"	+ mv_par15	+ "'"
			cQueryB1C+= " AND SB1.B1_COD <> '"		+ cProdimp	+ "'"
			cQueryB1C+= " AND SB1.D_E_L_E_T_<>'*'"
			
			cQueryB1D:= " SB1EXS.B1_FILIAL = '" + xFilial("SB1") + "'"
	
			If ! lVEIC
				cQueryB1D+= " AND SB1EXS.B1_COD >= '" + mv_par01 + "'"
				cQueryB1D+= " AND SB1EXS.B1_COD <= '" + mv_par02 + "'"
			Else
				cQueryB1D+= " AND SB1EXS.B1_CODITE >= '" + mv_par01 + "'"
				cQueryB1D+= " AND SB1EXS.B1_CODITE <= '" + mv_par02 + "'"
			EndIf
	
			cQueryB1D+= " AND SB1EXS.B1_TIPO >= '"	+ mv_par03 + "'"
			cQueryB1D+= " AND SB1EXS.B1_TIPO <= '"	+ mv_par04 + "'"
			cQueryB1D+= " AND SB1EXS.B1_GRUPO >= '" + mv_par14 + "'"
			cQueryB1D+= " AND SB1EXS.B1_GRUPO <= '" + mv_par15 + "'"
			cQueryB1D+= " AND SB1EXS.B1_COD <> '"	+ cProdimp + "'"
	
			cQueryB1D+= " AND SB1EXS.D_E_L_E_T_<> '*'"
			
			lIxbConTes := IF(lIxbConTes == NIL,ExistBlock("MTAAVLTES"),lIxbConTes)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se utiliza custo unificado por empresa              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lCusUnif:=lCusUnif .And. mv_par08 == "**"
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Variaveis utilizadas para Impressao do Cabecalho e Rodape    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cbtxt := Space(10)
			cbcont:= 0
			li    := 80
			m_pag := mv_par12
	
			titulo := OemToAnsi(STR0008)+IIf(mv_par11==1,OemToAnsi(STR0009),OemToAnsi(STR0010) ) + " " + IIf(lCusUnif,"",OemToAnsi(STR0011)+" "+mv_par08)		// "KARDEX FISICO-FINANCEIRO "###"(SEQUENCIA)"###"(CALCULO)"###"L O C A L :"
			cabec1 := OemToAnsi(STR0012)+IIf(mv_par09 $ "Dd", STR0013 , STR0014 ) +STR0015			//"    OPERACAO      "###"   DOCUMENTO   "###"   SEQUENCIA   "###" |               E  N  T  R  A  D  A  S             |         CUSTO MEDIO   |                  S  A  I  D  A  S                |                   S   A   L   D   O              |CLI,FOR,"
			cabec2 := OemToAnsi(STR0016)															//"    DATA    TES C.F    NUMERO     |            QUANTIDADE             CUSTO TOTAL    |        DO MOVIMENTO   |            QUANTIDADE             CUSTO TOTAL    |            QUANTIDADE               VALOR TOTAL  |CC , PJ ou OP"
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa os codigos de caracter Comprimido/Normal da impressora ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTipo  := IIf(aReturn[4]==1,15,nTam)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona a ordem escolhida ao titulo do relatorio          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Type("NewHead")#"U"
				NewHead += STR0017+AllTrim(aOrd[aReturn[8]])+STR0018+AllTrim(GetMv("MV_SIMB"+Ltrim(Str(mv_par10))))+")" + " - " + aFilsCalc[ nForFilial, 3 ]	//" (Por "###" ,em "
			Else
				Titulo  += STR0017+AllTrim(aOrd[aReturn[8]])+STR0018+AllTrim(GetMv("MV_SIMB"+Ltrim(Str(mv_par10))))+")" + " - " + aFilsCalc[ nForFilial, 3 ]	//" (Por "###" ,em "
			EndIf
	
			dbSelectArea("SB2")
			dbSetOrder(1)
	
			#IFDEF TOP
				If !(TcSrvType()=="AS/400") .And. !("POSTGRES" $ TCGetDB())
			
					dbSelectArea("SD1")           // Itens de Entrada
					nTotRegs += LastRec()
				
					dbSelectArea("SD2")           // Itens de Saida
					nTotRegs += LastRec()
			
					dbSelectArea("SD3")           // movimentacoes internas (producao/requisicao/devolucao)
					nTotRegs += LastRec()
			
					dbSelectArea("SB2")			  // Saldos em estoque
					dbSetOrder(1)
					nTotRegs += LastRec()
	
					// **** ATENCAO - O ORDER BY UTILIZA AS POSICOES DO SELECT, SE ALGUM CAMPO
					// **** FOR INCLUIDO NA QUERY OU ALTERADO DE LUGAR DEVE SER REVISTA A SINTAXE
					// **** DO ORDER BY
					// Query do produto
					// 1 ARQ
					// 2 PRODUTO
					// 3 TIPO
					// 4 UM
					// 5 GRUPO
					// 6 DESC
					// 7 POSIPI
					// 8 SEQCALC
					// 9 DATA
					// 10 TES
					// 11 CF
					// 12 SEQUENCIA
					// 13 DOCUMENTO
					// 14 SERIE
					// 15 QUANTIDADE
					// 16 QUANT2UM
					// 17 ARMAZEM
					// 18 PROJETO
					// 19 OP
					// 20 CC
					// 21 FORNECEDOR
					// 22 LOJA
					// 23 PEDIDO
					// 24 TIPO NF
					// 25 CUSTO
					// 26 TRT 
					// 27 LOTE
					// 28 B1_CODITE  - GESTAO DE CONCESSIONÁRIAS
					// 29 RECNO
					// Query completa
				
					// **** ATENCAO - O ORDER BY UTILIZA AS POSICOES DO SELECT, SE ALGUM CAMPO
					// **** FOR INCLUIDO NA QUERY OU ALTERADO DE LUGAR DEVE SER REVISTA A SINTAXE
					// **** DO ORDER BY
	
					cQueryD1P:= ""
					cQuerySub:= "SELECT 1 "
	
					cQueryD1P+= "SELECT 'SD1' ARQ"			// 01
					cQueryD1P+= ", SB1.B1_COD PRODUTO"		// 02
					cQueryD1P+= ", SB1.B1_TIPO TIPO"		// 03
					cQueryD1P+= ", SB1.B1_UM"				// 04
					cQueryD1P+= ", SB1.B1_GRUPO"			// 05
					cQueryD1P+= ", SB1.B1_DESC"				// 06
					cQueryD1P+= ", SB1.B1_POSIPI"			// 07
					cQueryD1P+= ", D1_SEQCALC SEQCALC"		// 08
					cQueryD1P+= ", D1_DTDIGIT DATA"			// 09
					cQueryD1P+= ", D1_TES TES"				// 10
					cQueryD1P+= ", D1_CF CF"				// 11
					cQueryD1P+= ", D1_NUMSEQ SEQUENCIA"		// 12
					cQueryD1P+= ", D1_DOC DOCUMENTO"		// 13
					cQueryD1P+= ", D1_SERIE SERIE"			// 14
					cQueryD1P+= ", D1_QUANT QUANTIDADE"		// 15
					cQueryD1P+= ", D1_QTSEGUM QUANT2UM"		// 16
					cQueryD1P+= ", D1_LOCAL ARMAZEM"		// 17
					cQueryD1P+= ", '' PROJETO"				// 18
					cQueryD1P+= ", '' OP"					// 19
					cQueryD1P+= ", '' CC"					// 20
					cQueryD1P+= ", D1_FORNECE FORNECEDOR"	// 21
					cQueryD1P+= ", D1_LOJA LOJA"			// 22
					cQueryD1P+= ", '' PEDIDO"				// 23
					cQueryD1P+= ", D1_TIPO TIPONF"			// 24
					cQueryD1P+= ", D1_CUSTO"				// 25
					// COLOCA A MOEDA DO CUSTO
					If mv_par10 > 1
						cQueryD1P+= Str(mv_par10,1,0)		// 25
					EndIf
					cQueryD1P += " CUSTO"					// 25
					cQueryD1P += ", '' TRT"					// 26
					cQueryD1P += ", D1_LOTECTL LOTE"		// 27
					If lVEIC
						cQueryD1P+= ", SB1.B1_CODITE B1_CODITE"	// 28
					EndIf
					cQueryD1P += ", SD1.R_E_C_N_O_ NRECNO"	// 29
	
		   			cQueryD1 := " FROM " 	
	
					cQueryD1 += RetSqlName("SB1") + " SB1"
					cQueryD1 += ", " + RetSqlName("SD1") + " SD1"
					cQueryD1 += ", " + RetSqlName("SF4") + " SF4"
	
		   			cQueryD1 += " WHERE"
	
					cQueryD1 += " SB1.B1_COD = D1_COD"
					cQueryD1 += " AND D1_FILIAL = '" + xFilial("SD1") + "'"
					cQueryD1 += " AND F4_FILIAL = '" + xFilial("SF4") + "'"
					cQueryD1 += " AND SD1.D1_TES = F4_CODIGO"
					cQueryD1 += " AND F4_ESTOQUE = 'S'"
					cQueryD1 += " AND D1_DTDIGIT >= '" + DTOS(mv_par05) + "'"
					cQueryD1 += " AND D1_DTDIGIT <= '" + DTOS(mv_par06) + "'"
					cQueryD1 += " AND D1_ORIGLAN <> 'LF'"
					If !lCusUnif 
						cQueryD1 += " AND D1_LOCAL = '" + mv_par08 + "'"
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Não imprimir o produto MANUTENCAO (MV_PRDMNT) qdo integrado com MNT.       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If MTR900IsMNT() 
						cQueryD1 += " AND SB1.B1_COD <> '" + cProdMNT + "'"
						cQueryD1 += " AND SB1.B1_COD <> '" + cProdTER + "'"
					EndIf	
					cQueryD1 += " AND SD1.D_E_L_E_T_<>'*'"
					cQueryD1 += " AND SF4.D_E_L_E_T_<>'*'"
			
					cQueryD2P := " SELECT 'SD2'"	// 01
					cQueryD2P += ", SB1.B1_COD"		// 02
					cQueryD2P += ", SB1.B1_TIPO"	// 03
					cQueryD2P += ", SB1.B1_UM"		// 04
					cQueryD2P += ", SB1.B1_GRUPO"	// 05
					cQueryD2P += ", SB1.B1_DESC"	// 06
					cQueryD2P += ", SB1.B1_POSIPI"	// 07
					cQueryD2P += ", D2_SEQCALC"		// 08
					cQueryD2P += ", D2_EMISSAO"		// 09
					cQueryD2P += ", D2_TES"			// 10
					cQueryD2P += ", D2_CF"			// 11
					cQueryD2P += ", D2_NUMSEQ"		// 12
					cQueryD2P += ", D2_DOC"			// 13
					cQueryD2P += ", D2_SERIE"		// 14
					cQueryD2P += ", D2_QUANT"		// 15
					cQueryD2P += ", D2_QTSEGUM"		// 16
					cQueryD2P += ", D2_LOCAL"		// 17
					cQueryD2P += ", ''"				// 18
					cQueryD2P += ", ''"				// 19
					cQueryD2P += ", ''"				// 20
					cQueryD2P += ", D2_CLIENTE"		// 21
					cQueryD2P += ", D2_LOJA"		// 22
					cQueryD2P += ", D2_PEDIDO"		// 23
					cQueryD2P += ", D2_TIPO"		// 24
					cQueryD2P += ", D2_CUSTO"		// 25
					// COLOCA A MOEDA DO CUSTO
					cQueryD2P += Str(mv_par10,1,0)	// 25
					cQueryD2P += ", ''"				// 26
					cQueryD2P += ", D2_LOTECTL"		// 27
					
					If lVEIC
						cQueryD2P += ", SB1.B1_CODITE"	// 28
					EndIf
					cQueryD2P += ", SD2.R_E_C_N_O_ SD2RECNO"		// 29
			
					cQueryD2 := " FROM "
			
					cQueryD2 += RetSqlName("SB1") + " SB1"
					cQueryD2 += ", " + RetSqlName("SD2") + " SD2"
					cQueryD2 += ", " + RetSqlName("SF4") + " SF4"
			
					cQueryD2 += " WHERE"
			
					cQueryD2 += " SB1.B1_COD = D2_COD"
					cQueryD2 += " AND D2_FILIAL = '" + xFilial("SD2") + "'"
					cQueryD2 += " AND F4_FILIAL = '" + xFilial("SF4") + "'"
					cQueryD2 += " AND SD2.D2_TES = F4_CODIGO"
					cQueryD2 += " AND F4_ESTOQUE = 'S'"
					cQueryD2 += " AND D2_EMISSAO >= '" + DTOS(mv_par05) + "'"
					cQueryD2 += " AND D2_EMISSAO <= '" + DTOS(mv_par06) + "'"
					cQueryD2 += " AND D2_ORIGLAN <> 'LF'"
					If !lCusUnif 
						cQueryD2 += " AND D2_LOCAL = '" + mv_par08 + "'"
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Não imprimir o produto MANUTENCAO (MV_PRDMNT) qdo integrado com MNT.       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If MTR900IsMNT() 
						cQueryD2 += " AND SB1.B1_COD <> '" + cProdMNT + "'"
						cQueryD2 += " AND SB1.B1_COD <> '" + cProdTER + "'"
					EndIf	
					cQueryD2 += " AND SD2.D_E_L_E_T_<>'*'"
					cQueryD2 += " AND SF4.D_E_L_E_T_<>'*'"
			
					cQueryD3P := " SELECT 'SD3'"	// 01
					cQueryD3P += ", SB1.B1_COD"		// 02
					cQueryD3P += ", SB1.B1_TIPO"	// 03
					cQueryD3P += ", SB1.B1_UM"		// 04
					cQueryD3P += ", SB1.B1_GRUPO"	// 05
					cQueryD3P += ", SB1.B1_DESC"	// 06
					cQueryD3P += ", SB1.B1_POSIPI"	// 07
					cQueryD3P += ", D3_SEQCALC"		// 08
					cQueryD3P += ", D3_EMISSAO"		// 09
					cQueryD3P += ", D3_TM"			// 10
					cQueryD3P += ", D3_CF"			// 11
					cQueryD3P += ", D3_NUMSEQ"		// 12
					cQueryD3P += ", D3_DOC"			// 13
					cQueryD3P += ", ''"				// 14
					cQueryD3P += ", D3_QUANT"		// 15
					cQueryD3P += ", D3_QTSEGUM"		// 16
					cQueryD3P += ", D3_LOCAL"		// 17
					cQueryD3P += ", D3_PROJPMS"		// 18
					cQueryD3P += ", D3_OP"			// 19
					cQueryD3P += ", D3_CC"			// 20
					cQueryD3P += ", ''"				// 21
					cQueryD3P += ", ''"				// 22
					cQueryD3P += ", ''"				// 23
					cQueryD3P += ", ''"				// 24
					cQueryD3P += ", D3_CUSTO"		// 25
					// COLOCA A MOEDA DO CUSTO
					cQueryD3P += Str(mv_par10,1,0)	// 25
					cQueryD3P += ", D3_TRT"			// 26
					cQueryD3P += ", D3_LOTECTL"		// 27
			
					If lVEIC
						cQueryD3P += ", SB1.B1_CODITE"	// 28
					EndIf
					cQueryD3P += ", SD3.R_E_C_N_O_ SD3RECNO"		// 29
			
					cQueryD3 := " FROM "
			
					cQueryD3 += RetSqlName("SB1") + " SB1"
					cQueryD3 += ", " + RetSqlName("SD3") + " SD3"
			
					cQueryD3 += " WHERE"
			
					cQueryD3 += " SB1.B1_COD = D3_COD"
					cQueryD3 += " AND D3_FILIAL = '"	+ xFilial("SD3") + "'"
					cQueryD3 += " AND D3_EMISSAO >= '"	+ DTOS(mv_par05) + "'"
					cQueryD3 += " AND D3_EMISSAO <= '"	+ DTOS(mv_par06) + "'"
					If SuperGetMV('MV_D3ESTOR', .F., 'N') == 'N'
						cQueryD3 += " AND D3_ESTORNO <> 'S'"
					EndIf
					If SuperGetMV('MV_D3SERVI', .F., 'N') == 'N' .And. IntDL()
						cQueryD3 += " AND ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
						cQueryD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+SuperGetMV('MV_CQ', .F., '98')+"') )"
					EndIf		
					If !lCusUnif .And. !lLocProc
						cQueryD3 += " AND D3_LOCAL = '" + mv_par08 + "'"
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Não imprimir o produto MANUTENCAO (MV_PRDMNT) qdo integrado com MNT.       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If MTR900IsMNT() 
						cQueryD3 += " AND SB1.B1_COD <> '" + cProdMNT + "'"
						cQueryD3 += " AND SB1.B1_COD <> '" + cProdTER + "'"
					EndIf	
					cQueryD3 += " AND SD3.D_E_L_E_T_<>'*'"
	
					cQuery := cQueryD1P + cQueryD1 + cQueryB1A + cQueryB1C
					cQuery += " UNION "
					cQuery += cQueryD2P + cQueryD2 + cQueryB1A + cQueryB1C
					cQuery += " UNION "
					cQuery += cQueryD3P + cQueryD3 + cQueryB1A + cQueryB1C
			
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ So inclui as condicoes a seguir qdo lista produtos sem ³
					//³ movimento                                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If mv_par07 == 1
			
					   cQuery2:= " AND NOT EXISTS " + "(" + cQuerySub + cQueryD1 + cQueryB1B + cQueryB1C + ")"
					   cQuery2+= " AND NOT EXISTS " + "(" + cQuerySub + cQueryD2 + cQueryB1B + cQueryB1C + ")"
					   cQuery2+= " AND NOT EXISTS " + "(" + cQuerySub + cQueryD3 + cQueryB1B + cQueryB1C + ")"
			
					   cQuery += " UNION"
			
					   cQuery += " SELECT 'SB1'"		// 01
					   cQuery += ", SB1EXS.B1_COD"		// 02
					   cQuery += ", SB1EXS.B1_TIPO"		// 03
					   cQuery += ", SB1EXS.B1_UM"		// 04
					   cQuery += ", SB1EXS.B1_GRUPO"	// 05
					   cQuery += ", SB1EXS.B1_DESC"		// 06
					   cQuery += ", SB1EXS.B1_POSIPI"	// 07
					   cQuery += ", ''"					// 08
					   cQuery += ", ''"					// 09
					   cQuery += ", ''"					// 10
					   cQuery += ", ''"					// 11
					   cQuery += ", ''"					// 12
					   cQuery += ", ''"					// 13
					   cQuery += ", ''"					// 14
					   cQuery += ", 0"					// 15
					   cQuery += ", 0"					// 16
					   cQuery += ", ''"					// 17
					   cQuery += ", ''"					// 18
					   cQuery += ", ''"					// 19
					   cQuery += ", ''"					// 20
					   cQuery += ", ''"					// 21
					   cQuery += ", ''"					// 22
					   cQuery += ", ''"					// 23
					   cQuery += ", ''"					// 24
					   cQuery += ", 0"					// 25
					   cQuery += ", ''"					// 26
					   cQuery += ", ''"					// 27		   
						If lVEIC
							cQuery += ", SB1EXS.B1_CODITE"	// 28
						EndIf
					   cQuery += ", 0"					// 29		   
			
						cQuery += " FROM "
					   
						cQuery += RetSqlName("SB1") + " SB1EXS"
			
						cQuery += " WHERE "
			
						cQuery += cQueryB1D
						cQuery += cQuery2
					EndIf
	
					If ! lVEIC
						If aReturn[8]==1 //" Codigo Produto "###" Tipo do Produto"
							cQuery += " ORDER BY 2,"
						ElseIf aReturn[8] == 2
							cQUery += " ORDER BY 3,2,"
						EndIf
					Else
						If aReturn[8]==1 //" Codigo Produto "###" Tipo do Produto"
							// B1_CODITE, B1_COD, B1_GRUPO
							cQuery += " ORDER BY 28, 2, 5,"
						ElseIf aReturn[8] == 2
							// B1_TIPO, B1_CODITE, B1_COD, B1_GRUPO
							cQuery += " ORDER BY 3, 28, 2, 5,"
						EndIf
					EndIf
	
					If mv_par11 == 1
						cQuery += "17,12"
					Else
						If lCusUnif
							cQuery+="8,12"
						Else
							cQuery+="17,8,12"
						EndIf
					EndIf
					cQuery:=ChangeQuery(cQuery)
					MsAguarde({|| dbUseArea(.T.,"TOPCONN",TCGenQry(,,cQuery),cAliasTOP,.F.,.T.)},STR0019)
					SetRegua(nTotRegs)
					dbSelectArea(cAliasTop)	
					dbgotop()
					While !(cAliasTop)->(Eof())
						If lEnd
							@PROW()+1,001 PSay STR0020		//"CANCELADO PELO OPERADOR"
							Exit
						EndIf

						IncRegua()
			
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Filtra Registros de Acordo com a Pasta  Filtro da Janela de Impressao  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !Empty(aReturn[7])
							dbSelectArea("SB1")
							dbSetOrder(1)
							If dbSeek(xFilial("SB1") + (cAliasTop)->PRODUTO)
								If !&(aReturn[7])
									dbSelectArea(cAliasTop)
									dbSkip()
									Loop
								EndIf
							Else
								dbSelectArea(cAliasTop)
								dbSkip()
								Loop
							EndIf
							dbSelectArea(cAliasTop)
						EndIf
	
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Se nao encontrar no arquivo de saldos nao lista  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea("SB2")
						If !dbSeek( xFilial("SB2") + (cAliasTop)->PRODUTO + If( lCusUnif, "", mv_par08 ) )
							dbSelectArea(cAliasTop)
							dbSkip()
							Loop
						EndIf
		
						dbSelectArea(cAliasTop)
						cProdAnt  := (cAliasTop)->PRODUTO
						cLocalAnt := SB2->B2_LOCAL
				
						nEntrada:=nSaida:=0
						nCEntrada:=nCSaida:=0
						lFirst:=.F.
	
						If li > 54
							cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
						EndIf
						MTR900CAB(@aSalAtu,Alias(),cPicB2Cust,nTam,.T.,cAliasTop)
	
						While !Eof() .And. (cAliasTop)->PRODUTO = cProdAnt .And. If(lCusUnif .Or. lLocProc,.T.,IIf((cAliasTop)->ARQ <> 'SB1',(cAliasTop)->ARMAZEM==cLocalAnt,.T.))
							IncProc()
							lContinua := .F.
							If Alltrim((cAliasTop)->ARQ) $ "SD1/SD2"
								lFirst:=.T.
								SF4->( dbSeek( xFilial("SF4") + (cAliasTop)->TES ) )
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Executa ponto de entrada para verificar se considera TES que ³
								//³ NAO ATUALIZA saldos em estoque.                              ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
									lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
									lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
								EndIf
								If SF4->F4_ESTOQUE != "S" .And. !lTesNEst
									dbSkip()
									Loop
								EndIf
							ElseIf Alltrim((cAliasTop)->ARQ) == "SD3"
								lFirst:=.T.
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Quando movimento ref apropr. indireta, so considera os         ³
								//³ movimentos com destino ao almoxarifado de apropriacao indireta.³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								lInverteMov:=.F.
								If (cAliasTop)->ARMAZEM != cLocalAnt .Or. lCusUnif
									If !(Substr((cAliasTop)->CF,3,1) == "3")
										If !lCusUnif
											dbSkip()
											Loop
										EndIf
									ElseIf lPriApropri
										lInverteMov:=.T.
									EndIf
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Caso seja uma transferencia de localizacao verifica se lista   ³
								//³ o movimento ou nao                                             ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If mv_par13 == 2 .And. Substr((cAliasTop)->CF,3,1) == "4"
									cNumSeqTr := (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM)
									aDadosTran:={(cAliasTOP)->TES,(cAliasTOP)->QUANTIDADE,(cAliasTOP)->CUSTO,(cAliasTOP)->QUANT2UM,(cAliasTOP)->TIPO,;
									             (cAliasTOP)->DATA,(cAliasTOP)->CF,(cAliasTOP)->SEQUENCIA,(cAliasTOP)->DOCUMENTO,(cAliasTOP)->PRODUTO,;
									             (cAliasTOP)->OP,(cAliasTOP)->PROJETO,(cAliasTOP)->CC,(cAliasTOP)->ARQ}
									dbSkip()
									If (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM) == cNumSeqTr
										dbSkip()
										Loop
									Else
										lContinua := .T.
										If !Localiza(aDadosTran[10]) //Verifica se Utiliza localizacao
											If li > 58
												If mv_par16 == 1
													cabec( titulo + " - " + aFilsCalc[ nForFilial, 3 ], cabec1, cabec2, wnrel, Tamanho, nTipo )
												Else
													cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
												EndIf
											EndIf
											If lFirst
												@Li ,000 PSay STOD(aDadosTran[6])
												@Li ,011 PSay aDadosTran[1]
												If ( cPaisLoc=="BRA" )
													If	lInverteMov
														@Li , 016 PSay Substr(aDadosTran[7],1,3)					
														@Li , 019 PSay "*"
													Else
														@Li , 016 PSay aDadosTran[7]
											   		EndIf
												EndIf
												@Li , 021 PSay PadR(IIf(mv_par09 $ "Ss",aDadosTran[8],aDadosTran[9]),12)+" |"
											EndIf
											If aDadosTran[1] <= "500"
												@Li ,045 PSay aDadosTran[2] Picture cPicD3Qt
												@Li ,062 PSay aDadosTran[3] Picture cPicD3Cust
												@Li ,083 PSay "|"
												@Li ,085 PSay aDadosTran[3] / aDadosTran[2] Picture cPicB2Cust
												@Li ,104 PSay "|"
												nEntrada	  += aDadosTran[2]
												aSalAtu[1] += aDadosTran[2]
												nCEntrada  +=  aDadosTran[3]
												aSalAtu[mv_par10+1] += aDadosTran[3]
												aSalAtu[7] += aDadosTran[4]
											Else
												@Li ,083 PSay "|"
												@Li ,085 PSay aDadosTran[3] / aDadosTran[2] Picture cPicB2Cust
												@Li ,104 PSay "|"
												@Li ,114 PSay aDadosTran[2] Picture cPicD3Qt
												@Li ,132 PSay aDadosTran[3] Picture cPicD3Cust
												nSaida	  += aDadosTran[2]
												aSalAtu[1] -= aDadosTran[2]
												nCSaida	  += aDadosTran[3]
												aSalAtu[mv_par10+1] -= aDadosTran[3]
												aSalAtu[7] -= aDadosTran[4]
											EndIf
										Else
											lTransEnd := .F.
										EndIf
									EndIf
								EndIf
							EndIf
							If li > 58 .And. !lContinua
								If mv_par16 == 1
									cabec( titulo + " - " + aFilsCalc[ nForFilial, 3 ], cabec1, cabec2, wnrel, Tamanho, nTipo )
								Else
									cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
								EndIf
							EndIf
							If lFirst .And. !lContinua
								@Li ,000 PSay STOD(DATA)
								@Li ,011 PSay TES
								If ( cPaisLoc=="BRA" )
									If	lInverteMov
										@Li , 016 PSay Substr(CF,1,3)					
										@Li , 019 PSay "*"
									Else
										@Li , 016 PSay CF
									EndIf
								EndIf
								@Li , 021 PSay PadR(IIf(mv_par09 $ "Ss",SEQUENCIA,DOCUMENTO),12)+" |"
							EndIf
							Do Case
								Case Alltrim((cAliasTop)->ARQ) == "SD1" .And. !lContinua
									lDev:=MTR900Dev("SD1",cAliasTop)
									If (cAliasTOP)->TES <= "500" .And. !lDev
										@Li ,045 PSay (cAliasTOP)->QUANTIDADE Picture cPicD1Qt
										@Li ,062 PSay (cAliasTOP)->CUSTO Picture cPicD1Cust
										@Li ,083 PSay "|"
										If (cAliasTOP)->TIPONF != "C"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
										EndIf
										@Li ,104 PSay "|"
										nEntrada   += (cAliasTOP)->QUANTIDADE
										aSalAtu[1] += (cAliasTOP)->QUANTIDADE
										nCEntrada  += (cAliasTOP)->CUSTO
										aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
										aSalAtu[7] += (cAliasTOP)->QUANT2UM
									Else
										@Li ,083 PSay "|"
										If (cAliasTOP)->TIPONF != "C"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
										EndIf
										@Li ,104 PSay "|"
										If lDev
											@Li ,107 PSay Space((nTam-1)-Len(Alltrim(Transform((cAliasTOP)->QUANTIDADE,cPicD1Qt))))+"("+Alltrim(Transform((cAliasTOP)->QUANTIDADE,cPicD1Qt))+")"
											cCusto:=Transform((cAliasTOP)->CUSTO,cPicD1Cust)
											@Li ,132 PSay Space((nTam-1)-Len(Alltrim(cCusto)))+"("+Alltrim(cCusto)+")"
											nSaida 	  -= (cAliasTOP)->QUANTIDADE
											aSalAtu[1] += (cAliasTOP)->QUANTIDADE
											nCSaida	  -=(cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
											aSalAtu[7] += (cAliasTOP)->QUANT2UM
										Else
											@Li ,114 PSay (cAliasTOP)->QUANTIDADE Picture cPicD1Qt
											@Li ,132 PSay (cAliasTOP)->CUSTO Picture cPicD1Cust
											nSaida 	  += (cAliasTOP)->QUANTIDADE
											aSalAtu[1] -= (cAliasTOP)->QUANTIDADE
											nCSaida	  +=(cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] -= (cAliasTOP)->CUSTO
											aSalAtu[7] -= (cAliasTOP)->QUANT2UM
										EndIf
						   			EndIf
								Case Alltrim((cAliasTop)->ARQ) = "SD2" .And. !lContinua
									lDev:=MTR900Dev("SD2",cAliasTop)
									If (cAliasTOP)->TES <= "500" .Or. lDev
										If lDev
											@Li ,038 PSay Space((nTam-1)-Len(Alltrim(Transform((cAliasTOP)->QUANTIDADE,cPicD2Qt))))+"("+Alltrim(Transform((cAliasTOP)->QUANTIDADE,cPicD2Qt))+")"
											cCusto:=Transform((cAliasTOP)->CUSTO,cPicD2Cust)
											@Li ,062 PSay Space((nTam-1)-Len(Alltrim(cCusto)))+"("+Alltrim(cCusto)+")"
											nEntrada   -= (cAliasTOP)->QUANTIDADE
											aSalAtu[1] -= (cAliasTOP)->QUANTIDADE
											nCEntrada  -= (cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] -= (cAliasTOP)->CUSTO
											aSalAtu[7] -= (cAliasTOP)->QUANT2UM
										Else
											@Li ,045 PSay (cAliasTOP)->QUANTIDADE Picture cPicD2Qt
											@Li ,062 PSay (cAliasTOP)->CUSTO Picture cPicD2Cust
											nEntrada   += (cAliasTOP)->QUANTIDADE
											aSalAtu[1] += (cAliasTOP)->QUANTIDADE
											nCEntrada  += (cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
											aSalAtu[7] += (cAliasTOP)->QUANT2UM
										EndIf
										@Li ,083 PSay "|"
										If (cAliasTOP)->TIPONF != "C"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
										EndIf
										@Li ,104 PSay "|"
									Else
										@Li ,083 PSay "|"
										If (cAliasTOP)->TIPONF != "C"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
										EndIf
										@Li ,104 PSay "|"
										@Li ,114 PSay (cAliasTOP)->QUANTIDADE Picture cPicD2Qt
										@Li ,132 PSay (cAliasTOP)->CUSTO Picture cPicD2Cust
										nSaida     += (cAliasTOP)->QUANTIDADE
										aSalAtu[1] -= (cAliasTOP)->QUANTIDADE
										nCSaida	  +=  (cAliasTOP)->CUSTO
										aSalAtu[mv_par10+1] -= (cAliasTOP)->CUSTO
										aSalAtu[7] -= (cAliasTOP)->QUANT2UM
									EndIf
								Case Alltrim((cAliasTop)->ARQ) == "SD3" .And. !lContinua
									If	lInverteMov
										If (cAliasTOP)->TES > "500"
											@Li ,045 PSay (cAliasTOP)->QUANTIDADE Picture cPicD3Qt
											@Li ,062 PSay (cAliasTOP)->CUSTO Picture cPicD3Cust
											@Li ,083 PSay "|"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
											@Li ,104 PSay "|"
											nEntrada  += (cAliasTOP)->QUANTIDADE
											aSalAtu[1] += (cAliasTOP)->QUANTIDADE
											nCEntrada  +=  (cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
											aSalAtu[7] += (cAliasTOP)->QUANT2UM
										Else	
											@Li ,083 PSay "|"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
											@Li ,104 PSay "|"
											@Li ,114 PSay (cAliasTOP)->QUANTIDADE Picture cPicD3Qt
											@Li ,132 PSay (cAliasTOP)->CUSTO Picture cPicD3Cust
											nSaida	  += (cAliasTOP)->QUANTIDADE
											aSalAtu[1] -= (cAliasTOP)->QUANTIDADE
											nCSaida	  += (cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] -= (cAliasTOP)->CUSTO
											aSalAtu[7] -= (cAliasTOP)->QUANT2UM
										EndIf
										If lCusUnif
											lPriApropri:=.F.
										EndIf
									Else
										If (cAliasTOP)->TES <= "500"
											@Li ,045 PSay (cAliasTOP)->QUANTIDADE Picture cPicD3Qt
											@Li ,062 PSay (cAliasTOP)->CUSTO Picture cPicD3Cust
											@Li ,083 PSay "|"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
											@Li ,104 PSay "|"
											nEntrada	  += (cAliasTOP)->QUANTIDADE
											aSalAtu[1] += (cAliasTOP)->QUANTIDADE
											nCEntrada  +=  (cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
											aSalAtu[7] += (cAliasTOP)->QUANT2UM
										Else
											@Li ,083 PSay "|"
											@Li ,085 PSay (cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE Picture cPicB2Cust
											@Li ,104 PSay "|"
											@Li ,114 PSay (cAliasTOP)->QUANTIDADE Picture cPicD3Qt
											@Li ,132 PSay (cAliasTOP)->CUSTO Picture cPicD3Cust
											nSaida	  += (cAliasTOP)->QUANTIDADE
											aSalAtu[1] -= (cAliasTOP)->QUANTIDADE
											nCSaida	  += (cAliasTOP)->CUSTO
											aSalAtu[mv_par10+1] -= (cAliasTOP)->CUSTO
											aSalAtu[7] -= (cAliasTOP)->QUANT2UM
										EndIf
										If lCusUnif
											lPriApropri:=.T.
										EndIf
									EndIf
							EndCase
							If lFirst .And. lTransEnd
								@ Li,153 PSay "|"
								@ Li,155 PSay aSalAtu[1] Picture cPicB2Qt
								@ Li,177 PSay aSalAtu[mv_par10+1] Picture cPicB2Cust
								@ Li,195 PSay "|"
							EndIf
							Do Case
								Case Alltrim((cAliasTop)->ARQ) == "SD3" .And. !lContinua .And. lTransEnd
									If Empty((cAliasTOP)->OP) .And. Empty((cAliasTOP)->PROJETO)
										@ LI,197 PSay 'CC'+(cAliasTOP)->CC
									ElseIf !Empty((cAliasTOP)->PROJETO)
										@ LI,197 PSay 'PJ'+(cAliasTOP)->PROJETO
									ElseIf !Empty((cAliasTOP)->OP)
										@ LI,207 PSay 'OP'+(cAliasTOP)->OP
									EndIf
								Case Alltrim((cAliasTop)->ARQ) == "SD1" .And. !lContinua .And. lTransEnd
									@ LI,207 PSay 'F-'+(cAliasTOP)->FORNECEDOR
								Case Alltrim((cAliasTop)->ARQ) == "SD2" .And. !lContinua .And. lTransEnd
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³N - QNC: 002117                                                       ³
									//³Corrigida a ultima coluna do relatorio onde apresentava nas notas     ³
									//³de saida o número do pedido de compra , ao invés de apresentar        ³
									//³o codigo do cliente quando o D2_TIPO="N",                             ³
									//³quando D2_TIPO="B" mostrar o codigo do fornecedor.                    ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									If ((cAliasTop)->TIPONF) == "B"
										@ LI,207 PSay 'F-'+(cAliasTop)->FORNECEDOR
									Else
										@ LI,207 PSay 'C-'+(cAliasTop)->FORNECEDOR
									EndIf
								Case lContinua .And. aDadosTran[14] == "SD3"  .And. lTransEnd
									If Empty(aDadosTran[11]) .And. Empty(aDadosTran[12])
										@ LI,197 PSay 'CC'+aDadosTran[13] 
									ElseIf !Empty(aDadosTran[12])
										@ LI,197 PSay 'PJ'+aDadosTran[12]
									ElseIf !Empty(aDadosTran[11])
										@ LI,207 PSay 'OP'+aDadosTran[11]
									EndIf
							EndCase
							If lTransEnd							
								Li++
							End If
							lTransEnd := .T.
							If !lInverteMov .Or. (lInverteMov .And. lPriApropri)
								If !lContinua //Acerto para utilizar o Array aDadosTranf[]
									dbSkip()
								EndIf
							EndIf
						EndDo
	
						If lFirst
							If li > 58
								cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
							Else	
								Li ++
							EndIf
							@ li,000 PSay STR0021	//"T O T A I S  :"
							@ Li,045 PSay nEntrada	Picture cPicD1Qt
							@ Li,062 PSay nCEntrada	Picture cPicD1Cust
							@ Li,114 PSay nSaida	Picture cPicD2Qt
							@ Li,132 PSay nCSaida	Picture cPicD2Cust
							@ Li,155 PSay aSalAtu[1] Picture cPicB2Qt
							@ Li,177 PSay aSalAtu[mv_par10+1] Picture cPicB2Cust
							Li++
							@ Li,135 PSay STR0022	//"QTD. NA SEGUNDA UM: "
							@ Li,155 PSay aSalAtu[7] Picture cPicB2Qt2
							Li++
							@Li ,   0 PSay __PrtThinLine()
						Else
							If !MTR900IsMNT() .Or. (MTR900IsMNT().And. SB1->B1_COD <> cProdMNT .And. SB1->B1_COD <> cProdTER)
								@Li ,  0 PSay STR0023	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
								Li++
								@Li ,  0 PSay __PrtThinLine()
							EndIf	
						EndIf
						Li++
					EndDo
					dbSelectArea(cAliasTop)	
					dbCloseArea()
				Else
			#ENDIF
				dbSelectArea("SD1")
				If mv_par11 == 1
					dbSetOrder(5)
				Else
					If lCusUnif
						cIndice:="D1_FILIAL+D1_COD+D1_SEQCALC+D1_NUMSEQ"
					Else
						cIndice:="D1_FILIAL+D1_COD+D1_LOCAL+D1_SEQCALC+D1_NUMSEQ"
					EndIf
					INDREGUA("SD1",cTrbSD1,cIndice,,DBFilter(),STR0019)	//"Selecionando Registros"
					nInd := RetIndex("SD1")
					#IFNDEF TOP
			  		   dbSetIndex(cTrbSD1+OrdBagExt())
					#ENDIF
					dbSetOrder(nInd+1)
				EndIf
		
				dbSelectArea("SD2")
				If mv_par11 == 1
					dbSetOrder(1)
				Else
					If lCusUnif
						cIndice:="D2_FILIAL+D2_COD+D2_SEQCALC+D2_NUMSEQ"
					Else
						cIndice:="D2_FILIAL+D2_COD+D2_LOCAL+D2_SEQCALC+D2_NUMSEQ"
					EndIf
					INDREGUA("SD2",cTrbSD2,cIndice,,,STR0019)	//"Selecionando Registros"
					nInd := RetIndex("SD2")
					#IFNDEF TOP
					  dbSetIndex(cTrbSD2+OrdBagExt())
					#ENDIF
					dbSetOrder(nInd+1)
				EndIf
		
				dbSelectArea("SD3")
			
				If mv_par11 == 1
					dbSetOrder(3)
				Else
					If lCusUnif
						cIndice:="D3_FILIAL+D3_COD+D3_SEQCALC+D3_NUMSEQ"
					Else
						cIndice:="D3_FILIAL+D3_COD+D3_LOCAL+D3_SEQCALC+D3_NUMSEQ"
					EndIf
			
					IndRegua("SD3",cTrbSD3,cIndice,,,STR0019)	//"Selecionando Registros"
			
					nInd := RetIndex("SD3")
					#IFNDEF TOP
			     	  dbSetIndex(cTrbSD3+OrdBagExt())
			 		#ENDIF
				    dbSetOrder(nInd+1)
				EndIf
				
				Set Softseek On
			
				dbSelectArea("SB1")
	
				If ! lVEIC
					If aReturn[8]==1
						dbSetOrder(1)
						dbseek(cFilial+mv_par01)
						cCond1:="B1_COD"
						cCond2:="mv_par02"
						nInd1	:= 0 
			
					ElseIf aReturn[8] == 2
						dbSetOrder(2)
						dbseek(cFilial+mv_par03)
						cCond1:="B1_TIPO"
						cCond2:="mv_par04"
						nInd1	:= 1
					EndIf  
				Else
					cArq1	:= CriaTrab( nil,.F. )
					If aReturn[8]==1
						IndRegua('SB1',cArq1,"B1_FILIAL+B1_CODITE")
						nInd1	:= RetIndex('SB1')
						#IFNDEF TOP
							dbSetIndex(cArq1 + OrdBagExt())
						#ENDIF
						dbSetOrder(nInd1 + 1)
						dbseek(cFilial+mv_par01)
						cCond1:="B1_CODITE"
						cCond2:="mv_par02"
					ElseIf aReturn[8] == 2
						IndRegua('SB1',cArq1,"B1_FILIAL+B1_TIPO+B1_CODITE")
						nInd1	:= RetIndex('SB1')
						#IFNDEF TOP
							dbSetIndex(cArq1 + OrdBagExt())
						#ENDIF
						dbSetOrder(nInd1 + 1)
						dbSeek(cFilial+mv_par03)
						cCond1:="B1_TIPO"
						cCond2:="mv_par04"
					EndIf  
				EndIf
				Set Softseek Off
			
				SetRegua(LastRec())
		
				While !Eof() .and. B1_FILIAL == cFilial .and. &cCond1 <= &cCond2
					
					If lEnd
						@PROW()+1,001 PSay STR0020		//"CANCELADO PELO OPERADOR"
						Exit
					EndIf
					
					IncRegua()
			
					dbSelectArea("SB1")
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Filtra Registros de Acordo com a Pasta  Filtro da Janela de Impressao  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !Empty(aReturn[7])
						If !&(aReturn[7])
							dbSkip()
							Loop
						Endif   
					EndIf
			
					// Filtra por Tipo
					If B1_TIPO < mv_par03 .or. B1_TIPO > mv_par04
						dbSkip()
						Loop
					EndIf
					
					// Filtra por Produto
					If ! lVEIC
						If B1_COD < mv_par01 .or. B1_COD > mv_par02
							dbSkip()
							Loop
						EndIf
					Else
						If B1_CODITE < mv_par01 .or. B1_CODITE > mv_par02
							dbSkip()
							Loop
						EndIf
					EndIf		
	
					// Nao lista produto de importacao
					If B1_COD == Substr(cProdImp,1,Len(B1_COD))
						dbSkip()
						Loop
					EndIf
					
					// Filtra por Grupo
					If B1_GRUPO < mv_par14 .or. B1_GRUPO > mv_par15
						dbSkip()
						Loop
					EndIf
			
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Se nao encontrar no arquivo de saldos nao lista  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SB2")
					If !dbSeek(cFilial+SB1->B1_COD+If(lCusUnif,"",mv_par08))
						dbSelectArea("SB1")
						dbSkip()
						Loop
					EndIf
					
					cProdAnt  := SB1->B1_COD
					cLocalAnt := B2_LOCAL
					
					dbSelectArea("SD1")
					dbSeek(cFilial+SB1->B1_COD+If(lCusUnif,"",SB2->B2_LOCAL))
					dbSelectArea("SD2")
					dbSeek(cFilial+SB1->B1_COD+If(lCusUnif,"",SB2->B2_LOCAL))
					dbSelectArea("SD3")
					dbSeek(cFilial+SB1->B1_COD+If(lCusUnif.Or.lLocProc,"",SB2->B2_LOCAL))
			
					While .T.
						
						dbSelectArea("SD1")
						If !Eof() .And. D1_FILIAL == xFilial("SD1") .And. D1_COD = cProdAnt .And. If(lCusUnif,.T.,D1_LOCAL = cLocalAnt)
							
							dbSelectArea("SF4")
							dbSeek(cFilial+SD1->D1_TES)
							dbSelectArea("SD1")
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Executa ponto de entrada para verificar se considera TES que ³
							//³ NAO ATUALIZA saldos em estoque.                              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
								lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
								lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
							EndIf
							
							If D1_ORIGLAN $ "LF" .Or. (SF4->F4_ESTOQUE != "S" .And. !lTesNEst)
								dbSkip()
								Loop
							Else
								If D1_DTDIGIT < mv_par05 .or. D1_DTDIGIT > mv_par06
									dbSkip()
									loop
								Else
									cSeqIni := IIf(mv_par11==1,D1_NUMSEQ,D1_SEQCALC+D1_NUMSEQ)
									cAlias := Alias()
								Endif
							EndIf
						EndIf
						
						dbSelectArea("SD2")
						If !Eof() .And. D2_FILIAL == xFilial("SD2") .And. D2_COD = cProdAnt .And. If(lCusUnif,.T.,D2_LOCAL = cLocalAnt)
							
							dbSelectArea("SF4")
							dbSeek(cFilial+SD2->D2_TES)
							dbSelectArea("SD2")
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Executa ponto de entrada para verificar se considera TES que ³
							//³ NAO ATUALIZA saldos em estoque.                              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
								lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
								lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
							EndIf
					
							If D2_ORIGLAN == "LF" .Or. (SF4->F4_ESTOQUE != "S" .And. !lTesNEst)
								dbSkip()
								Loop
							Else
								If D2_EMISSAO < mv_par05 .Or. D2_EMISSAO > mv_par06
									dbSkip()
									Loop
								Else
									If mv_par11 == 1
										If D2_NUMSEQ < cSeqIni
											cSeqIni := D2_NUMSEQ
											cAlias  := Alias()
										Endif
									Else
										If D2_SEQCALC+D2_NUMSEQ < cSeqIni
											cSeqIni := D2_SEQCALC+D2_NUMSEQ
											cAlias  := Alias()
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf
				
						dbSelectArea("SD3")
						If !Eof() .And. D3_FILIAL == xFilial("SD3") .And. D3_COD = cProdAnt .And. If(lCusUnif.Or.lLocProc,.T.,D3_LOCAL = cLocalAnt)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Quando movimento ref apropr. indireta, so considera os         ³
							//³ movimentos com destino ao almoxarifado de apropriacao indireta.³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							lInverteMov:=.F.
							If D3_LOCAL != cLocalAnt .Or. lCusUnif
								If !(Substr(D3_CF,3,1) == "3")
									If !lCusUnif
										dbSkip()
										Loop
									EndIf
								ElseIf lPriApropri
									lInverteMov:=.T.
								EndIf
							EndIf
			
							If D3_EMISSAO < mv_par05 .Or. D3_EMISSAO > mv_par06
								dbSkip()
								Loop
							EndIf
							 // Validacao tratamento se considera os estornos e se considera movimentos WMS
							If !D3Valido() 
								dbSkip()
								Loop
							EndIf
				 	
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Caso seja uma transferencia de localizacao verifica se lista   ³
							//³ o movimento ou nao                                             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If mv_par13 == 2 .And. Substr(D3_CF,3,1) == "4"
								cNumSeqTr := SD3->D3_COD+SD3->D3_NUMSEQ+SD3->D3_LOCAL
								nRegTr    := Recno()
								dbSkip()
								If SD3->D3_COD+SD3->D3_NUMSEQ+SD3->D3_LOCAL == cNumSeqTr
									dbSkip()
									Loop
								Else
									dbGoto(nRegTr)
								EndIf
							EndIf
							If mv_par11 == 1
								If D3_NUMSEQ < cSeqIni
									cSeqIni := D3_NUMSEQ
									cAlias := Alias()
								EndIf
							Else
								If D3_SEQCALC+D3_NUMSEQ < cSeqIni
									cSeqIni := D3_SEQCALC+D3_NUMSEQ
									cAlias := Alias()
								EndIf
							EndIf
						EndIf
				
						If !Empty(cAlias)
							dbSelectArea(cAlias)
							cCampo1 := Subs(cAlias,2,2)+IIf(cAlias=="SD1","_DTDIGIT","_EMISSAO")
							cCampo2 := Subs(cAlias,2,2)+"_TES"
							cCampo3 := Subs(cAlias,2,2)+"_CF"
							cCampo4 := Subs(cAlias,2,2)+IIf(mv_par09 $ "Ss","_NUMSEQ","_DOC" )
							
							If li > 58
								cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
							EndIf
							
							If lFirst
								nEntrada :=nSaida :=0
								nCEntrada:=nCSaida:=0
								If li > 54
									cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
								EndIf
								MTR900CAB(@aSalAtu,cAlias,cPicB2Cust,nTam,.F.)
								lFirst  := .F.
								lFirst1 := .F.
							EndIf
			
							If li > 58
								cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
							EndIf
					
							@Li , 0 PSay &cCampo1
							If cAlias == "SD3"
								@Li ,011 PSay D3_TM
							Else
								@Li ,011 PSay &cCampo2
							EndIf
							If ( cPaisLoc=="BRA" )
								@Li , 016 PSay &cCampo3
								If	lInverteMov
									@Li , 019 PSay "*"
								EndIf
							EndIf
							@Li , 021 PSay PadR(&cCampo4,12)+" |"
							Do Case
							Case cAlias = "SD1"
								lDev:=MTR900Dev("SD1")
								If D1_TES <= "500" .And. !lDev
									@Li ,045 PSay D1_QUANT Picture cPicD1Qt
									@Li ,062 PSay &(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10))) Picture cPicD1Cust
									@Li ,083 PSay "|"
									If SF1->F1_TIPO != "C"
										@Li ,085 PSay (&(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10))) / D1_QUANT) Picture cPicB2Cust
									EndIf
									@Li ,104 PSay "|"
									nEntrada   += D1_QUANT
									aSalAtu[1] += D1_QUANT
									nCEntrada  += &(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10)))
									aSalAtu[mv_par10+1] += &(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10)))
									aSalAtu[7] += D1_QTSEGUM
								Else
									@Li ,083 PSay "|"
									If SF1->F1_TIPO != "C"
										@Li ,085 PSay (&(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10))) / D1_QUANT) Picture cPicB2Cust
									EndIf
									@Li ,104 PSay "|"
									If lDev
										@Li ,107 PSay Space((nTam-1)-Len(Alltrim(Transform(D1_QUANT,cPicD1Qt))))+"("+Alltrim(Transform(D1_QUANT,cPicD1Qt))+")"
										cCusto:=Transform(&(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10))),cPicD1Cust)
										@Li ,132 PSay Space((nTam-1)-Len(Alltrim(cCusto)))+"("+Alltrim(cCusto)+")"
										nSaida 	  -= D1_QUANT
										aSalAtu[1] += D1_QUANT
										nCSaida	  -=&(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10)))
										aSalAtu[mv_par10+1] += &(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10)))
										aSalAtu[7] += D1_QTSEGUM
									Else
										@Li ,114 PSay D1_QUANT Picture cPicD1Qt
										@Li ,132 PSay &(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10))) Picture cPicD1Cust
										nSaida 	  += D1_QUANT
										aSalAtu[1] -= D1_QUANT
										nCSaida	  +=&(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10)))
										aSalAtu[mv_par10+1] -= &(Eval(bBloco,"D1_CUSTO",IIf(mv_par10==1," ",mv_par10)))
										aSalAtu[7] -= D1_QTSEGUM
									EndIf
								EndIf
							Case cAlias = "SD2"
								lDev:=MTR900Dev("SD2")
								If D2_TES <= "500" .Or. lDev
									If lDev
										@Li ,038 PSay Space((nTam-1)-Len(Alltrim(Transform(D2_QUANT,cPicD2Qt))))+"("+Alltrim(Transform(D2_QUANT,cPicD2Qt))+")"
										cCusto:=Transform(&(Eval(bBloco,"D2_CUSTO",mv_par10)),cPicD2Cust)
										@Li ,062 PSay Space((nTam-1)-Len(Alltrim(cCusto)))+"("+Alltrim(cCusto)+")"
										nEntrada   -= D2_QUANT
										aSalAtu[1] -= D2_QUANT
										nCEntrada  -= &(Eval(bBloco,"D2_CUSTO",mv_par10))
										aSalAtu[mv_par10+1] -= &(Eval(bBloco,"D2_CUSTO",mv_par10))
										aSalAtu[7] -= D2_QTSEGUM
									Else
										@Li ,045 PSay D2_QUANT Picture cPicD2Qt
										@Li ,062 PSay &(Eval(bBloco,"D2_CUSTO",mv_par10)) Picture cPicD2Cust
										nEntrada   += D2_QUANT
										aSalAtu[1] += D2_QUANT
										nCEntrada  += &(Eval(bBloco,"D2_CUSTO",mv_par10))
										aSalAtu[mv_par10+1] += &(Eval(bBloco,"D2_CUSTO",mv_par10))
										aSalAtu[7] += D2_QTSEGUM
									EndIf
									@Li ,083 PSay "|"
									If SF2->F2_TIPO != "C"
										@Li ,085 PSay (&(Eval(bBloco,"D2_CUSTO",mv_par10)) / D2_QUANT) Picture cPicB2Cust
									EndIf
									@Li ,104 PSay "|"
								Else
									@Li ,083 PSay "|"
									If SF2->F2_TIPO != "C"
										@Li ,085 PSay (&(Eval(bBloco,"D2_CUSTO",mv_par10)) / D2_QUANT) Picture cPicB2Cust
									EndIf
									@Li ,104 PSay "|"
									@Li ,114 PSay D2_QUANT Picture cPicD2Qt
									@Li ,132 PSay &(Eval(bBloco,"D2_CUSTO",mv_par10)) Picture cPicD2Cust
									nSaida     += D2_QUANT
									aSalAtu[1] -= D2_QUANT
									nCSaida	  +=  &(Eval(bBloco,"D2_CUSTO",mv_par10))
									aSalAtu[mv_par10+1] -= &(Eval(bBloco,"D2_CUSTO",mv_par10))
									aSalAtu[7] -= D2_QTSEGUM
								EndIf
							Otherwise
								If	lInverteMov
									If D3_TM > "500"
										@Li ,045 PSay D3_QUANT Picture cPicD3Qt
										@Li ,062 PSay &(Eval(bBloco,"D3_CUSTO",mv_par10)) Picture cPicD3Cust
										@Li ,083 PSay "|"
										@Li ,085 PSay (&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT) Picture cPicB2Cust
										@Li ,104 PSay "|"
										nEntrada	  += D3_QUANT
										aSalAtu[1] += D3_QUANT
										nCEntrada  +=  &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[mv_par10+1] += &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[7] += D3_QTSEGUM
									Else
										@Li ,083 PSay "|"
										@Li ,085 PSay (&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT) Picture cPicB2Cust
										@Li ,104 PSay "|"
										@Li ,114 PSay D3_QUANT Picture cPicD3Qt
										@Li ,132 PSay &(Eval(bBloco,"D3_CUSTO",mv_par10)) Picture cPicD3Cust
										nSaida	  += D3_QUANT
										aSalAtu[1] -= D3_QUANT
										nCSaida	  += &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[mv_par10+1] -= &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[7] -= D3_QTSEGUM
									EndIf
									If lCusUnif
										lPriApropri:=.F.
									EndIf
								Else
									If D3_TM <= "500"
										@Li ,045 PSay D3_QUANT Picture cPicD3Qt
										@Li ,062 PSay &(Eval(bBloco,"D3_CUSTO",mv_par10)) Picture cPicD3Cust
										@Li ,083 PSay "|"
										@Li ,085 PSay (&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT) Picture cPicB2Cust
										@Li ,104 PSay "|"
										nEntrada	  += D3_QUANT
										aSalAtu[1] += D3_QUANT
										nCEntrada  +=  &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[mv_par10+1] += &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[7] += D3_QTSEGUM
									Else
										@Li ,083 PSay "|"
										@Li ,085 PSay (&(Eval(bBloco,"D3_CUSTO",mv_par10)) / D3_QUANT) Picture cPicB2Cust
										@Li ,104 PSay "|"
										@Li ,114 PSay D3_QUANT Picture cPicD3Qt
										@Li ,132 PSay &(Eval(bBloco,"D3_CUSTO",mv_par10)) Picture cPicD3Cust
										nSaida	  += D3_QUANT
										aSalAtu[1] -= D3_QUANT
										nCSaida	  += &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[mv_par10+1] -= &(Eval(bBloco,"D3_CUSTO",mv_par10))
										aSalAtu[7] -= D3_QTSEGUM
									EndIf
									If lCusUnif
										lPriApropri:=.T.
									EndIf
								EndIf
							EndCase
							@ Li,153 PSay "|"
							@ Li,155 PSay aSalAtu[1] Picture cPicB2Qt
							@ Li,177 PSay aSalAtu[mv_par10+1] Picture cPicB2Cust
							@ Li,195 PSay "|"
							Do Case
								Case cAlias = "SD3"  && movimentos (SD3)
									If Empty(D3_OP) .And. Empty(D3_PROJPMS)
										@ LI,197 PSay 'CC'+D3_CC
									ElseIf !Empty(D3_PROJPMS)
										@ LI,197 PSay 'PJ'+D3_PROJPMS
									ElseIf !Empty(D3_OP)
										@ LI,207 PSay 'OP'+D3_OP
									EndIf
								Case cAlias = "SD1"  && compras    (SD1)
									@ LI,207 PSay 'F-'+D1_FORNECE
								Case cAlias = "SD2"  && vendas     (SD2)
									If D2_TIPO == "B"
			 							@ LI,207 PSay 'F-'+D2_CLIENTE
			 						Else
			 							@ LI,207 PSay 'C-'+D2_CLIENTE
				 					EndIf
							EndCase
							
							Li++
							cSeqIni := Replicate("z",6)
							cAlias := ""
							If !lInverteMov .Or. (lInverteMov .And. lPriApropri)
								dbSkip()
							EndIf
						Else
							If !lFirst
								If li > 58
									cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
								Else	
									Li ++
								EndIf
								@ li,000 PSay STR0021	//"T O T A I S  :"
								@ Li,045 PSay nEntrada	Picture cPicD1Qt
								@ Li,062 PSay nCEntrada	Picture cPicD1Cust
								@ Li,114 PSay nSaida	Picture cPicD2Qt
								@ Li,132 PSay nCSaida	Picture cPicD2Cust
								@ Li,155 PSay aSalAtu[1] Picture cPicB2Qt
								@ Li,177 PSay aSalAtu[mv_par10+1] Picture cPicB2Cust
								Li++
								@ Li,135 PSay STR0022	//"QTD. NA SEGUNDA UM: "
								@ Li,155 PSay aSalAtu[7] Picture cPicB2Qt2
								Li++
								@Li ,   0 PSay __PrtThinLine()
								Li++
								lFirst := .T.
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Verifica se deve ou nao listar os produtos s/movimento ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If mv_par07 == 1
									If li > 54
										cabec(titulo,cabec1,cabec2,wnrel,Tamanho,nTipo)
									EndIf
									MTR900CAB(@aSalAtu,Alias(),cPicB2Cust,nTam,.F.)

									If !MTR900IsMNT() .Or. (MTR900IsMNT().And. SB1->B1_COD <> cProdMNT .And. SB1->B1_COD <> cProdTER)
										@Li ,  0 PSay STR0023	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
										Li++
										@Li ,  0 PSay __PrtThinLine()
										Li++
									EndIf
										
									lFirst  := .T.
									lFirst1 := .T.
								EndIf
							EndIf
							Exit
						EndIf
					EndDo
					lFirst  := .T.
					dbSelectArea("SB1")
					dbSkip()
				EndDo
			#IFDEF TOP
				EndIf
			#ENDIF
	
			If li != 80
				roda(cbcont,cbtxt,Tamanho)
			EndIf
	
			dbSelectArea("SB1")
			dbClearFilter()
			If !Empty(cArq1) .And. File(cArq1 + OrdBagExt())
				RetIndex('SB1')
				FERASE(cArq1 + OrdBagExt())
			EndIf
			dbSetOrder(1)
			dbSelectArea("SB2")
			dbSetOrder(1)
			dbSelectArea("SD1")
			If !Empty(cTrbSD1) .And. File(cTrbSD1 + OrdBagExt())
				RetIndex("SD1")
				Ferase(cTrbSD1+OrdBagExt())
			EndIf
			dbSetOrder(1)
			dbSelectArea("SD2")
			If !Empty(cTrbSD2) .And. File(cTrbSD2 + OrdBagExt())
				RetIndex("SD2")
				Ferase(cTrbSD2+OrdBagExt())
			EndIf
			dbSetOrder(1)
			dbSelectArea("SD3")
			If !Empty(cTrbSD3) .And. File(cTrbSD2 + OrdBagExt())
				RetIndex("SD3")
				Ferase(cTrbSD3+OrdBagExt())
			EndIf
			dbSetOrder(1)
	
		EndIf
	
	Next nForFilial

	If aReturn[5] = 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf

	MS_FLUSH()

EndIf

// Restaura Filial Corrente
cFilAnt := cFilBack

RETURN
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MTR900val³ Autor ³ Paulo Boschetti       ³ Data ³ 22.12.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida parametro mv_par09 - (d)OCUMENTO/(s)EQUENCIA        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Mtr900val()
Local lRet := .T.

If mv_par09 $ "dsDS"
	lRet := .T.
Else
	lRet := .F.
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MTR900Cab³ Autor ³ Marcos Bregantim      ³ Data ³ 28.07.93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cabecalho com dados do produto                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTR900Cab(ExpA1,ExpC1,ExpC2,ExpN1,ExpL1,ExpC3)             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array saldo atual	 	                          ³±±
±±³          ³ ExpC1 = Alias 	                                          ³±±
±±³          ³ ExpC2 = Picture do custo medio                             ³±±
±±³          ³ ExpN1 = Tamanho do campo saldo  	                          ³±±
±±³          ³ ExpL1 = Se esta' utilizando query                          ³±±
±±³          ³ ExpC3 = Alias Top                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum			                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Mtr900Cab(aSalAtu,cAlias,cPicB2Cust,nTam,lQuery,cAliasTop)
Local nCusMed 	:= 0,i:=0
Local aSalAlmox	:={},aArea:={}
Local cSeek		:=""

DEFAULT lQuery 	 := .F.
DEFAULT cAliasTop:="SB1"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Saldo Inicial do Produto             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusUnif
	aArea:=GetArea()
	aSalAtu  := { 0,0,0,0,0,0,0 }
	dbSelectArea("SB2")
	dbSetOrder(1)
	dbSeek(cSeek:=xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD))
	While !Eof() .And. B2_FILIAL+B2_COD == cSeek
		aSalAlmox := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),SB2->B2_LOCAL,mv_par05)
		For i:=1 to Len(aSalAtu)
			aSalAtu[i] += aSalAlmox[i]
		Next i
		dbSkip()
	End
	RestArea(aArea)
Else
	aSalAtu := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),mv_par08,mv_par05)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Custo Medio do Produto               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SB2->(dbSetOrder(1))
SB2->(dbSeek(xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD)))
If AsalAtu[1] > 0
	nCusmed := aSalAtu[mv_par10+1]/aSalAtu[1]
ElseIf AsalAtu[1] == 0 .and. AsalAtu[mv_par10+1] == 0
	nCusMed := 0
Else
	nCusmed := &(Eval(bBloco,"SB2->B2_CM",mv_par10))
EndIf
If ! lVEIC
	@ Li,000 PSay If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD)
	@ Li,019 PSay SubStr((cAliasTop)->B1_DESC,1,60)
	@ Li,086 PSay STR0024+(cAliasTop)->B1_UM							//"UM : "
	@ Li,096 PSay STR0025+If(lQuery,(cAliasTop)->TIPO,SB1->B1_TIPO)	//"TIPO : "
	@ Li,108 PSay STR0026+(cAliasTop)->B1_GRUPO						//"GRUPO : "
	@ Li,121 PSay STR0027												//"Custo Medio : "
	@ Li,132 PSay nCusMed	 	Picture cPicB2Cust
	@ Li,155 PSay aSalAtu[1]	Picture PesqPictQt("B2_QATU" ,nTam)
	@ Li,177 PSay aSalAtu[mv_par10+1] Picture cPicB2Cust
	Li++
	@ Li,000 PSay STR0028+SUBS((cAliasTop)->B1_POSIPI,1,4)+"."+SUBS((cAliasTop)->B1_POSIPI,5,4)+"."+SUBS((cAliasTop)->B1_POSIPI,9,2)		//"Posicao IPI : "
	@ Li,035 PSay STR0029+ If(lCusUnif , MV_PAR08 , SB2->B2_LOCALIZ) //"Localizacao : "
Else
	@ Li,000 PSay If(lQuery,(cAliasTOP)->B1_CODITE, SB1->B1_CODITE)
	@ Li,PCOL() + 1 PSay If(lQuery, (cAliasTOP)->B1_DESC, SB1->B1_DESC)
	@ Li,115 PSay STR0027						//"Custo Medio : "
	@ Li,132 PSay nCusMed	 	Picture cPicB2Cust
	@ Li,155 PSay aSalAtu[1]	Picture PesqPictQt("B2_QATU" ,nTam)
	@ Li,177 PSay aSalAtu[mv_par10+1] Picture cPicB2Cust
	Li++
	@ Li,000 PSay If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD)
	@ Li,PCOL() + 2 PSay STR0024+(cAliasTop)->B1_UM 							//"UM : "
	@ Li,PCOL() + 2 PSay STR0025+If(lQuery,(cAliasTop)->TIPO,SB1->B1_TIPO)	//"TIPO : "
	@ Li,PCOL() + 2 PSay STR0026+(cAliasTop)->B1_GRUPO							//"GRUPO : "
	@ Li,PCOL() + 2 PSay STR0028+SUBS((cAliasTop)->B1_POSIPI,1,4)+"."+SUBS((cAliasTop)->B1_POSIPI,5,4)+"."+SUBS((cAliasTop)->B1_POSIPI,9,2)		//"Posicao IPI : "
	@ Li,PCOL() + 2 PSay STR0029+ If(lCusUnif , MV_PAR08 , SB2->B2_LOCALIZ) //"Localizacao : "
EndIf
Li += 2
dbSelectArea(cAlias)
Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MTR900Dev³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 17/07/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Avalia se item pertence a uma nota de devolu‡ao             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTR900Dev(ExpC1,ExpC2)				                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias                                              ³±±
±±³          ³ ExpC2 = Alias Top                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTR900Dev(cAlias,cAliasTop)
Static lListaDev := NIL

Local lRet:=.F.
Local cSeek:= If(!Empty(cAliasTop),(cAliasTop)->DOCUMENTO+(cAliasTop)->SERIE+(cAliasTop)->FORNECEDOR+(cAliasTop)->LOJA,"")

// Identifica se lista dev. na mesma coluna
lListaDev := If(ValType(lListaDev)#"L",GetMV("MV_LISTDEV"),lListaDev)

If lListaDev .And. cAlias == "SD1"
	dbSelectArea("SF1")
	If Empty(cSeek)
		cSeek:=SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA
	EndIf
	If dbSeek(xFilial("SF1") + cSeek) .And. SF1->F1_TIPO == "D"
		lRet:=.T.
	EndIf
ElseIf lListaDev .And. cAlias == "SD2"
	dbSelectArea("SF2")
	If Empty(cSeek)
		cSeek:=+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA
	EndIf
	If dbSeek(xFilial("SF2") + cSeek) .And. SF2->F2_TIPO == "D"
		lRet:=.T.
	EndIf
EndIf
dbSelectArea(If(Empty(cAliasTop),cAlias,cAliasTop))
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MTR900CUnf ³ Autor ³Rodrigo de A. Sartorio ³ Data ³26/06/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Ajusta grupo de perguntas p/ Custo Unificado                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTR900Cunf(ExpL1)					                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Custo Unificado								 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTR900CUnf(lCusUnif)
Local aSvAlias:=GetArea()
/*Local nTamSX1 :=Len(SX1->X1_GRUPO)
dbSelectArea("SX1")
If dbSeek(PADR("MTR900",nTamSX1)+"08",.F.)
	If !("MTR900VAlm" $ X1_VALID)
		RecLock("SX1",.F.)
		If Empty(X1_VALID)
			Replace X1_VALID With "MTR900VAlm"
		Else
			Replace X1_VALID With X1_VALID+".And.MTR900VAlm"
		EndIf
		MsUnlock()
	EndIf
	If lCusUnif .And. X1_CNT01 != "**"
		RecLock("SX1",.F.)
		Replace X1_CNT01 With "**"
		MsUnlock()
	EndIf
EndIf*/
RestArea(aSvAlias)
Return(NIL)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MTR900VAlm ³ Autor ³Rodrigo de A. Sartorio ³ Data ³26/06/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida Almoxarifado do KARDEX com relacao a custo unificado ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTR900VAlm()
Local lRet:=.T.
Local cConteudo:=&(ReadVar())
Local nOpc:=2
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL",.F.))
If lCusUnif .And. cConteudo != "**"
	nOpc := Aviso(STR0030,STR0031,{STR0032,STR0033})	//"Aten‡„o"###"Ao alterar o almoxarifado o custo medio unificado sera desconsiderado."###"Confirma"###"Abandona"
	If nOpc == 2
		lRet:=.F.
	EndIf
EndIf
Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ AjustaSX1³ Autor ³ Marcos V. Ferreira    ³ Data ³04/11/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Altera descricao da pergunta no SX1                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900			                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
/*
Static Function AjustaSX1()

Local aAreaAnt := GetArea()
Local aPerg    := {}
Local cPerg    := "MTR900"
Local aHelpPor := aHelpEng := aHelpSpa := {}
Local nTamSX1  := Len(SX1->X1_GRUPO)

Aadd(aPerg,{"Digitacao","Digitacion","Typing"})
Aadd(aPerg,{"Calculo","Calculo","Calculation"})

dbSelectArea("SX1")
dbSetOrder(1)

If dbSeek(PADR(cPerg,nTamSX1)+"07") .And. SX1->X1_TIPO == "C"
	RecLock("SX1",.F.)
	Replace X1_TIPO     with "N"
	Replace X1_PRESEL   with 1
	Replace X1_GSC   	with "C"
	Replace X1_DEF01    with "Sim"
	Replace X1_DEFSPA1  with "Si"
	Replace X1_DEFENG1  with "Yes"
	Replace X1_DEF02    with "Nao"
	Replace X1_DEFSPA2  with "No"
	Replace X1_DEFENG2  with "No"
	Replace X1_CNT01    with " "
	MsUnLock()
EndIf

If dbSeek(PADR(cPerg,nTamSX1)+"11") .And. !(AllTrim(X1_DEF01) == "Digitacao")
	RecLock("SX1",.F.)
	Replace X1_DEF01 	with aPerg[1][1]
	Replace X1_DEFSPA1	with aPerg[1][2]
	Replace X1_DEFENG1 	with aPerg[1][3]
	Replace X1_DEF02 	with aPerg[2][1]
	Replace X1_DEFSPA2	with aPerg[2][2]
	Replace X1_DEFENG2 	with aPerg[2][3]
	MsUnLock()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove do grupo a pergunta 16 antiga                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX1")
dbSetOrder(1)
If dbSeek(PADR("MTR900",nTamSX1)+"16")
	If SX1->X1_PERGUNT <> 'Seleciona Filiais?'
		RecLock("SX1",.F.)
		dbDelete()
		MsUnlock()
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona o Help da nova pergunta 16                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHelpPor := { 'Seleciona as filiais desejadas. Se NAO',;
              'apenas a filial corrente sera afetada.',;
              '' }
aHelpSpa := { 'Selecciona las sucursales deseadas. Si',;
              'NO solamente la sucursal actual es',;
              'afectado.' }
aHelpEng := { 'Select desired branch offices. If NO',;
              'only current branch office will be',;
              'affected.' }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona no grupo a nova pergunta 16                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PutSx1('MTR900',;                //-- 01 - X1_GRUPO
    '16',;                       //-- 02 - X1_ORDEM
    'Seleciona Filiais?',;       //-- 03 - X1_PERGUNT
    '¿Selecciona Sucursales?',;  //-- 04 - X1_PERSPA
    'Select Branch Offices?',;   //-- 05 - X1_PERENG
    'mv_chg',;                   //-- 06 - X1_VARIAVL
    'N',;                        //-- 07 - X1_TIPO
    1,;                          //-- 08 - X1_TAMANHO
    0,;                          //-- 09 - X1_DECIMAL
    2,;                          //-- 10 - X1_PRESEL
    'C',;                        //-- 11 - X1_GSC
    '',;                         //-- 12 - X1_VALID
    '',;                         //-- 13 - X1_F3
    '',;                         //-- 14 - X1_GRPSXG
    '',;                         //-- 15 - X1_PYME
    'mv_par16',;                 //-- 16 - X1_VAR01
    'Sim',;                      //-- 17 - X1_DEF01
    'Si',;                       //-- 18 - X1_DEFSPA1
    'Yes',;                      //-- 19 - X1_DEFENG1
    '',;                         //-- 20 - X1_CNT01
    'Nao',;                      //-- 21 - X1_DEF02
    'No',;                       //-- 22 - X1_DEFSPA2
    'No',;                       //-- 23 - X1_DEFENG2
    '',;                         //-- 24 - X1_DEF03
    '',;                         //-- 25 - X1_DEFSPA3
    '',;                         //-- 26 - X1_DEFENG3
    '',;                         //-- 27 - X1_DEF04
    '',;                         //-- 28 - X1_DEFSPA4
    '',;                         //-- 29 - X1_DEFENG4
    '',;                         //-- 30 - X1_DEF05
    '',;                         //-- 31 - X1_DEFSPA5
    '',;                         //-- 32 - X1_DEFENG5
    aHelpPor,;                   //-- 33 - HelpPor
    aHelpSpa,;                   //-- 34 - HelpSpa
    aHelpEng,;                   //-- 35 - HelpEng
    '')                          //-- 36 - X1_HELP

RestArea(aAreaAnt)

Return*/

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MR900ImpS1³ Autor ³ Nereu Humberto Junior ³ Data ³ 25/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime a secao 1 e 2 (Dados do produto)                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MR900ImpS1(@ExpA1,ExpC1,ExpL1,ExpL2,ExpL3,ExpO1,ExpO2,ExpO3)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array com informacoes do saldo inicial do item     ³±±
±±³          ³   [1] = Saldo inicial em quantidade                        ³±±
±±³          ³   [2] = Saldo inicial em valor                             ³±±
±±³          ³   [3] = Saldo inicial na 2a unidade de medida              ³±±
±±³          ³ ExpC1 = Alias                                              ³±±
±±³          ³ ExpL1 = Top                                                ³±±
±±³          ³ ExpL2 = Veiculo                                            ³±±
±±³          ³ ExpL3 = Custo Unificado                                    ³±±
±±³          ³ ExpO1 = Secao 1                                            ³±±
±±³          ³ ExpO2 = Secao 2                                            ³±±
±±³          ³ ExpO3 = obj Report                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MR900ImpS1(aSalAtu,cAliasTop,lQuery,lVEIC,lCusUnif,oSection1,oSection2,oReport)

Local aArea     := GetArea()
Local nCusMed   := 0,i:=0
Local aSalAlmox :={}
Local cSeek     :=""

DEFAULT lQuery := .F.
DEFAULT cAliasTop:="SB1"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Saldo Inicial do Produto             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusUnif
	aArea:=GetArea()
	aSalAtu  := { 0,0,0,0,0,0,0 }
	dbSelectArea("SB2")
	dbSetOrder(1)
	dbSeek(cSeek:=xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD))
	While !Eof() .And. B2_FILIAL+B2_COD == cSeek
		aSalAlmox := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),SB2->B2_LOCAL,mv_par05)
		For i:=1 to Len(aSalAtu)
			aSalAtu[i] += aSalAlmox[i]
		Next i
		dbSkip()
	End
	RestArea(aArea)
Else
	aSalAtu := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),mv_par08,mv_par05)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Custo Medio do Produto               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SB2->(dbSetOrder(1))
SB2->(dbSeek(xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD)))
If AsalAtu[1] > 0
	nCusmed := aSalAtu[mv_par10+1]/aSalAtu[1]
ElseIf AsalAtu[1] == 0 .and. AsalAtu[mv_par10+1] == 0
	nCusMed := 0
Else
	nCusmed := &(Eval(bBloco,"SB2->B2_CM",mv_par10))
EndIf

oSection1:Init()
oSection2:Init()

oSection1:Cell("nCusMed"):SetValue(nCusMed)
oSection1:Cell("nQtdSal"):SetValue(aSalAtu[1])
oSection1:Cell("nVlrSal"):SetValue(aSalAtu[mv_par10+1])			

#IFDEF TOP
	oSection1:Cell("cProduto"):SetValue((cAliasTop)->PRODUTO)			
	oSection1:Cell("cTipo"):SetValue((cAliasTop)->TIPO	)
	If lVEIC
		oSection2:Cell("cProduto"):SetValue((cAliasTop)->PRODUTO)			
		oSection2:Cell("cTipo"):SetValue((cAliasTop)->TIPO	)
	Endif
	
	dbSelectArea("SB2")
	dbSeek(xFilial("SB2")+(cAliasTop)->PRODUTO+If(lCusUnif,"",mv_par08))
#ELSE 
	oSection1:Cell("cProduto"):SetValue(SB1->B1_COD)			
	oSection1:Cell("cTipo"):SetValue(SB1->B1_TIPO)
	If lVEIC
		oSection2:Cell("cProduto"):SetValue(SB1->B1_COD)			
		oSection2:Cell("cTipo"):SetValue(SB1->B1_TIPO)
	EndIf
#ENDIF

oSection1:PrintLine()
oSection2:PrintLine()

RestArea(aArea)

RETURN

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MTR900IsMNT³ Autor ³ Lucas                ³ Data ³ 03.10.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se há integração com o modulo SigaMNT/NG          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR900                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTR900IsMNT()
Local aArea
Local aAreaSB1
Local cProdMNT	 := GetMv("MV_PRODMNT")
Local lIntegrMNT := .F.

cProdMNT := cProdMNT + Space(15-Len(cProdMNT))

If !Empty(cProdMNT)
	aArea	 := GetArea()
	aAreaSB1 := SB1->(GetArea())
	SB1->(dbSelectArea( "SB1" ))
	SB1->(dbSetOrder(1))
	If SB1->(dbSeek( xFilial('SB1') + cProdMNT ))
		lIntegrMNT := .T.
	EndIf 
	RestArea(aAreaSB1)
	RestArea(aArea)
EndIf 
Return( lIntegrMNT )
