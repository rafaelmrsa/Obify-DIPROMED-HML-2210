#INCLUDE "FINR150.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "FILEIO.CH"
#INCLUDE "RWMAKE.CH"

#DEFINE QUEBR			 1
#DEFINE FORNEC			 2
#DEFINE TITUL			 3
#DEFINE TIPO			 4
#DEFINE NATUREZA		 5
#DEFINE EMISSAO			 6
#DEFINE VENCTO			 7
#DEFINE VENCREA			 8
#DEFINE VL_ORIG			 9
#DEFINE VL_NOMINAL		10
#DEFINE VL_CORRIG		11
#DEFINE VL_VENCIDO		12
#DEFINE PORTADOR		13
#DEFINE VL_JUROS		14
#DEFINE ATRASO			15
#DEFINE HISTORICO		16
#DEFINE VL_SOMA			17

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FINR150R3³ Autor ³ Wagner Xavier   	     ³ Data ³ 02.10.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Posi‡„o dos Titulos a Pagar										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ FINR150R3(void)														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ 																			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function UFINR150()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Vari veis ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea  := GetArea()
Local E2area := SE2->(GetArea())
Local cDesc1 :=OemToAnsi(STR0001)  //"Imprime a posi‡„o dos titulos a pagar relativo a data base"
Local cDesc2 :=OemToAnsi(STR0002)  //"do sistema."
LOCAL cDesc3 :=""
LOCAL cString:="SE2"
LOCAL nRegEmp := SM0->(RecNo())
Local dOldDtBase := dDataBase
Local dOldData := dDataBase
Local wnrel
Local nTamPar01,nTamPar02,nTamPar03,nTamPar04,nTamPar05,nTamPar06,nTamPar09,nTamPar10,nTamPar11,nTamPar12,nTamPar23,nTamPar24,nTamPar25,nTamPar26,nTamPar30,nTamPar31
Local i          

Local aTotais   := {{},{},{},{},{},{},{},{},{},{}}
Local aPeriodo 	:= {}
Local aFluxo   	:= {}
Local nDias     := 0
Local nMoeda    := 1
Local lRegua    := .T.

PRIVATE cPerg    := Padr("FIN150",Len(SX1->X1_GRUPO))
PRIVATE aReturn := { OemToAnsi(STR0003), 1,OemToAnsi(STR0004), 1, 2, 1, "",1 }  //"Zebrado"###"Administracao"
PRIVATE nomeprog:="UFINR150"
PRIVATE aLinha  := { },nLastKey := 0
PRIVATE nJuros  :=0
PRIVATE tamanho:="G"

PRIVATE titulo  := ""
PRIVATE cabec1
PRIVATE cabec2 
Private cFileWork := "" // JBS 07/05/2010
//-------------------------------------------------------------------------------------------------------------------------------
// JBS 29/04/2010 - Array para Determinar as empresas e filiais a  serem processadas
//-------------------------------------------------------------------------------------------------------------------------------
Private aEmpresa  := {} // Empresa e filial para processar as querys
//-------------------------------------------------------------------------------------------------------------------------------
// JBS 15/04/2010
// Se a empresa e filial corrente forem 04 e 01, força o relatorio de forma individual, para não mostrar valores 
// para pessoas que não possuem a necessidade da informação.
// Para as demais, permite o usuario escolher os 4 diferentes tipos da informação.
//-------------------------------------------------------------------------------------------------------------------------------
If cEmpAnt == '04' .and. cFilAnt == '01'  // JBS 29/04/2010
	Private nConsolida := 2   
Else
	Private nConsolida := Aviso('Atenção','Imprime relatorio consolidando empresas Grupo ?',{'CD´s','Individual','Matriz´s','Todas'})
EndIf

Private cErros 	  := ""
Private adCompras := {}
Private aCompras  := {}
Private nDipTCom  := 0
Private nDIpMCom  := 0

U_DIPPROC(ProcName(0),U_DipUsr()) // JBS 29/04/2010 - Gravando o nome do Programa no SZU

//-------------------------------------------------------------------------------------------------------------------------------
// Determina quais empresas devem ser processadas  - JBS 29/04/2010
//-------------------------------------------------------------------------------------------------------------------------------
/* removendo empresa 040 HQ
do case
case nConsolida == 1 ; aEmpresa := {{'010','01'},{'040','04'}}  // 
case nConsolida == 2 ; aEmpresa := {{SM0->M0_CODIGO+'0',SM0->M0_CODFIL }}
case nConsolida == 3 ; aEmpresa := {{'010','01'},{'040','01'}}  // 
case nConsolida == 4 ; aEmpresa := {{'010','01'},{'040','01'},{'040','04'}}  //
OtherWise
     Return(.F.) 
endcase
*/
do case
case nConsolida == 1 ; aEmpresa := {{'010','01'}}  // 
case nConsolida == 2 ; aEmpresa := {{SM0->M0_CODIGO+'0',SM0->M0_CODFIL }}
case nConsolida == 3 ; aEmpresa := {{'010','01'}}  // 
case nConsolida == 4 ; aEmpresa := {{'010','01'}}  //
OtherWise
     Return(.F.) 
endcase


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao dos cabe‡alhos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
titulo := OemToAnsi(STR0005)  //"Posicao dos Titulos a Pagar"                       50                    70                    90                    110                    130               145          155          165
cabec1 := OemToAnsi(STR0006)  //"Codigo Nome do Fornecedor   PRF-Numero         Tp  Natureza    Data de  Vencto   Vencto  Banco  Valor Original |        Titulos vencidos          | Titulos a vencer | Porta-|  Vlr.juros ou   Dias   Historico     "
cabec2 := OemToAnsi(STR0007)  //"                            Parcela                            Emissao  Titulo    Real                         |  Valor nominal   Valor corrigido |   Valor nominal  | dor   |   permanencia   Atraso               "

//Nao retire esta chamada. Verifique antes !!!
//Ela é necessaria para o correto funcionamento da pergunte 36 (Data Base)
PutDtBase()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
CriaSX1( cPerg )
AjustaSX1(cPerg)

pergunte("FIN150",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros ³
//³ mv_par01	  // do Numero 			  ³
//³ mv_par02	  // at‚ o Numero 		  ³
//³ mv_par03	  // do Prefixo			  ³
//³ mv_par04	  // at‚ o Prefixo		  ³
//³ mv_par05	  // da Natureza  	     ³
//³ mv_par06	  // at‚ a Natureza		  ³
//³ mv_par07	  // do Vencimento		  ³
//³ mv_par08	  // at‚ o Vencimento	  ³
//³ mv_par09	  // do Banco			     ³
//³ mv_par10	  // at‚ o Banco		     ³
//³ mv_par11	  // do Fornecedor		  ³
//³ mv_par12	  // at‚ o Fornecedor	  ³
//³ mv_par13	  // Da Emiss„o			  ³
//³ mv_par14	  // Ate a Emiss„o		  ³
//³ mv_par15	  // qual Moeda			  ³
//³ mv_par16	  // Imprime Provis¢rios  ³
//³ mv_par17	  // Reajuste pelo vencto ³
//³ mv_par18	  // Da data contabil	  ³
//³ mv_par19	  // Ate data contabil	  ³
//³ mv_par20	  // Imprime Rel anal/sint³
//³ mv_par21	  // Considera  Data Base?³
//³ mv_par22	  // Cons filiais abaixo ?³
//³ mv_par23	  // Filial de            ³
//³ mv_par24	  // Filial ate           ³
//³ mv_par25	  // Loja de              ³
//³ mv_par26	  // Loja ate             ³
//³ mv_par27 	  // Considera Adiantam.? ³
//³ mv_par28	  // Imprime Nome 		  ³
//³ mv_par29	  // Outras Moedas 		  ³
//³ mv_par30     // Imprimir os Tipos    ³
//³ mv_par31     // Nao Imprimir Tipos	  ³
//³ mv_par32     // Consid. Fluxo Caixa  ³
//³ mv_par33     // DataBase             ³
//³ mv_par34     // Tipo de Data p/Saldo ³
//³ mv_par35     // Quanto a taxa		  ³
//³ mv_par36     // Tit.Emissao Futura	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DbSelectArea("SE2")

If IsBlind() // Guardando os tamanhos para restaurar apos pegar os valores do webspool
	nTamPar01:=len(mv_par01)
	nTamPar02:=len(mv_par02)
	nTamPar03:=len(mv_par03)
	nTamPar04:=len(mv_par04)
	nTamPar05:=len(mv_par05)
	nTamPar06:=len(mv_par06)
	nTamPar09:=len(mv_par09)
	nTamPar10:=len(mv_par10)
	nTamPar11:=len(mv_par11)
	nTamPar12:=len(mv_par12)
	nTamPar23:=len(mv_par23)
	nTamPar24:=len(mv_par24)
	nTamPar25:=len(mv_par25)
	nTamPar26:=len(mv_par26)
	nTamPar30:=len(mv_par30)
	nTamPar31:=len(mv_par31)
EndIf

wnrel := "FINR150"            //Nome Default do relatorio em Disco
aOrd	:= {OemToAnsi(STR0008),OemToAnsi(STR0009),OemToAnsi(STR0010) ,;  //"Por Numero"###"Por Natureza"###"Por Vencimento"
OemToAnsi(STR0011),OemToAnsi(STR0012),OemToAnsi(STR0013),OemToAnsi(STR0014) }  //"Por Banco"###"Fornecedor"###"Por Emissao"###"Por Cod.Fornec."
wnrel := SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,Tamanho)

If IsBlind() // Acerto dos parametros apos chamada pelo webspool
	mv_par01:=padr(IIf(alltrim(mv_par01)='#','',mv_par01), nTamPar01)
	mv_par02:=padr(IIf(alltrim(mv_par02)='#','',mv_par02), nTamPar02)
	mv_par03:=padr(IIf(alltrim(mv_par03)='#','',mv_par03), nTamPar03)
	mv_par04:=padr(IIf(alltrim(mv_par04)='#','',mv_par04), nTamPar04)
	mv_par05:=padr(IIf(alltrim(mv_par05)='#','',mv_par05), nTamPar05)
	mv_par06:=padr(IIf(alltrim(mv_par06)='#','',mv_par06), nTamPar06)
	mv_par09:=padr(IIf(alltrim(mv_par09)='#','',mv_par09), nTamPar09)
	mv_par10:=padr(IIf(alltrim(mv_par10)='#','',mv_par10), nTamPar10)
	mv_par11:=padr(IIf(alltrim(mv_par11)='#','',mv_par11), nTamPar11)
	mv_par12:=padr(IIf(alltrim(mv_par12)='#','',mv_par12), nTamPar12)
	mv_par22:=IIf(valtype(mv_par22)='C',val(mv_par22),mv_par22)
	mv_par23:=padr(IIf(alltrim(mv_par23)='#','',mv_par23), nTamPar23)
	mv_par24:=padr(IIf(alltrim(mv_par24)='#','',mv_par24), nTamPar24)
	mv_par25:=padr(IIf(alltrim(mv_par25)='#','',mv_par25), nTamPar25)
	mv_par26:=padr(IIf(alltrim(mv_par26)='#','',mv_par26), nTamPar26)
	mv_par30:=padr(IIf(alltrim(mv_par30)='#','',mv_par30), nTamPar30)
	mv_par31:=padr(IIf(alltrim(mv_par31)='#','',mv_par31), nTamPar31)
EndIf

If nLastKey == 27
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	Return
Endif

If (aReturn[8]==2 .Or. aReturn[8]==3 .Or. aReturn[8]==5) .And. mv_par08>dDataBase
	If mv_par39==2
		cFilIni	:= '01'
		cFilFin	:= '04'
		                    
		cMvPar01 := mv_par01        
		cMvPar03 := mv_par03     
		      
		mv_par01 := mv_par08-dDataBase
		mv_par03 := 2       
		        
		Fc020Compra(nil,aTotais,lRegua,nMoeda,aPeriodo,cFilIni,cFilFin,/*cPedidos*/)        
		
		mv_par01 := cMvPar01             
		mv_par03 := cMvPar03
	EndIf
EndIf	

RptStatus({|lEnd| Fa150Imp(@lEnd,wnRel,cString)},Titulo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura empresa / filial original    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//SM0->(dbGoto(nRegEmp))
cFilAnt := SM0->M0_CODFIL
cEmpAnt := SM0->M0_CODIGO
//Acerta a database de acordo com a database real do sistema
If mv_par21 == 1    // Considera Data Base
	dDataBase := dOldDtBase
Endif

RestArea(E2area)
RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA150Imp ³ Autor ³ Wagner Xavier 		  ³ Data ³ 02.10.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Posi‡„o dos Titulos a Pagar										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ FA150Imp(lEnd,wnRel,cString)										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lEnd	  - A‡Æo do Codeblock										  ³±±
±±³			 ³ wnRel   - T¡tulo do relat¢rio 									  ³±±
±±³			 ³ cString - Mensagem										 			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA150Imp(lEnd,wnRel,cString)

LOCAL CbCont
LOCAL CbTxt
LOCAL nOrdem :=0
LOCAL nQualIndice := 0
LOCAL lContinua := .T.
LOCAL nTit0:=0,nTit1:=0,nTit2:=0,nTit3:=0,nTit4:=0,nTit5:=0
LOCAL nTot0:=0,nTot1:=0,nTot2:=0,nTot3:=0,nTot4:=0,nTotTit:=0,nTotJ:=0,nTotJur:=0
LOCAL nFil0:=0,nFil1:=0,nFil2:=0,nFil3:=0,nFil4:=0,nFilTit:=0,nFilJ:=0
LOCAL cCond1,cCond2,cCarAnt,nSaldo:=0,nAtraso:=0
LOCAL dDataReaj
LOCAL dDataAnt := dDataBase , lQuebra
LOCAL nMestit0:= nMesTit1 := nMesTit2 := nMesTit3 := nMesTit4 := nMesTTit := nMesTitj := 0
LOCAL dDtContab
LOCAL cIndexSe2
LOCAL cChaveSe2
LOCAL nIndexSE2
LOCAL cFilDe,cFilAte
Local nTotsRec := SE2->(RecCount())
Local cTamFor, cTamTit := ""
Local aTamFor := TAMSX3("E2_FORNECE")
Local nDecs := Msdecimais(mv_par15)
Local lFr150Flt := EXISTBLOCK("FR150FLT")
Local cFr150Flt
Local aFiliais := {}
Local nI := 0
Local aStru := SE2->(dbStruct())
Local _aCampos := {} 
Local _cDipUsr:= U_DipUsr()
Local cArqExcell:= "\Excell-DBF\"+_cDipUsr+"-UFINR150-CP"   

PRIVATE cDestino:= "C:\EXCELL-DBF\"   
Private cEmpresaOld := "" 
Private nRegSM0   := SM0->(Recno())
Private nAtuSM0   := SM0->(Recno())
PRIVATE dBaixa    := dDataBase
Private aSubTot   := {} // JBS 13/01/2010 - Array para guardar os totais por Fornecedores quando Ordem 5 e Sintetico
Private __cFilial := '' // JBS 04/05/2010
Private __cEmpresa:= '' // JBS 04/05/2010
Private cIndSE2   := '123456789ABCDEF' // JBS 06/05/2010
Private cIndSE5   := '123456789ABCDEF' // JBS 04/05/2010
Private __nIndice := 0  // JBS 04/05/2010  

_aCampos := {}
_aTamSX3 := TamSX3("E2_FORNECE")                          
AAdd(_aCampos ,{"CODIGO", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_LOJA")                          
AAdd(_aCampos ,{"LOJA", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_NOMFOR")                          
AAdd(_aCampos ,{"FORNECEDOR", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_PREFIXO")
AAdd(_aCampos ,{"PREFIXO", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_NUM")
AAdd(_aCampos ,{"NUM_PARCEL", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_PARCELA")
AAdd(_aCampos ,{"PARCELA", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_TIPO")
AAdd(_aCampos ,{"TIPO_P", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_NATUREZ")
AAdd(_aCampos ,{"NATUREZ", "C",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_EMISSAO")
AAdd(_aCampos ,{"D_EMISSAO", "D",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_VENCTO")
AAdd(_aCampos ,{"VENCIMENTO", "D",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_VENCREA")
AAdd(_aCampos ,{"VENC_REAL", "D",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_VALOR")
AAdd(_aCampos ,{"VL_ORIGINA", "N",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_VALOR")
AAdd(_aCampos ,{"VLR_NOMIN", "N",_aTamSX3[1],_aTamSX3[2]})
_aTamSX3 := TamSX3("E2_VALOR")
AAdd(_aCampos ,{"VLR_CORRIG", "N",_aTamSX3[1],_aTamSX3[2]}) 
_aTamSX3 := TamSX3("E2_VALOR")
AAdd(_aCampos ,{"V_NOMIN_AV", "N",_aTamSX3[1],_aTamSX3[2]}) 
_aTamSX3 := TamSX3("E2_PORTADO")
AAdd(_aCampos ,{"PORTADOR_", "C",_aTamSX3[1],_aTamSX3[2]}) 
_aTamSX3 := TamSX3("E2_JUROS")
AAdd(_aCampos ,{"V_JRS_PERM", "N",_aTamSX3[1],_aTamSX3[2]}) 
AAdd(_aCampos ,{"DIA_ATRASO","N",6,0})                      
_aTamSX3 := TamSX3("E2_HIST")
AAdd(_aCampos ,{"HS_VCD_VEC", "C",_aTamSX3[1],_aTamSX3[2]}) 
 
_cArqTrb := CriaTrab(_aCampos,.T.)
DbUseArea(.T.,,_cArqTrb,"TRB1",.F.,.F.)
            
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para Filtrar 										  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ Localiza‡”es ArgentinaÄÙ
If lFr150Flt
	cFr150Flt := EXECBLOCK("Fr150FLT",.f.,.f.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para Impress„o do Cabe‡alho e Rodap‚ ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cbtxt  := OemToAnsi(STR0015)  //"* indica titulo provisorio, P indica Saldo Parcial"
cbcont := 0
li 	 := 80
m_pag  := 1

nOrdem := aReturn[8]
cMoeda := LTrim(Str(mv_par15))
Titulo += OemToAnsi(STR0035)+GetMv("MV_MOEDA"+cMoeda)  //" em "

dbSelectArea ( "SE2" )
Set Softseek On

If mv_par22 == 2
	cFilDe  := cFilAnt
	cFilAte := cFilAnt
Else
	cFilDe := mv_par23
	cFilAte:= mv_par24
EndIf

//Acerta a database de acordo com o parametro
If mv_par21 == 1    // Considera Data Base
	dDataBase := mv_par33
EndIf

// Cria vetor com os codigos das filiais da empresa corrente
aFiliais := FinRetFil()

//DbSelectArea("SM0")
//DbSeek(cEmpAnt+cFilDe,.T.)

nRegSM0 := SM0->(Recno())
nAtuSM0 := SM0->(Recno())
	                                           '
//------------------------------------------------------------------------------------------------------
// Este for, monta uma query, de acordo com a configuração da array aEmpresas. Este query irá contar
// Quantos registros satisfazem as condições basicas da query principal do relatorio. 
// Titulos no financeiro  - JBS 30/04/2010
//------------------------------------------------------------------------------------------------------

cUniao := ""
cQuery := ""

For nEmp := 1 to len(aEmpresa)
	
	If Select('SX2_2') > 0
		SX2_2->( DbCloseArea() )
	EndIf
	
	cQuery += cUniao 
	
	If !Empty(mv_par07) 
		cQuery += "  Select Count( R_E_C_N_O_ ) TOTREC "
		cQuery += "    From SE2" + aEmpresa[nEmp][01] + " SE2 "
		cQuery += "   Where E2_FILIAL = '" + fFilial(aEmpresa[nEmp][01],'SE2',aEmpresa[nEmp][02]) + "' "
		cQuery += "     and E2_VENCREA >= '" + DtoS(mv_par07) + "' "
		cQuery += "     and E2_VENCREA <= '" + DtoS(mv_par08) + "'  "
		cQuery += "     and SE2.D_E_L_E_T_ = ' '"
	Else
		cQuery += "  Select Count( R_E_C_N_O_ ) TOTREC "
		cQuery += "    From SE2" + aEmpresa[nEmp][01] + " SE2 "
		cQuery += "   Where E2_FILIAL = '" + fFilial(aEmpresa[nEmp][01],'SE2',aEmpresa[nEmp][02]) + "' "
		cQuery += "     and E2_EMISSAO >= '" + DtoS(mv_par13) + "' "
		cQuery += "     and E2_EMISSAO <= '" + DtoS(mv_par14) + "' "
		cQuery += "     and SE2.D_E_L_E_T_ = ' '"
	EndIf
	cUniao  := "  Union  "
Next nEmp

TcQuery cQuery NEW ALIAS "TRB"  
nTotsRec := 0
memowrite('uFinR150a.SQL',cQuery)

Do While TRB->( !EOF() )
	nTotsRec += TRB->TOTREC
	TRB->(	DbSkip() )
EndDo

TRB->(	DbCloseArea() )

DbSelectArea("SE2")

IF nOrdem == 1
	SE2->(DbSetOrder(1))
	cChaveSe2 := SE2->(IndexKey())
	cOrder := SqlOrder(indexkey())
	cCond1 := "E2_PREFIXO <= mv_par04 .and. __cFilial == SE2->E2_FILIAL" // JBS 04/05/2010
	cCond2 := "E2_PREFIXO" // JBS 04/05/2010
	titulo += OemToAnsi(STR0016)  //" - Por Numero"
	nQualIndice := 1
Elseif nOrdem == 2
	SE2->(DbSetOrder(2))
	cChaveSe2 := SE2->(IndexKey())
	cOrder := SqlOrder(indexkey())
	cCond1 := "E2_NATUREZ <= mv_par06 .and. __cFilial == SE2->E2_FILIAL" // JBS 04/05/2010
	cCond2 := "E2_NATUREZ" // JBS 04/05/2010
	titulo += OemToAnsi(STR0017)  //" - Por Natureza" // JBS 04/05/2010
	nQualIndice := 2
Elseif nOrdem == 3
	SE2->(DbSetOrder(3))
	cChaveSe2 := ""
	cOrder := "E2_FILIAL ASC,E2_VENCREA ASC,E2_VALOR DESC"
	cCond1 := "E2_VENCREA <= mv_par08 .and. __cFilial == SE2->E2_FILIAL" // JBS 04/05/2010
	cCond2 := "E2_VENCREA" // JBS 04/05/2010
	titulo += OemToAnsi(STR0018)  //" - Por Vencimento"
	nQualIndice := 3
Elseif nOrdem == 4
	SE2->(DbSetOrder(4))
	cChaveSe2 := SE2->(IndexKey())
	cOrder := SqlOrder(indexkey())
	cCond1 := "E2_PORTADO <= mv_par10 .and. __cFilial == SE2->E2_FILIAL" // JBS 04/05/2010
	cCond2 := "E2_PORTADO" // JBS 04/05/2010
	titulo += OemToAnsi(STR0031)  //" - Por Banco"
	nQualIndice := 4
Elseif nOrdem == 6
	SE2->(DbSetOrder(5))
	cChaveSe2 := SE2->(IndexKey())
	cOrder := SqlOrder(indexkey())
	cCond1 := "E2_EMISSAO <= mv_par14 .and. __cFilial == SE2->E2_FILIAL" // JBS 04/05/2010"
	cCond2 := "E2_EMISSAO" // JBS 04/05/2010
	titulo += OemToAnsi(STR0019)  //" - Por Emissao"
	nQualIndice := 5
Elseif nOrdem == 7
	SE2->(DbSetOrder(6))
	cChaveSe2 := SE2->(IndexKey())
	cOrder := SqlOrder(indexkey())
	cCond1 := "E2_FORNECE <= mv_par12 .and. __cFilial == SE2->E2_FILIAL" // JBS 04/05/2010
	cCond2 := "E2_FORNECE" // JBS 04/05/2010
	titulo += OemToAnsi(STR0020)  //" - Por Cod.Fornecedor"
	nQualIndice := 6 
Else
	// JBS 04/05/2010 cChaveSe2 := "E2_FILIAL+E2_NOMFOR+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO"
	cChaveSe2 := "E2_NOMFOR+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO" // JBS 04/05/2010 - Tirou a Filial
	cOrder := SqlOrder(cChaveSe2)
	cCond1 := "E2_FORNECE <= mv_par12"
	cCond2 := "E2_FORNECE+E2_LOJA"
	titulo += OemToAnsi(STR0022)  //" - Por Fornecedor"
	nQualIndice := IndexOrd()
EndIF
//----------------------------------------------------------------------------------------
// Cria a tabela temporaria para trabalhar o SE2 - JBS 07/05/2010
//----------------------------------------------------------------------------------------
fCriaSE2TEMP(SE2->(dbStruct()),cChaveSe2,'CRIAR') 
//----------------------------------------------------------------------------------------
If mv_par20 == 1
	titulo += OemToAnsi(STR0023)  //" - Analitico"
Else
	titulo += OemToAnsi(STR0024)  // " - Sintetico"
	If nOrdem == 5 // JBS 18/01/2010
		cabec1 := Padr('Dt.Emissao de ' + dToc(MV_PAR13) + ' Até ' + dToc(MV_PAR14),39) + SubStr(OemToAnsi(STR0033),40) // JBS 18/01/2010  // "                                                                                          |        Titulos vencidos         |    Titulos a vencer     |           Valor dos juros ou                       (Vencidos+Vencer)"
		cabec2 := Padr('Vencimento de ' + dToc(MV_PAR07) + ' Até ' + dToc(MV_PAR08),39) + SubStr(OemToAnsi(STR0034),40)  // JBS 18/01/2010  // "                                                                                          | Valor nominal   Valor corrigido |      Valor nominal      |            com. permanencia                                         "
	Else // JBS 18/01/2010
		cabec1 := OemToAnsi(STR0033)  // "                                                                                          |        Titulos vencidos         |    Titulos a vencer     |           Valor dos juros ou                       (Vencidos+Vencer)"
		cabec2 := OemToAnsi(STR0034)  // "                                                                                          | Valor nominal   Valor corrigido |      Valor nominal      |            com. permanencia                                         "
	EndIf // JBS 18/01/2010
EndIf

DbSelectArea("SE2")
cFilterUser:=aReturn[7]

Set Softseek Off

//-------------------------------------------------------------------------------------------
// JBS 30/04/2010 - Este for, monta uma query, de acordo com a configuração da array aEmpresa. 
// Titulos no financeiro  - JBS 30/04/2010
// Esta query trará as informações fianceiras lidas das empreas e filiais informadas dentro da
// da array aEmpresa.
//-------------------------------------------------------------------------------------------
cUniao := ""
cQuery := ""
                     
For nEmp := 1 to len(aEmpresa)
	
	If Select('SX2_2') > 0
		SX2_2->( DbCloseArea() )
	EndIf
	
	cQuery += cUniao
	
	cQuery := " Select  E2_FILIAL, "  
	cQuery += "         '" + aEmpresa[nEmp][01] + "' E2_EMPRESA,  "
	cQuery += "         E2_PREFIXO,  " 
	cQuery += "         E2_NUM,  "    
	cQuery += "         E2_PARCELA,  " 
	cQuery += "         E2_TIPO,  " 
	cQuery += "         E2_NATUREZ,  " 
	cQuery += "         E2_PORTADO,  " 
	cQuery += "         E2_FORNECE,  " 
	cQuery += "         E2_LOJA,  " 
	cQuery += "         E2_NOMFOR,  "            
	cQuery += "         E2_EMISSAO,  "
	cQuery += "         E2_VENCTO,  "
	cQuery += "         E2_VENCREA,  " 
	cQuery += "         E2_VALOR,  "                                              
	cQuery += "         E2_ISS,  "                                                
	cQuery += "         E2_IRRF,  "                                               
	cQuery += "         E2_NUMBCO,  "       
	cQuery += "         E2_INDICE,  " 
	cQuery += "         E2_BAIXA,  " 
	cQuery += "         E2_BCOPAG,  " 
	cQuery += "         E2_EMIS1,  " 
	cQuery += "         E2_HIST,  "                                                      
	cQuery += "         E2_LA,  " 
	cQuery += "         E2_LOTE,  " 
	cQuery += "         E2_MOTIVO,  "            
	cQuery += "         E2_MOVIMEN,  " 
	cQuery += "         E2_OP,  "         
	cQuery += "         E2_SALDO,  "                                              
	cQuery += "         E2_OK,  " 
	cQuery += "         E2_DESCONT,  "                                            
	cQuery += "         E2_MULTA,  "                                             
	cQuery += "         E2_JUROS,  "                                              
	cQuery += "         E2_CORREC,  "                                             
	cQuery += "         E2_VALLIQ,  "                                             
	cQuery += "         E2_VENCORI,  " 
	cQuery += "         E2_VALJUR,  "                                             
	cQuery += "         E2_PORCJUR, "                                           
	cQuery += "         E2_MOEDA,  "                                              
	cQuery += "         E2_NUMBOR,  " 
	cQuery += "         E2_FATPREF,  " 
	cQuery += "         E2_FATURA,  " 
	cQuery += "         E2_PROJETO,  " 
	cQuery += "         E2_CLASCON,  " 
	cQuery += "         E2_RATEIO,  " 
	cQuery += "         E2_DTVARIA,  " 
	cQuery += "         E2_VARURV,  "                                             
	cQuery += "         E2_VLCRUZ,  "
	cQuery += "         E2_DTFATUR,  " 
	cQuery += "         E2_ACRESC,  "                                             
	cQuery += "         E2_TITORIG,  "                                         
	cQuery += "         E2_IMPCHEQ,  "
	cQuery += "         E2_PARCIR,  "
	cQuery += "         E2_ARQRAT,  "            
	cQuery += "         E2_OCORREN,  " 
	cQuery += "         E2_ORIGEM,  " 
	cQuery += "         E2_IDENTEE,  " 
	cQuery += "         E2_FLUXO,  " 
	cQuery += "         E2_PARCISS,  " 
	cQuery += "         E2_ORDPAGO,  "
	cQuery += "         E2_DESDOBR,  " 
	cQuery += "         E2_INSS,  "
	cQuery += "         E2_PARCINS,  " 
	//cQuery += "         E2_FILIAL,  " 
	cQuery += "         E2_DATALIB,  " 
	cQuery += "         E2_APROVA,  "
	cQuery += "         E2_TIPOFAT,  "
	cQuery += "         E2_FLAGFAT,  "
	cQuery += "         E2_ANOBASE,  "
	cQuery += "         E2_MESBASE,  "
	cQuery += "         E2_SDACRES,  "
	cQuery += "         E2_DECRESC,  "                                           
	cQuery += "         E2_SDDECRE,  "                                            
	cQuery += "         E2_USUALIB,  "               
	cQuery += "         E2_MULTNAT,  "
	cQuery += "         E2_NUMTIT,  "                                       
	cQuery += "         E2_PROJPMS,  "
	cQuery += "         E2_PLLOTE,  " 
	cQuery += "         E2_CODRET,  "
	cQuery += "         E2_DIRF,  "
	cQuery += "         E2_LD,  "                                       
	cQuery += "         E2_CODBAR,  "                                   
	cQuery += "         E2_TITIPIS,  "               
	cQuery += "         E2_USUARIO,  "    
	cQuery += "         E2_TXMOEDA,  "                                         
	cQuery += "         E2_MODSPB,  "
	cQuery += "         E2_IDCNAB,  "
	cQuery += "         E2_PARCCSS,  "
	cQuery += "         E2_RETENC,  "                                          
	cQuery += "         E2_CONTAD,  "        
	cQuery += "         E2_CODORCA,  "
	cQuery += "         E2_SEST,  "                                          
	cQuery += "         E2_FILDEB,  "
	cQuery += "         E2_PARCSES,  "
	cQuery += "         E2_FORNISS,  "
	cQuery += "         E2_LOJAISS,  "
	cQuery += "         E2_FILORIG,  " 
	cQuery += "         E2_DEBITO,  "         
	cQuery += "         E2_CCD,  "
	cQuery += "         E2_CLVLDB,  "
	cQuery += "         E2_ITEMD,  "
	cQuery += "         E2_CREDIT,  "          
	cQuery += "         E2_CCC,  "
	cQuery += "         E2_ITEMC,  "
	cQuery += "         E2_CLVLCR,  "
	cQuery += "         E2_COFINS,  "                                           
	cQuery += "         E2_PIS,  "                                          
	cQuery += "         E2_PARCCOF,  "
	cQuery += "         E2_PARCPIS,  "
	cQuery += "         E2_PARCSLL,  "
	cQuery += "         E2_CSLL,  "                                          
	cQuery += "         E2_TITPIS,  "                                      
	cQuery += "         E2_TITCOF,  "                                     
	cQuery += "         E2_TITCSL,  "                                    
	cQuery += "         E2_TITINS,  "                                   
	cQuery += "         E2_VRETPIS,  "                                     
	cQuery += "         E2_VRETCOF,  "                                    
	cQuery += "         E2_VRETCSL,  "                                   
	cQuery += "         E2_PRETPIS,  "
	cQuery += "         E2_PRETCOF,  "
	cQuery += "         E2_SEQBX,  "
	cQuery += "         E2_PRETCSL,  " 
	cQuery += "         E2_BASECOF,  "                                           
	cQuery += "         E2_BASEPIS,  "                                          
	cQuery += "         E2_BASECSL,  "                                         
	cQuery += "         E2_USERLGI,  "    
	cQuery += "         E2_USERLGA,  "   
	cQuery += "         E2_VRETISS,  "                                      
	cQuery += "         E2_VENCISS,  "
	cQuery += "         E2_VBASISS,  "                                          
	cQuery += "         E2_MDRTISS,  "
	cQuery += "         E2_VARIAC,  "                                          
	cQuery += "         E2_PERIOD,  "
	cQuery += "         E2_MDCONTR,  "     
	cQuery += "         E2_MDREVIS,  "
	cQuery += "         E2_MDPLANI,  "
	cQuery += "         E2_MDCRON,  "
	cQuery += "         E2_MDPARCE,  "
	cQuery += "         E2_FRETISS,  "
	cQuery += "         E2_TXMDCOR,  "                                          
	cQuery += "         E2_APLVLMN,  "
	cQuery += "         E2_CLEARIN,  "
	cQuery += "         E2_HORASPB,  "
	cQuery += "         E2_PRETIRF,  "
	cQuery += "         E2_SEFIP,  "
	cQuery += "         E2_TRETISS,  " 
	cQuery += "         E2_VRETIRF,  "                                           
	cQuery += "         E2_PLOPELT,  "
	cQuery += "         E2_CODRDA,  "
	cQuery += "         E2_PARCFET,  " 
	cQuery += "         E2_FETHAB,  "                                           
	cQuery += "         E2_FORORI,  "
	cQuery += "         E2_LOJORI,  "
	cQuery += "         E2_CONDPAG,  "
	cQuery += "         E2_FATFOR,  "
	cQuery += "         E2_FATLOJ,  "
	cQuery += "         E2_NUMLIQ,  "
	cQuery += "         E2_BCOCHQ,  "
	cQuery += "         E2_AGECHQ,  "
	cQuery += "         E2_CTACHQ,  "
	cQuery += "         E2_STATUS,  "
	cQuery += "         E2_DTDIRF,  "
	cQuery += "         E2_TITADT,  "
	cQuery += "         E2_TITPAI,  "                                        
	cQuery += "         E2_INSSRET,  "                                            
	cQuery += "         E2_CODAGL,  "
	cQuery += "         E2_CIDE,  "                                           
	cQuery += "         E2_DIACTB,  "
	cQuery += "         E2_NODIA,  "
	cQuery += "         E2_RETCNTR,  "                                          
	cQuery += "         E2_MDDESC,  "                                         
	cQuery += "         E2_MDBONI,  "                                        
	cQuery += "         E2_MDMULT,  "                                       
	cQuery += "         E2_PARCAGL,  "
	cQuery += "         E2_CODINS,  "
	cQuery += "         E2_PARCCID,  "
	cQuery += "         E2_CODRCOF,  "
	cQuery += "         E2_TIPOLIQ,  "
	cQuery += "         E2_CODRCSL,  "
	cQuery += "         E2_CODRPIS,  "
	cQuery += "         E2_DTBORDE,  "
	cQuery += "         E2_BASEIRF,  "                                          
	cQuery += "         E2_PROCPCC,  "
	cQuery += "         E2_FORNPAI,  "                                       
	cQuery += "         E2_VRETINS,  "                                         
	cQuery += "         E2_PRETINS,  " 
	cQuery += "         E2_IDDARF  "       
	cQuery += "    From SE2" + aEmpresa[nEmp][01] + " SE2 "
	cQuery += "   Where E2_FILIAL = '" + fFilial(aEmpresa[nEmp][01],'SE2',aEmpresa[nEmp][02]) + "' "
	cQuery += "     and SE2.D_E_L_E_T_ = ' ' "
	cQuery += "     and E2_NUM     BETWEEN '"+ mv_par01+ "' AND '"+ mv_par02 + "'"
	cQuery += "     and E2_PREFIXO BETWEEN '"+ mv_par03+ "' AND '"+ mv_par04 + "'"
	cQuery += "     and (E2_MULTNAT = '1' OR (E2_NATUREZ BETWEEN '"+MV_PAR05+"' AND '"+MV_PAR06+"'))"
	cQuery += "     and E2_VENCREA BETWEEN '"+ DTOS(mv_par07)+ "' AND '"+ DTOS(mv_par08) + "'"
	cQuery += "     and E2_PORTADO BETWEEN '"+ mv_par09+ "' AND '"+ mv_par10 + "'"
	cQuery += "     and E2_FORNECE BETWEEN '"+ mv_par11+ "' AND '"+ mv_par12 + "'"
	cQuery += "     and E2_EMISSAO BETWEEN '"+ DTOS(mv_par13)+ "' AND '"+ DTOS(mv_par14) + "'"
	cQuery += "     and E2_LOJA    BETWEEN '"+ mv_par25 + "' AND '"+ mv_par26 + "'"
	//Considerar titulos cuja emissao seja maior que a database do sistema
	If mv_par36 == 2
		cQuery += "     and E2_EMISSAO <= '" + DTOS(dDataBase) +"'"
	Endif
	If !Empty(mv_par30) // Deseja imprimir apenas os tipos do parametro 30
		cQuery += "     and E2_TIPO IN "+FormatIn(mv_par30,";")
	ElseIf !Empty(Mv_par31) // Deseja excluir os tipos do parametro 31
		cQuery += "     and E2_TIPO NOT IN "+FormatIn(mv_par31,";")
	EndIf
	If mv_par32 == 1
		cQuery += "     and E2_FLUXO <> 'N'"
	Endif
	
	//cUniao  := "  Union  "

    //-------------------------------------------------------------------------------------------
    // Tratamento para retirar a filial quando o relatorio por Fornecedor, Sintético.
    //-------------------------------------------------------------------------------------------
    
    If nOrdem == 5 // JBS 05/05/2010 - Retirado a condição if MV_PAR20 <> 1 .and. nOrdem == 5
        cQuery += "   Order by " + SubStr(cOrder,11) 
    Else
        cQuery += "   Order by " + cOrder    
    EndIf
    
    If Select("TRB") > 0
	   TRB->( DbCloseArea() )
    EndIf

    TcQuery cQuery NEW ALIAS "TRB"
    memowrite('uFinR150b.SQL',cQuery)

    For ni := 1 to Len(aStru)
	    If aStru[ni,2] != 'C'
		    TCSetField('TRB', aStru[ni,1], aStru[ni,2],aStru[ni,3],aStru[ni,4])
	    Endif
    Next

    Processa({|| fGravaSE2(nTotsRec)})

	
Next nEmp    
	
SetRegua(nTotsRec)

SE2->( DbGoTop() ) 
nId := 0 
cEmpresaOld := "" 

Do While SE2->( !EOF() )
    //-------------------------------------------------------------------------------------------
    // Tratamento para quando este relatrio, for rodado para fornecedor, de forma sintética.
    //-------------------------------------------------------------------------------------------
    /*
    If nOrdem == 5 // JBS 05/05/2010 - Retirado a condição if MV_PAR20 <> 1 .and. nOrdem == 5
        do case
        case SE2->E2_FILIAl = '  '  // O SE2 na empresa 010, é compartilhado entre filiais.
             nId := 1
        case SE2->E2_FILIAL = '01' 
              
             If Len(aEmpresa)> 1 
                 nId := 2      
             Else    
                 nId := 1  
             EndIf        
        case SE2->E2_FILIAL = '04' // O Se2 na empresa 040, é exclusivo por filiais.     
              
             If Len(aEmpresa)= 2 
                 nId := 2
             ElseIf Len(aEmpresa) > 2
                 nId := 3
             Else 
                 nId := 1
             EndIf
  	    endcase
    Else 
        nId++
    EndIf
    */                                                     
    
    //------------------------------------------------------------------------------------------------------
    // Tratamento para controlar as informações lidas de cada empresa - JBS 05/05/2010
    //------------------------------------------------------------------------------------------------------
    nId := fPosFilial(@aFiliais)

   	If MV_MULNATP .And. nOrdem == 2
	    Finr155R3(cFr150Flt, lEnd, @nTot0, @nTot1, @nTot2, @nTot3, @nTotTit, @nTotJ )
	    Loop                                                                                                                       '
	EndIf

	Do While &cCond1 .and. !Eof() .and. lContinua // JBS 04/05/2010 - .and. E2_FILIAL == xFilial("SE2")
		
		IF lEnd
			@PROW()+1,001 PSAY OemToAnsi(STR0025)  //"CANCELADO PELO OPERADOR"
			Exit
		EndIf
		
		IncRegua()
		
		dbSelectArea("SE2")
		
		Store 0 To nTit1,nTit2,nTit3,nTit4,nTit5
	    //------------------------------------------------------------------------------------------------------
        // Tratamento para controlar as informações lidas de cada empresa - JBS 05/05/2010
        //------------------------------------------------------------------------------------------------------
        nId := fPosFilial(@aFiliais)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega data do registro para permitir ³
		//³ posterior analise de quebra por mes.	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ             
		dDataAnt := Iif(nOrdem == 3, SE2->E2_VENCREA, SE2->E2_EMISSAO)
		
		cCarAnt := &cCond2
		
		Do While &cCond2 == cCarAnt .and. !Eof() .and. lContinua // JBS 04/05/2010  - .and. E2_FILIAL == xFilial("SE2")
			        

			IF lEnd
				@PROW()+1,001 PSAY OemToAnsi(STR0025)  //"CANCELADO PELO OPERADOR"
				Exit
			End
			
			IncRegua()
	        //------------------------------------------------------------------------------------------------------
            // Tratamento para controlar as informações lidas de cada empresa - JBS 05/05/2010
            //------------------------------------------------------------------------------------------------------
            nId := fPosFilial(@aFiliais)                                      
            
            If nOrdem <> 5 .and. __cFilial <> SE2->E2_FILIAL
				dbSkip()
				Loop
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Considera filtro do usuario                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(cFilterUser).and.!(&cFilterUser)
				dbSkip()
				Loop
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Considera filtro do usuario no ponto de entrada.             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFr150flt
				If &cFr150flt
					DbSkip()
					Loop
				Endif
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se trata-se de abatimento ou provisorio, ou ³
			//³ Somente titulos emitidos ate a data base				   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF SE2->E2_TIPO $ MVABATIM .Or. (SE2 -> E2_EMISSAO > dDataBase .and. mv_par36 == 2)
				dbSkip()
				Loop
			EndIF
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se ser  impresso titulos provis¢rios		   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF E2_TIPO $ MVPROVIS .and. mv_par16 == 2
				dbSkip()
				Loop
			EndIF
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se ser  impresso titulos de Adiantamento	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG .and. mv_par27 == 2
				dbSkip()
				Loop
			EndIF
			
			// dDtContab para casos em que o campo E2_EMIS1 esteja vazio
			// compatibilizando com a vers„o 2.04 que n„o gerava para titulos
			// de ISS e FunRural
			
			dDtContab := Iif(Empty(SE2->E2_EMIS1),SE2->E2_EMISSAO,SE2->E2_EMIS1)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se esta dentro dos parametros ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF E2_NUM < mv_par01      .OR. E2_NUM > mv_par02 .OR. ;
				E2_PREFIXO < mv_par03  .OR. E2_PREFIXO > mv_par04 .OR. ;
				E2_NATUREZ < mv_par05  .OR. E2_NATUREZ > mv_par06 .OR. ;
				E2_VENCREA < mv_par07  .OR. E2_VENCREA > mv_par08 .OR. ;
				E2_PORTADO < mv_par09  .OR. E2_PORTADO > mv_par10 .OR. ;
				E2_FORNECE < mv_par11  .OR. E2_FORNECE > mv_par12 .OR. ;
				E2_EMISSAO < mv_par13  .OR. E2_EMISSAO > mv_par14 .OR. ;
				(E2_EMISSAO > dDataBase .and. mv_par36 == 2) .OR. dDtContab  < mv_par18 .OR. ;
				E2_LOJA    < mv_par25  .OR. E2_LOJA    > mv_par26 .OR. ;
				dDtContab  > mv_par19  .Or. !&(fr150IndR())
				
				dbSkip()
				Loop
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se esta dentro do parametro compor pela data de digitação ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF mv_par34 == 2 .And. !Empty(E2_EMIS1) .And. !Empty(mv_par33)
				If E2_EMIS1 > mv_par33
					dbSkip()
					Loop
				Endif
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se titulo, apesar do E2_SALDO = 0, deve aparecer ou ³
			//³ nÆo no relat¢rio quando se considera database (mv_par21 = 1) ³
			//³ ou caso nÆo se considere a database, se o titulo foi totalmen³
			//³ te baixado.																  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SE2")
			IF !Empty(SE2->E2_BAIXA) .and. Iif(mv_par21 == 2 ,SE2->E2_SALDO == 0 ,;
				IIF(mv_par34 == 1,(SE2->E2_SALDO == 0 .and. SE2->E2_BAIXA <= dDataBase),.F.))
				dbSkip()
				Loop
			EndIF
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se deve imprimir outras moedas³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If mv_par29 == 2 // nao imprime
				if SE2->E2_MOEDA != mv_par15 //verifica moeda do campo=moeda parametro
					dbSkip()
					Loop
				endif
			Endif
			
			dbSelectArea("SA2")
			MSSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA)
			dbSelectArea("SE2")
			
			// Verifica se existe a taxa na data do vencimento do titulo, se nao existir, utiliza a taxa da database
			If SE2->E2_VENCREA < dDataBase
				If mv_par17 == 2 .And. RecMoeda(SE2->E2_VENCREA,cMoeda) > 0
					dDataReaj := SE2->E2_VENCREA
				Else
					dDataReaj := dDataBase
				EndIf
			Else
				dDataReaj := dDataBase
			EndIf
			
			If mv_par21 == 1
				nSaldo := SaldoTit(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE,mv_par15,dDataReaj,,SE2->E2_LOJA,SE2->E2_FILIAL,If(mv_par35==1,SE2->E2_TXMOEDA,Nil),IIF(mv_par34 == 2,3,1)) // 1 = DT BAIXA    3 = DT DIGIT
				//Verifica se existem compensações em outras filiais para descontar do saldo, pois a SaldoTit() somente
				//verifica as movimentações da filial corrente. Nao deve processar quando existe somente uma filial.
				If !Empty(SE2->E2_FILIAL) .And. !Empty(__cFilial) .And. Len(aEmpresa) > 1 // JBS 04/04/2010 - Valida Filial lida da TRB (SE2) e testa qrtde de filiais através de aEmpresa.
					nSaldo -= Round(NoRound(xMoeda(FRVlCompFil("P",SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA,IIF(mv_par34 == 2,3,1),aFiliais),SE2->E2_MOEDA,mv_par15,dDataReaj,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil)),nDecs+1),nDecs)
				EndIf
				// Subtrai decrescimo para recompor o saldo na data escolhida.
				If Str(SE2->E2_VALOR,17,2) == Str(nSaldo,17,2) .And. SE2->E2_DECRESC > 0 .And. SE2->E2_SDDECRE == 0
					nSAldo -= SE2->E2_DECRESC
				Endif mcanuto
				// Soma Acrescimo para recompor o saldo na data escolhida.
				If Str(SE2->E2_VALOR,17,2) == Str(nSaldo,17,2) .And. SE2->E2_ACRESC > 0 .And. SE2->E2_SDACRES == 0
					nSAldo += SE2->E2_ACRESC
				Endif
			Else
				nSaldo := xMoeda((SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE),SE2->E2_MOEDA,mv_par15,dDataReaj,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
			Endif
			If ! (SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG) .And. ;
				! ( MV_PAR21 == 2 .And. nSaldo == 0 ) // nao deve olhar abatimento pois e zerado o saldo na liquidacao final do titulo
				
				//Quando considerar Titulos com emissao futura, eh necessario
				//colocar-se a database para o futuro de forma que a Somaabat()
				//considere os titulos de abatimento
				If mv_par36 == 1
					dOldData := dDataBase
					dDataBase := CTOD("31/12/40")
				Endif
				
				nSaldo-=SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",mv_par15,dDataReaj,SE2->E2_FORNECE,SE2->E2_LOJA)
				
				If mv_par36 == 1
					dDataBase := dOldData
				Endif
			EndIf
			
			nSaldo:=Round(NoRound(nSaldo,3),2)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Desconsidera caso saldo seja menor ou igual a zero   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nSaldo <= 0
				dbSkip()
				Loop
			Endif
			
			IF li > 58
//				nAtuSM0 := SM0->(Recno())
//				SM0->(dbGoto(nRegSM0))
				cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
//				SM0->(dbGoTo(nAtuSM0))
			EndIF
			
			If mv_par20 == 1
				If !(Alltrim(cPaisLoc) $ "MEX|POR")
					@li,	0 PSAY SE2->E2_FORNECE+"-"+SE2->E2_LOJA+"-"+IIF(mv_par28 == 1, SubStr(SA2->A2_NREDUZ,1,15), SubStr(SA2->A2_NOME,1,15))
					li := IIf (aTamFor[1] > 6,li+1,li)
					@li, 26 PSAY SE2->E2_PREFIXO+"-"+SE2->E2_NUM+"-"+SE2->E2_PARCELA
				Else
					If Len(SE2->E2_FORNECE) > 6
						@li, 00 PSAY SubStr(SE2->E2_FORNECE+"-"+SE2->E2_LOJA,01,25)
						cTamFor  :=  SubStr(IIF(mv_par28 == 1, SA2->A2_NREDUZ, SA2->A2_NOME),01,25)
					Else
						@li, 00 PSAY SubStr(SE2->E2_FORNECE+"-"+SE2->E2_LOJA+"-"+IIF(mv_par28 == 1, SubStr(SA2->A2_NREDUZ,1,15), SubStr(SA2->A2_NOME,1,15)),01,25)
						cTamFor  :=  SubStr(SE2->E2_FORNECE+"-"+SE2->E2_LOJA+"-"+IIF(mv_par28 == 1, SubStr(SA2->A2_NREDUZ,1,15), SubStr(SA2->A2_NOME,1,15)),26,50)
					EndIf
					
					@li, 26 PSAY SubStr(SE2->E2_PREFIXO+"-"+SE2->E2_NUM+"-"+SE2->E2_PARCELA,01,20)
					cTamTit  :=  SubStr(SE2->E2_PREFIXO+"-"+SE2->E2_NUM+"-"+SE2->E2_PARCELA,21,40)
				Endif
				@li, 47 PSAY SE2->E2_TIPO
				@li, 51 PSAY SE2->E2_NATUREZ
				@li, 62 PSAY SE2->E2_EMISSAO
				@Li, 73 PSAY SE2->E2_VENCTO
				@li, 84 PSAY SE2->E2_VENCREA
				@li, 96 PSAY xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil)) * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1) Picture PesqPict("SE2","E2_VALOR",14,MV_PAR15)
			
			
				DbSelectArea("TRB1")
				RecLock("TRB1",.T.)
				
					TRB1->CODIGO     := SE2->E2_FORNECE
					TRB1->LOJA       := SE2->E2_LOJA
					TRB1->FORNECEDOR := IIF(mv_par28 == 1, SubStr(SA2->A2_NREDUZ,1,15), SubStr(SA2->A2_NOME,1,15))
					TRB1->PREFIXO	 := SE2->E2_PREFIXO
					TRB1->NUM_PARCEL := SE2->E2_NUM
					TRB1->TIPO_P     := SE2->E2_TIPO
					TRB1->NATUREZ	 := SE2->E2_NATUREZ
					TRB1->D_EMISSAO	 := SE2->E2_EMISSAO
					TRB1->VENCIMENTO := SE2->E2_VENCTO
					TRB1->VENC_REAL	 := SE2->E2_VENCREA
					TRB1->VL_ORIGINA := xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil)) * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1)
		   				   		
			EndIf
    		
    		DbSelectArea("SE2")
    		
			If dDataBase > SE2->E2_VENCREA 		//vencidos
				If mv_par20 == 1
					@ li, 112 PSAY nSaldo  * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1) Picture TM(nSaldo,14,nDecs)
					TRB1->VLR_NOMIN := nSaldo  * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1) 
				EndIf
				nJuros:=0
				dBaixa:=dDataBase
				dbSelectArea("SE2")
				fa080Juros(mv_par15,,'SE2') // JBS 04/05/2010 - Informado o alias e trocado de lugar com dbselectarea.
				If mv_par20 == 1
					@li,129 PSAY (nSaldo+nJuros) * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1) Picture TM(nSaldo+nJuros,14,nDecs)
					TRB1->VLR_CORRIG := (nSaldo+nJuros) * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1) 
				EndIf
				If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
					nTit0 -= xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nTit1 -= nSaldo
					nTit2 -= nSaldo+nJuros
					nMesTit0 -= xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nMesTit1 -= nSaldo
					nMesTit2 -= nSaldo+nJuros
				Else
					nTit0 += xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nTit1 += nSaldo
					nTit2 += nSaldo+nJuros
					nMesTit0 += xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nMesTit1 += nSaldo
					nMesTit2 += nSaldo+nJuros
				Endif
				nTotJur += (nJuros)
				nMesTitJ += (nJuros)
			Else				  //a vencer
				If mv_par20 == 1
					@li,147 PSAY nSaldo  * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1) Picture TM(nSaldo,14,nDecs)
					TRB1->V_NOMIN_AV := nSaldo  * If(SE2->E2_TIPO$MV_CPNEG+"/"+MVPAGANT, -1,1)
				EndIf
				If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
					nTit0 -= xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nTit3 -= nSaldo
					nTit4 -= nSaldo
					nMesTit0 -= xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nMesTit3 -= nSaldo
					nMesTit4 -= nSaldo
				Else
					nTit0 += xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nTit3 += nSaldo
					nTit4 += nSaldo
					nMesTit0 += xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,mv_par15,SE2->E2_EMISSAO,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))
					nMesTit3 += nSaldo
					nMesTit4 += nSaldo
				Endif
			Endif
			If mv_par20 == 1
				@Li,165 PSAY SE2->E2_PORTADO 
				TRB1->PORTADOR_ := SE2->E2_PORTADO  
			EndIf
			If nJuros > 0
				If mv_par20 == 1
					@Li,173 PSAY nJuros Picture PesqPict("SE2","E2_JUROS",12,MV_PAR15)
					TRB1->V_JRS_PERM := E2_JUROS
				EndIf
				nJuros := 0
			Endif
			
			IF dDataBase > E2_VENCREA
				nAtraso:=dDataBase-E2_VENCTO
				IF Dow(E2_VENCTO) == 1 .Or. Dow(E2_VENCTO) == 7
					IF Dow(dBaixa) == 2 .and. nAtraso <= 2
						nAtraso:=0
					EndIF
				EndIF
				nAtraso:=IIF(nAtraso<0,0,nAtraso)
				IF nAtraso>0
					If mv_par20 == 1
						@li,189 PSAY nAtraso Picture "9999"
						TRB1->DIA_ATRASO := nAtraso
					EndIf
				EndIF
			EndIF
			If mv_par20 == 1
				@li,194 PSAY SUBSTR(SE2->E2_HIST,1,24)+ ;
				IIF(E2_TIPO $ MVPROVIS,"*"," ")+ ;
				Iif(nSaldo - SE2->E2_ACRESC + SE2->E2_DECRESC == xMoeda(E2_VALOR,E2_MOEDA,mv_par15,dDataReaj,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))," ","P")
				TRB1->HS_VCD_VEC := SUBSTR(SE2->E2_HIST,1,24)+ ;
				IIF(E2_TIPO $ MVPROVIS,"*"," ")+ ;
				Iif(nSaldo - SE2->E2_ACRESC + SE2->E2_DECRESC == xMoeda(E2_VALOR,E2_MOEDA,mv_par15,dDataReaj,ndecs+1,If(mv_par35==1,SE2->E2_TXMOEDA,Nil))," ","P") 
			EndIf
	   		TRB1->(MsUnLock())			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Carrega data do registro para permitir ³
			//³ posterior analise de quebra por mes.	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dDataAnt := Iif(nOrdem == 3, SE2->E2_VENCREA, SE2->E2_EMISSAO)
			
			SE2->( DbSkip() )

			nTotTit ++
			nMesTTit ++
			nFiltit++
			nTit5 ++

			If mv_par20 == 1
				li ++
			EndIf
			
		EndDO  
		
		IF nTit5 > 0 .and. nOrdem != 1
			SubTot150(nTit0,nTit1,nTit2,nTit3,nTit4,nOrdem,cCarAnt,nTotJur,nDecs)
			If mv_par20 == 1
				li++
			EndIf
		EndIF  
				
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica quebra por mes					 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lQuebra := .F.
		If nOrdem == 3 .and. Month(SE2->E2_VENCREA) # Month(dDataAnt)
			lQuebra := .T.
		Elseif nOrdem == 6 .and. Month(SE2->E2_EMISSAO) # Month(dDataAnt)
			lQuebra := .T.
		Endif
		If lQuebra .and. nMesTTit # 0
			ImpMes150(nMesTit0,nMesTit1,nMesTit2,nMesTit3,nMesTit4,nMesTTit,nMesTitJ,nDecs,nOrdem,dDataAnt)
			nMesTit0 := nMesTit1 := nMesTit2 := nMesTit3 := nMesTit4 := nMesTTit := nMesTitj := 0
		Endif
		
		dbSelectArea("SE2")
		
		nTot0 += nTit0
		nTot1 += nTit1
		nTot2 += nTit2
		nTot3 += nTit3
		nTot4 += nTit4
		nTotJ += nTotJur
		
		nFil0 += nTit0
		nFil1 += nTit1
		nFil2 += nTit2
		nFil3 += nTit3
		nFil4 += nTit4
		nFilJ += nTotJur
		Store 0 To nTit0,nTit1,nTit2,nTit3,nTit4,nTit5,nTotJur
	Enddo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Chama a funcao para imprimir o relatorio classificado por   ³
	//³ ordem descendente de Titulos a vencer Valor Nominal         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If len(aSubTot) > 0
		fImpSbTot()
	EndIf
	
	DbSelectArea("SE2")		// voltar para alias existente, se nao, nao funciona
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Imprimir TOTAL por filial somente quan-³
	//³ do houver mais do que 1 filial.        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If mv_par22 == 1 .and. Len(aEmpresa) > 1
		ImpFil150(nFil0,nFil1,nFil2,nFil3,nFil4,nFilTit,nFilj,nDecs)
	Endif
	
	Store 0 To nFil0,nFil1,nFil2,nFil3,nFil4,nFilTit,nFilJ
	
	dbSelectArea("SE2")
//Next nId	
EndDo
IF li != 80
	If mv_par20 == 1
		li +=2
	Endif
	ImpTot150(nTot0,nTot1,nTot2,nTot3,nTot4,nTotTit,nTotJ,nDecs,nOrdem)
	cbcont := 1
	roda(cbcont,cbtxt,"G")
EndIF
Set Device To Screen

//----------------------------------------------------------------------------------------
// Apaga o arquivo temporario e restaura o padrão  da tabela SE2 - JBS 07/05/2010
//----------------------------------------------------------------------------------------
fCriaSE2TEMP(,,'FECHAR')

DbSelectArea("TRB1")
TRB1->(dbGotop())
ProcRegua(TRB1->(RECCOUNT()))	
aCols := Array(TRB1->(RECCOUNT()),Len(_aCampos))
nColuna := 0
nLinha := 0
While TRB1->(!Eof())
	nLinha++
	IncProc(OemToAnsi("Gerando planilha excel..."))
	For nColuna := 1 to Len(_aCampos)
		aCols[nLinha][nColuna] := &("TRB1->("+_aCampos[nColuna][1]+")")			
	Next nColuna
	TRB1->(dbSkip())	
EndDo
u_GDToExcel(_aCampos,aCols,Alltrim(FunName())) 

DbSelectArea("TRB1")

// Gerando arquivo excel - RBorges 20/05/15
COPY TO &cArqExcell VIA "DBFCDX"

FRename(cArqExcell+".dtc",cArqExcell+".xls")

MakeDir(cDestino) // CRIA DIRETÓRIO CASO NÃO EXISTA
CpyS2T(cArqExcell+".xls",cDestino,.T.) // COPIA ARQUIVO PARA MAQUINA DO USUÁRIO

// Buscando e apagando arquivos temporários - MCVN 27/08/10
aTmp := Directory( cDestino+"*.tmp" )
For nI:= 1 to Len(aTmp)
	fErase(cDestino+aTmp[nI,1])
Next nI     

TRB1->(dbCloseArea())  

If aReturn[5] = 1
	Set Printer To
	dbCommitAll()
	ourspool(wnrel)
Endif
MS_FLUSH()

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³SubTot150 ³ Autor ³ Wagner Xavier    	    ³ Data ³ 01.06.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³IMPRIMIR SUBTOTAL DO RELATORIO 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ SubTot150() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 																			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function SubTot150(nTit0,nTit1,nTit2,nTit3,nTit4,nOrdem,cCarAnt,nTotJur,nDecs)
Local dDatComp := StoD("")
DEFAULT nDecs := Msdecimais(mv_par15)

Begin Sequence

If mv_par20 == 1
	li++
EndIf

IF li > 58
	nAtuSM0 := SM0->(Recno())
//	SM0->(dbGoto(nRegSM0))
	cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
//	SM0->(dbGoTo(nAtuSM0))
EndIF

if nOrdem == 1 .Or. nOrdem == 3 .Or. nOrdem == 4 .Or. nOrdem == 6
	@li,000 PSAY OemToAnsi(STR0026)  //"S U B - T O T A L ----> "
	@li,028 PSAY cCarAnt                     
ElseIf nOrdem == 2
	dbSelectArea("SED")
	dbSeek(xFilial("SED")+cCarAnt)
	@li,000 PSAY cCarAnt +" "+SED->ED_DESCRIC
Elseif nOrdem == 5
	//-------------------------------------------------------------------------
	// JBS - 13/01/2010 - Armazena o total por fornecedor para Imprimir depois
	//-------------------------------------------------------------------------
	If MV_PAR20 == 2
		
		aAdd(aSubTot,{ IIF(mv_par28 == 1,SA2->A2_NREDUZ,SA2->A2_NOME)+" "+Substr(SA2->A2_TEL,1,15),; // Nome e Telefone do Fornecedor
		nTit1,;                                                                         // Titulos Vencido Valor Nominal
		nTit2,;                                                                         // Titulos Vencido Valor Corrigido
		nTit3,;                                                                         // Titulos a Vencer Valor Nominal
		Iif(nTotJur > 0,nTotJur,0),;                                                   //  Valor Juros ou Permanencia
		nTit2+nTit3})                                                                   //  Vencidos + A Vencer
		Break
	Else
		@Li,000 PSAY IIF(mv_par28 == 1,SA2->A2_NREDUZ,SA2->A2_NOME)+" "+Substr(SA2->A2_TEL,1,15)
	EndIf
ElseIf nOrdem == 7
	@li,000 PSAY SA2->A2_COD+" "+SA2->A2_LOJA+" "+SA2->A2_NOME+" "+Substr(SA2->A2_TEL,1,15)
Endif
if mv_par20 == 1
	@li,096 PSAY nTit0		 Picture TM(nTit0,14,nDecs)
endif
@li,112 PSAY nTit1		 Picture TM(nTit1,14,nDecs)
@li,129 PSAY nTit2		 Picture TM(nTit2,14,nDecs)
@li,147 PSAY nTit3		 Picture TM(nTit3,14,nDecs)
If nTotJur > 0
	@li,173 PSAY nTotJur 	 Picture TM(nTotJur,12,nDecs)
Endif
@li,204 PSAY nTit2+nTit3 Picture TM(nTit2+nTit3,16,nDecs)
li++
                                             
If mv_par39==2 .And. nOrdem == 3
	If (nValComp:=ProcPedCom(cCarAnt))>0     
		li++			
		If li > 58
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
		EndIF
			
		@li,000 PSAY OemToAnsi("P E D.  C O M P R A S -> ")			
		@li,028 PSAY cCarAnt
		@li,096 PSAY nValComp  Picture TM(nValComp,14,nDecs)			
		@li,147 PSAY nValComp  Picture TM(nValComp,14,nDecs)
		@li,204 PSAY nValComp  Picture TM(nValComp,16,nDecs)
			
		li+=2			
		If li > 58
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
		EndIf

		@li,000 PSAY OemToAnsi("T O T A L  D O  D I A  +  C O M P R A S -> ")			
		@li,096 PSAY nTit0+nValComp  		Picture TM(nTit0+nValComp,14,nDecs)			
		@li,147 PSAY nTit3+nValComp  		Picture TM(nTit3+nValComp,14,nDecs)
		@li,204 PSAY nTit2+nTit3+nValComp 	Picture TM(nTit2+nTit3+nValComp,16,nDecs)
		
		li+=2			
		If li > 58
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
		EndIF
	EndIf 
EndIf

End Sequence

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ImpTot150 ³ Autor ³ Wagner Xavier 		  ³ Data ³ 01.06.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³IMPRIMIR TOTAL DO RELATORIO 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ ImpTot150() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 																			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC Function ImpTot150(nTot0,nTot1,nTot2,nTot3,nTot4,nTotTit,nTotJ,nDecs,nOrdem)

DEFAULT nDecs := Msdecimais(mv_par15)

li++
IF li > 58
//	nAtuSM0 := SM0->(Recno())
//	SM0->(dbGoto(nRegSM0))
	cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
//	SM0->(dbGoTo(nAtuSM0))
EndIF
@li,000 PSAY OemToAnsi(STR0027)  //"T O T A L   G E R A L ----> "
@li,028 PSAY "("+ALLTRIM(STR(nTotTit))+" "+IIF(nTotTit > 1,OemToAnsi(STR0028),OemToAnsi(STR0029))+")"  //"TITULOS"###"TITULO"
if mv_par20 == 1
	@li,096 PSAY nTot0		 Picture TM(nTot0,14,nDecs)
endif
@li,112 PSAY nTot1		 Picture TM(nTot1,14,nDecs)
@li,129 PSAY nTot2		 Picture TM(nTot2,14,nDecs)
@li,147 PSAY nTot3		 Picture TM(nTot3,14,nDecs)
@li,173 PSAY nTotJ		 Picture TM(nTotJ,12,nDecs)
@li,204 PSAY nTot2+nTot3 Picture TM(nTot2+nTot3,16,nDecs)

If mv_par39==2 
	If nOrdem==3 .Or. nOrdem==2 .Or. nOrdem==5 //Vencimento ou Natureza ou Fornecedor
		If nOrdem==2 .Or. nOrdem==5 // Natureza	ou Fornecedor
		
			nMeses := (Month(mv_par08)-Month(mv_par07))+1
			nMesComp := Month(mv_par07)
			nAnoComp := Year(mv_par07)
			lFlagPC  := .F.		            
			For nJ:=1 to nMeses				
				For nI:=1 to 31	             
					dDatComp := StrZero(nAnoComp,4)+StrZero(nMesComp,2)+StrZero(nI,2)
					dDatComp := StoD(dDatComp)
					If dDatComp>=mv_par07 .And. dDatComp<=mv_par08
						If (nValComp:=ProcPedCom(dDatComp))>0     
							li++			
							If li > 58
								cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
							EndIF
							
							If !lFlagPC
								@li,000 PSAY OemToAnsi("P E D.  C O M P R A S -> ")
								lFlagPC := .T.
							EndIf
							@li,028 PSAY DtoC(dDatComp)                  
							@li,096 PSAY nValComp  Picture TM(nValComp,14,nDecs)			
							@li,147 PSAY nValComp  Picture TM(nValComp,14,nDecs)
						EndIf 
					EndIf
				Next nI        
				nMesComp++
			Next nJ
	    EndIf
	    
		li+=2
		@li,000 PSAY OemToAnsi("P E D.  C O M P R A S -> ")
		@li,028 PSAY "(Total Geral)"                 
		@li,096 PSAY nDipTCom  Picture TM(nDipTCom,14,nDecs)
		@li,147 PSAY nDipTCom  Picture TM(nDipTCom,14,nDecs)            
		@li,204 PSAY nDipTCom  Picture TM(nDipTCom,16,nDecs)            
			
		li+=2
		@li,000 PSAY OemToAnsi("T O T A L  G E R A L  +  C O M P R A S -> ")           
		@li,096 PSAY nTot0+nDipTCom  		Picture TM(nTot0+nDipTCom,14,nDecs)
		@li,147 PSAY nTot3+nDipTCom  		Picture TM(nTot3+nDipTCom,14,nDecs)
		@li,204 PSAY nTot2+nTot3+nDipTCom 	Picture TM(nTot2+nTot3+nDipTCom,16,nDecs)	
	EndIf
EndIf

li+=2
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ImpMes150 ³ Autor ³ Vinicius Barreira	  ³ Data ³ 12.12.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³IMPRIMIR TOTAL DO RELATORIO - QUEBRA POR MES					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ ImpMes150() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 																			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC Function ImpMes150(nMesTot0,nMesTot1,nMesTot2,nMesTot3,nMesTot4,nMesTTit,nMesTotJ,nDecs,nOrdem,dDatComp)

DEFAULT nDecs := Msdecimais(mv_par15)

li++
IF li > 58
	cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
EndIF
                                                                 
@li,000 PSAY OemToAnsi(STR0030)  //"T O T A L   D O  M E S ---> "
@li,028 PSAY "("+ALLTRIM(STR(nMesTTit))+" "+IIF(nMesTTit > 1,OemToAnsi(STR0028),OemToAnsi(STR0029))+")"  //"TITULOS"###"TITULO"
if mv_par20 == 1
	@li,096 PSAY nMesTot0   Picture TM(nMesTot0,14,nDecs)
endif
@li,112 PSAY nMesTot1	Picture TM(nMesTot1,14,nDecs)
@li,129 PSAY nMesTot2	Picture TM(nMesTot2,14,nDecs)
@li,147 PSAY nMesTot3	Picture TM(nMesTot3,14,nDecs)
@li,173 PSAY nMesTotJ	Picture TM(nMesTotJ,12,nDecs)
@li,204 PSAY nMesTot2+nMesTot3 Picture TM(nMesTot2+nMesTot3,16,nDecs)                                              

li+=2 
If mv_par39==2 .And. nOrdem==3
	nMesComp := Month(dDatComp)
	If nDipMCom>0
		If li > 58
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
		EndIF    
		
		@li,000 PSAY OemToAnsi("P E D.  C O M P R A S -> ")
		@li,028 PSAY "(Total do Mês "+StrZero(nMesComp,2)+")"
		@li,096 PSAY nDipMCom  Picture TM(nDipMCom,14,nDecs)
		@li,147 PSAY nDipMCom  Picture TM(nDipMCom,14,nDecs)
		@li,204 PSAY nDipMCom  Picture TM(nDipMCom,16,nDecs)
		 
		li+=2			
		If li > 58
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
		EndIF    
		
		@li,000 PSAY OemToAnsi("T O T A L  D O  M E S  +  C O M P R A S -> ")
		@li,096 PSAY nMesTot0+nDipMCom  		Picture TM(nMesTot0+nDipMCom,14,nDecs)
		@li,147 PSAY nMesTot3+nDipMCom			Picture TM(nMesTot3+nDipMCom,14,nDecs)
		@li,204 PSAY nMesTot2+nMesTot3+nDipMCom	Picture TM(nMesTot2+nMesTot3+nDipMCom,16,nDecs)
		
		nDipMCom := 0		
	EndIf
	
	li+=2			
	If li > 58
		cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))	
	EndIF     
EndIf

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ ImpFil150³ Autor ³ Paulo Boschetti 	     ³ Data ³ 01.06.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Imprimir total do relatorio										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ ImpFil150()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³																				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico				   									 			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
STATIC Function ImpFil150(nFil0,nFil1,nFil2,nFil3,nFil4,nFilTit,nFilJ,nDecs)

DEFAULT nDecs := Msdecimais(mv_par15)

li++
IF li > 58
	nAtuSM0 := SM0->(Recno())
	// SM0->(dbGoto(nRegSM0))
	cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
	// SM0->(dbGoTo(nAtuSM0))
EndIF
@li,000 PSAY OemToAnsi(STR0032)+" "+cFilAnt+" - " + AllTrim(SM0->M0_FILIAL)  //"T O T A L   F I L I A L ----> "
if mv_par20 == 1
	@li,096 PSAY nFil0        Picture TM(nFil0,14,nDecs)
endif
@li,112 PSAY nFil1        Picture TM(nFil1,14,nDecs)
@li,129 PSAY nFil2        Picture TM(nFil2,14,nDecs)
@li,147 PSAY nFil3        Picture TM(nFil3,14,nDecs)
@li,173 PSAY nFilJ		  Picture TM(nFilJ,12,nDecs)
@li,204 PSAY nFil2+nFil3 Picture TM(nFil2+nFil3,16,nDecs)
li+=2
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fr150Indr ³ Autor ³ Wagner           	  ³ Data ³ 12.12.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Monta Indregua para impressao do relat¢rio						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fr150IndR()
Local cString
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ ATENCAO !!!!                                               ³
//³ N„o adiconar mais nada a chave do filtro pois a mesma est  ³
//³ com 254 caracteres.                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cString := 'E2_FILIAL="'+__cFilial+'".And.'
cString += '(E2_MULTNAT="1" .OR. (E2_NATUREZ>="'+mv_par05+'".and.E2_NATUREZ<="'+mv_par06+'")).And.'
cString += 'E2_FORNECE>="'+mv_par11+'".and.E2_FORNECE<="'+mv_par12+'".And.'
cString += 'DTOS(E2_VENCREA)>="'+DTOS(mv_par07)+'".and.DTOS(E2_VENCREA)<="'+DTOS(mv_par08)+'".And.'
cString += 'DTOS(E2_EMISSAO)>="'+DTOS(mv_par13)+'".and.DTOS(E2_EMISSAO)<="'+DTOS(mv_par14)+'"'
If !Empty(mv_par30) // Deseja imprimir apenas os tipos do parametro 30
	cString += '.And.E2_TIPO$"'+mv_par30+'"'
ElseIf !Empty(Mv_par31) // Deseja excluir os tipos do parametro 31
	cString += '.And.!(E2_TIPO$'+'"'+mv_par31+'")'
EndIf
IF mv_par32 == 1  // Apenas titulos que estarao no fluxo de caixa
	cString += '.And.(E2_FLUXO!="N")'
Endif

Return cString

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PutDtBase³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 18/07/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta parametro database do relat[orio.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Finr150.                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PutDtBase()
Local _sAlias	:= Alias()

dbSelectArea("SX1")
dbSetOrder(1)
If MsSeek( padr( "FIN150" , Len( x1_grupo ) , ' ' )+ "33")
	//Acerto o parametro com a database
	RecLock("SX1",.F.)
	Replace x1_cnt01		With "'"+DTOC(dDataBase)+"'"
	MsUnlock()
Endif

dbSelectArea(_sAlias)
Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ CriaSX1  ³ Autor ³ Microsiga             ³ Data ³ 10.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria e analisa grupo de perguntas                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cPerg                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function CriaSX1( cPerg )

Local i,j
Local aAreaAtu	:= GetArea()
Local aAreaSX1	:= SX1->( GetArea() )
Local aTamSX3	:= {}
Local aRegs     := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava as perguntas no arquivo SX1                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTamSX3	:= TAMSX3( "E5_NUMERO" )
AADD(aRegs,{cPerg,	"01","Do Numero ?"               ,"¿De Numero ?"                 ,"From Number ?"        ,"mv_ch1", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_numde"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"02","Ate o Numero ?"            ,"¿A Numero ?"                  ,"To Number ?"          ,"mv_ch2", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_numate" ,                "",               "",            "","ZZZZZZZZZ","",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "E5_PREFIXO" )
AADD(aRegs,{cPerg,	"03","Do Prefixo ?"              ,"¿De Prefijo ?"                ,"From Prefix ?"        ,"mv_ch3", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_prfde"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"04","Ate o Prefixo ?"           ,"¿A Prefijo ?"                 ,"To Prefix ?"          ,"mv_ch4", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_prfate" ,                "",               "",            "","ZZ"       ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "ED_CODIGO" )
AADD(aRegs,{cPerg,	"05","Da Natureza ?"             ,"¿De Naturaleza ?"             ,"From Class ?"         ,"mv_ch5", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_natde"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","","SED","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"06","Ate a Natureza ?"          ,"¿A Naturaleza ?"              ,"To Class ?"           ,"mv_ch6", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_natate" ,                "",               "",            "","ZZZZZZ"   ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","","SED","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "E5_VENCTO" )
AADD(aRegs,{cPerg,	"07","Do Vencimento ?"           ,"¿De Vencimiento ?"            ,"From Due Date ?"      ,"mv_ch7", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_vencde" ,                "",               "",            "","01/01/04" ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"08","Ate o Vencimento ?"        ,"¿A Vencimiento ?"             ,"To Due Date ?"        ,"mv_ch8", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_vencate",                "",               "",            "","31/12/04" ,"",              "",                "",              "","","",         "",          "",            "","",            "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "A6_COD" )
AADD(aRegs,{cPerg,	"09","Do Banco ?"                ,"¿De Banco ?"                  ,"From Bank ?"          ,"mv_ch9", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_bcode"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","","BCO","S","007" ,          "","","" })
AADD(aRegs,{cPerg,	"10","Ate o Banco ?"             ,"¿A Banco ?"                   ,"To Bank ?"            ,"mv_cha", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_bcoate" ,                "",               "",            "","ZZZ"      ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","","BCO","S","007" ,          "","","" })

aTamSX3	:= TAMSX3( "A2_COD" )
AADD(aRegs,{cPerg,	"11","Do Fornecedor ?"           ,"¿De Proveedor ?"              ,"From Supplier ?"      ,"mv_chb", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_fornde" ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","","SA2","S","001" ,          "","","" })
AADD(aRegs,{cPerg,	"12","Ate o Fornecedor ?"        ,"¿A Proveedor ?"               ,"To Supplier ?"        ,"mv_chc", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_fornate",                "",               "",            "","ZZZZZZ"   ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","","SA2","S","001" ,          "","","" })

aTamSX3	:= TAMSX3( "E5_DATA" )
AADD(aRegs,{cPerg,	"13","Da Emissao ?"              ,"¿De Emision ?"                ,"From Issue Date ?"    ,"mv_chd", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_emisde" ,                "",               "",            "","01/01/04" ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"14","Ate a Emissao ?"           ,"¿A Emision ?"                 ,"To Issue Date ?"      ,"mv_che", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_emisate",                "",               "",            "","21/12/04" ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

AADD(aRegs,{cPerg,	"15","Qual Moeda ?"              ,"¿Que Moneda ?"                ,"Which Currency ?"     ,"mv_chf",        "N",          1,         0,         1,"C" ,"","mv_par15"  ,"Moeda 1"         ,"Moneda 1"       ,"Currency 1"  ,""         ,"","Moeda 2"       ,"Moneda 2"        ,"Currency 2"    ,"","", "Moeda 3" , "Moneda 3" , "Currency 3" ,"","", "Moeda 4" , "Moneda 4" , "Currency 4" ,"","", "Moeda 5" , "Moneda 5" , "Currency 5" ,"",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"16","Imprime Provisorios ?"     ,"¿Imprime Provisorios ?"       ,"Print Temporary ?"    ,"mv_chg",        "N",          1,         0,         2,"C" ,"","mv_par16"  ,"Sim"             ,"Si"             ,"Yes"         ,""         ,"","Nao"           ,"No"              ,"No"            ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"17","Converte Venci pela ?"     ,"¿Convierte Vencidos por ?"    ,"Convert per ?"        ,"mv_chh",        "N",          1,         0,         2,"C" ,"","mv_par17"  ,"Data Base"       ,"Fecha de Hoy"   ,"Base Date"   ,""         ,"","Data de Vencto","Fecha Vencto."   ,"Due Date"      ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "E5_DATA" )
AADD(aRegs,{cPerg,	"18","Da data contabil ?"        ,"¿A Fecha Contable ?"          ,"From Acconting Date ?","mv_chh", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_dtcont1",                "",               "",            "","01/01/04" ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"19","Ate data contabil ?"       ,"¿A Fecha Contable ?"          ,"To Accounting Date ?" ,"mv_chi", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_dtcont2",                "",               "",            "","31/12/04" ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

AADD(aRegs,{cPerg,	"20","Imprime Relatorio ?"       ,"¿Imprimir Informe ?"          ,"Print Report ?"       ,"mv_chj",        "N",          1,         0,         1,"C" ,"","mv_par20"  ,"Analitico"       ,"Analitico"      ,"Detailed"    ,""         ,"","Sintetico"     ,"Sintetico"       ,"Summarized"    ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"21","Compoem Saldo Retroativo ?","¿Componen Saldo Retroactivo ?","Consider Base Date ?" ,"mv_chk",        "N",          1,         0,         1,"C" ,"","mv_par21"  ,"Sim"             ,"Si"             ,"Yes "        ,""         ,"","Nao"           ,"No"              ,"No"            ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"22","Cons.Filiais abaixo ?"     ,"¿Considera Siguientes Suc ?"  ,"Cons.Branches below ?","mv_chx",        "C",          1,         0,         2,"C" ,"","mv_par22"  ,"Sim"             ,"Si"             ,"Yes"         ,""         ,"","Nao"           ,"No"              ,"No"            ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "E5_FILIAL" )
AADD(aRegs,{cPerg,	"23","Da Filial ?"               ,"¿De Sucursal ?"               ,"From Branch ?"        ,"mv_chy", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_par23"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"24","Ate a Filial ?"            ,"¿A Sucursal ?"                ,"To Branch ?"          ,"mv_chz", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_par24"  ,                "",               "",            "","ZZ"       ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "E5_LOJA" )
AADD(aRegs,{cPerg,	"25","Da Loja ?"                 ,"¿De Tienda ?"                 ,"From Unit ?"          ,"mv_cho", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_par25"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S","002" ,          "","","" })
AADD(aRegs,{cPerg,	"26","Ate a Loja ?"              ,"¿A Tienda ?"                  ,"To Unit ?"            ,"mv_chp", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_par26"  ,                "",               "",            "","ZZ"       ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S","002" ,          "","","" })

AADD(aRegs,{cPerg,	"27","Considera Adiantam. ?"     ,"¿Considera Anticipo ?"        ,"Consider Advance ?"   ,"mv_chq",        "N",          1,         0,         0,"C" ,"","mv_par27"  ,"Sim"             ,"Si"             ,"Yes"         ,""         ,"","Nao"           ,"No"              ,"No"            ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"28","Imprime Nome ?"            ,"¿Imprime Nombre ?"            ,"Print Name ?"         ,"mv_chm",        "N",          1,         0,         1,"C" ,"","mv_par28"  ,"Nome Reduzido"   ,"Nombre Reducido","Reduced Name",""         ,"","Razao Social"  ,"Razon Social"    ,"Trade Name"    ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"29","Outras Moedas ?"           ,"¿Otras Monedas ?"             ,"Other Currencies ?"   ,"mv_chn",        "N",          1,         0,         1,"C" ,"","mv_par29"  ,"Converter"       ,"Convertir"      ,"Convert"     ,""         ,"","Nao Imprimir"  ,"No Imprimir"     ,"Do Not Print"  ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"30","Imprimir Tipos ?"          ,"¿Imprimir Tipos ?"            ,"Print Types ?"        ,"mv_cho",        "C",         40,         0,         0,"G" ,"","mv_par30"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"31","Nao Imprimir Tipos ?"      ,"¿No imprimir tipos ?"         ,"Do Not Print Types ?" ,"mv_chn",        "C",         40,         0,         0,"G" ,"","mv_par31"  ,                "",               "",            "",""         ,"",              "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"32","Somente Tit.p/Fluxo ?"     ,"¿Solamente Titulo p/Flujo ?"  ,"Only Bill per Flow ?" ,"mv_cho",        "N",          1,         0,         0,"C" ,"","mv_par32"  ,"Sim"             ,"Si"             ,"Yes"         ,""         ,"","Nao"           ,"No"              ,"No"            ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

aTamSX3	:= TAMSX3( "E5_DATA" )
AADD(aRegs,{cPerg,	"33","Data Base ?"               ,"¿Fecha Base ?"                ,"Base Date ?"          ,"MV_CHR", aTamSX3[3],aTamSx3[1],	aTamSX3[2],         0,"G" ,"","mv_par33"  ,                "",               "",            "","01/01/04","",               "",                "",              "","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })

AADD(aRegs,{cPerg,	"34","Compoe Saldo por ?"        ,"¿Compone saldo por ?"         ,"Set Balance by ?"     ,"MV_CHS",        "N",          1,         0,         1,"C" ,"","mv_par34"  ,"Data da Baixa"   ,"Fecha Baja"     ,"Posting Date",""         ,"","Data Digitacao", "Fch.Digitacion" , "Entry Date"   ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"35","Quanto a taxa ?"           ,"¿Con referencia a tasa ?"     ,"How about rate ?"     ,"MV_CHT",        "N",          1,         0,         1,"C" ,"","mv_par35"  ,"Taxa contratada" ,"Tasa contratada","Hired rate"  ,""         ,"","Taxa normal"   , "Tasa normal"    , "Standard rate","","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",          "","","" })
AADD(aRegs,{cPerg,	"36","Tit. Emissao Futura ?"     ,"¿Tit. Emision Futura ?"       ,"Future issue bill ?"  ,"MV_CHU",        "N",          1,         0,         2,"C" ,"","mv_par36"  ,"Sim"             ,"Si"             ,"Yes"         ,""         ,"","Nao"           , "No"             , "No"           ,"","",         "",          "",            "","","",         "",          "",            "","","",         "",          "",            "","",   "","S",    "",".FIN15036.","","" })

DbSelectArea("SX1")
SX1->(DbSetOrder(1))

For I := 1 To Len(aRegs)
	If 	!dbSeek(cPerg+aRegs[i,2])
		RecLock("SX1",.T.)
		For j:=1 to FCount()
			IF j <= Len(aRegs[i])
				FieldPut(j,aRegs[i,j])
			EndIf
		Next
		MsUnLock()
	Else
		RecLock("SX1",.F.)
		For j:= 7 to 10
			FieldPut(j,aRegs[i,j])
		Next
		MsUnLock()
	EndIf
Next

RestArea( aAreaSX1 )
RestArea( aAreaAtu )

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AjustaSX1 ºAutor  ³Raphael Zampieri    º Data ³11.06.2008   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Ajusta perguntas da tabela SX1                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINR150                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaSX1()

Local aArea := GetArea()
Local aRegs		:= {}
Local nTamTitSX3:= 0
Local cGrupoSX3	:= ""


dbSelectArea("SX3")
dbSetOrder(2)
dbSeek("E1_NUM")
nTamTitSX3	:= SX3->X3_TAMANHO
cGrupoSX3	:= SX3->X3_GRPSXG
dbSetOrder(1)

//            cPerg	Ordem	PergPort         cPerSpa        cPerEng           cVar  Tipo     nTam	 1 2 3    4   cVar01  cDef01  cDefSpa1    cDefEng1    cCont01	        cVar02	   cDef02           cDefSpa2         cDefEng2   cCnt02 cVar03 cDef03   cDefSpa3  cDefEng3  	cCnt03	cVar04	cDef04  cDefSpa4  cDefEng4  cCnt04 	cVar05 	 cDef05	 cDefSpa5  cDefEng5	 cCnt05	 cF3	cGrpSxg  cPyme	 aHelpPor aHelpEng	aHelpSpa  cHelp
//AAdd(aRegs,{"FIN150", "01","Do Numero  ?","¿De Numero  ?","From Number  ?",  "mv_ch1","C",nTamTitSX3,0,0,"G","","mv_numde","",      "",         "",         "",               "",        "",              "",              "",       "",    "",   "",        "",      "",       "",     "",    "",      "",        "",      "",     "",      "",     "",       "",      "",   "",   cGrupoSX3, "S",     "",      "",        "",     ""})
//AAdd(aRegs,{"FIN150", "02","Ate o Numero  ?","¿A Numero  ?","To Number  ?",  "mv_ch2","C",nTamTitSX3,0,0,"G","","mv_numate","",      "",         "",    "ZZZZZZZZZZZZZZZZZZZZ",          "",        "",              "",              "",       "",    "",   "",        "",      "",       "",     "",    "",      "",        "",      "",     "",      "",     "",       "",      "",   "",   cGrupoSX3, "S",     "",      "",        "",     ""})
AAdd(aRegs,{"FIN150", "39","Pedido Compras?","","","mv_chz","N",1,0,0,"C","","MV_PAR39","Não","","","","","Sim","","","","","","","","","","","","","","","","","","","",,"S","","","",""})



ValidPerg(aRegs,"FIN150",.T.)

RestArea( aArea )

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fImpSbTot()³ Autor ³ Jailton B Santos-JBS ³ Data ³01/01/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Imprime as informacoes do relatorio a partir do array       ³±±
±±³          ³aSubTot. Apenas para Ordem de Impressao por fornecedor e re-³±±
±±³          ³latorio do tipo 'Sintetico' 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fImpSbTot() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Financeiro - Dipromed									  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fImpSbTot()

Local nId   := 0
Local nDecs := MsDecimais(mv_par15)

Begin Sequence

If len(aSubTot) == 0
	Break
EndIf

aSort(aSubTot,,,{|x,y| x[4] > y[4]})

For nId := 1 to len(aSubTot)
	
	If li > 58
		nAtuSM0 := SM0->(Recno())
		// SM0->(dbGoto(nRegSM0))
		cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
		// SM0->(dbGoTo(nAtuSM0))
	EndIf
	
	@Li,000 psay aSubTot[nId][1]                                       // Nome e Telefone do Fornecedor
	@li,112 psay aSubTot[nId][2] picture TM(aSubTot[nId][2],14,nDecs) // Titulos Vencido Valor Nominal
	@li,129 psay aSubTot[nId][3] picture TM(aSubTot[nId][3],14,nDecs) // Titulos Vencido Valor Corrigido
	@li,147 psay aSubTot[nId][4] picture TM(aSubTot[nId][4],14,nDecs) // Titulos a Vencer Valor Nominal
	
	If aSubTot[nId][5] > 0
		@li,173 psay aSubTot[nId][5] picture TM(aSubTot[nId][5],12,nDecs) //  Valor Juros ou Permanencia
	Endif
	
	@li,204 psay aSubTot[nId][6] picture TM(aSubTot[nId][6],16,nDecs) //  Vencidos + A Vencer
	li++
	
Next nId
//-----------------------------------
// Limpa a Array
//-----------------------------------
aSubTot := {}

End Sequence

Return(.T.)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fFilial() ºAutor  ³Jailton B Santos-JBSº Data ³ 30/04/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz o tratamento para achar a filial para empresa para a    º±±
±±º          ³qual ira' abrir a tabela informada.                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametro ³_cEmpresa: Empresa na qual queremos coletar dados           º±±
±±º          ³_cTabela : Nome da tabela da qual queremos coletar dados    º±±
±±º          ³_cFilial : Se a tabela for exclusiva, esta eh a filial da   º±±
±±º          ³           qual eh preciso coletar dados.                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico - Financeiro  - DIPROMED                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fFilial(_cEmpresa,_cTabela,_cFilial)

Local _cNewFilial := Space(2)
Local _cFile      := 'SX2'+_cEmpresa
Local _cFileIdx   := _cFile

If Select("SX2_2") = 0
	MsOpEndbf(.T.,"DBFCDX",_cFile,"SX2_2",.T.,.F.)
EndIf

SX2_2->( DbSetOrder(1) )

If SX2_2->( DbSeek(_cTabela) )
	If SX2_2->X2_MODO = 'E'
		_cNewFilial := _cFilial
	EndIf
Else
	_cNewFilial := xFilial(_cTabela)
EndIf

Return(_cNewFilial)




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fPosFilialºAutor  ³Jailton B Santos-JBSº Data ³  05/05/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Esta função verifica dentro dos diferentes laços de repeti-º±±
±±º          ³ ção se a empresa ou filial mudou. Atualiza sempre as varia-º±±
±±º          ³ veis de controle                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico Financeiro Dipromed                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fPosFilial(aFiliais)
Local nId := 0

__cFilial  := SE2->E2_FILIAL      // JBS 05/05/2010
__cEmpresa := SE2->E2_EMPRESA     // JBS 05/05/2010    

nId := Ascan(aEmpresa, {|x| x[1] == SE2->E2_EMPRESA }) // JBS 05/05/2010
//------------------------------------------------------------------------------------------------------
If cEmpresaOld <> __cEmpresa
	//------------------------------------------------------------------------------------------------------
	// Fecha a Tabela SC5 da Empresa Atual, selecionada na Entrada do Sistema - JBS - 04/05/2010
	//------------------------------------------------------------------------------------------------------
	SE5->(DbCloseArea())
	//------------------------------------------------------------------------------------------------------
	// Abrea a Tabela SE5 para Empresa que está sendo processada, apontada pela array aEmpresa[x]
	// e tratamento para para só fechar o SE5, quando a empresa for diferente da que esta aberta.
	// JBS 04/05/2010
	//------------------------------------------------------------------------------------------------------
	MsOpEndbf(.T.,"TOPCONN","SE5"+__cEmpresa,"SE5",.T.,.F.)
	//------------------------------------------------------------------------------------------------------
	// Abre os indices para a tabela SE5  que foi aberta acima - JBS - 04/05/2010
	//------------------------------------------------------------------------------------------------------
	For __nIndice := 1 to len(cIndSE5)
		SE5->(DbSetIndex("SE5"+aEmpresa[nId][01]+SubStr(cIndSE5,__nIndice,1)))
	Next __nIndice 
    If Select("__SE2")> 0
    	__SE2->(DbCloseArea())
    EndIf	
	MsOpEndbf(.T.,"TOPCONN","SE2"+__cEmpresa,"__SE2",.T.,.F.)
	//------------------------------------------------------------------------------------------------------
	// Abre os indices para a tabela SE5  que foi aberta acima - JBS - 04/05/2010
	//------------------------------------------------------------------------------------------------------
	For __nIndice := 1 to len(cIndSE2)
		__SE2->(DbSetIndex("SE2"+aEmpresa[nId][01]+SubStr(cIndSE2,__nIndice,1)))
	Next __nIndice 
   //------------------------------------------------------------------------------------------------------
    // Determina quais as filiais lidas da empresa - JBS 04/05/2010
    //------------------------------------------------------------------------------------------------------
    aFiliais := {}
    For x := 1 to len(aEmpresa)  
        If aEmpresa[x][01]  == __cEmpresa 
           aadd(aFiliais,Iif(Empty(aEmpresa[x][02]),'01',aEmpresa[x][02]))
        EndIf
    Next x 
    cEmpresaOld := __cEmpresa
EndIf
DbSelectArea('SE2')
Return(nId)
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//   F U N Ç Õ E S     C O P I A D A S    D O    P R O G R A M A  - FINXFUN.PRW    | JBS - Jailton Barbosa dos Santos  | Especifico: 
//   TRANSFORMADAS EM STATIC FUNCTION PARA TER PRIORIDADE SOBRE A FUNÇÃO PADRÃO    | 05 Mai 2010                       | Financeiro Grupo Dipromed
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SaldoTit ³ Autor ³ Jailton B Santos-JBS  ³ Data ³ 05/05/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ A Rotina padrao foi renomeada para xCalcEst(), para os ca- ³±±
±±³          ³ sos que utilizam banco de dados disparem uma Stored Proce- ³±±
±±³          ³ dure CalcEst.SQL. Se a procedure nao existir a rotina pa-  ³±±
±±³          ³ drao xCalcEst() sera executada.                            ³±±
±±³          ³ Motivo basico da alteracao e a Otimizacao e Performance    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SaldoTit(ExpC1,ExpC2,ExpC3,ExpC4,ExpC5,ExpC6,ExpC7,ExpN1)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1=Numero do Prefixo                                    ³±±
±±³          ³ ExpC2=Numero do Titulo                                     ³±±
±±³          ³ ExpC3=Parcela                                              ³±±
±±³          ³ ExpC4=Tipo                                                 ³±±
±±³          ³ ExpC5=Natureza                                             ³±±
±±³          ³ ExpC6=Carteira  (R/P)                                      ³±±
±±³          ³ ExpC7=Fornecedor (se ExpC6 = 'R')                          ³±±
±±³          ³ ExpN1=Moeda                                                ³±±
±±³          ³ ExpD1=Data para conversao                                  ³±±
±±³          ³ ExpD2=Data data baixa a ser considerada (retroativa)       ³±±
±±³          ³ ExpC8=Loja do titulo                                       ³±±
±±³          ³ ExpC9=Filial do titulo                                     ³±±
±±³          ³ Expn2=Taxa da Moeda                                        ³±±
±±³          ³ Expn3=Tipo de data para compor saldo (baixa/dispo/digit)   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function SaldoTit(cPrefixo,cNumero,cParcela,cTipo,cNatureza,cCart,cCliFor,nMoeda,dData,dDataBaixa,cLoja,cFilTit,nTxMoeda,nTipoData)
//Tipos de Data (cTipoData ou xTipoData)
// 0 = Data Da Baixa (E5_DATA) (Default)
// 1 = Data de Disponibilidade (E5_DTDISPO)
// 2 = Data de Contabilidação (E5_DTDIGIT)

Local nSaldo     := 0
Local cxFilial   := nil
Local cProcedure := 'FIN002'
Local cTiPoData  := "0"
Local cAliasTit

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local cPCCBaixa   := iif(lPCCBaixa,"1","0")
Local cAdiant		:= IIF( (cTipo $ MVRECANT+"/"+MVPAGANT+"/"+MV_CRNEG+"/"+MV_CPNEG), "1","0")

DEFAULT nTxMoeda := 0

dDataBaixa  := iif(dDataBaixa ==nil, dDataBase, dDataBaixa )
dData       := iif(dData      ==nil, dDataBase, dData )
nMoeda      := iif(nMoeda     ==nil, 1        , nMoeda )
cLoja       := iif(cLoja      ==nil, iif(cCart=="R",SE1->E1_LOJA   ,SE2->E2_LOJA   ), cLoja )
nTipoData	:= iif(nTipoData  ==nil, 1 , nTipoData )

If nTipoData == 1
	cTipoData := "0"  // E5_DATA
ElseIf nTipodata == 2
	cTipoData := "1"  // E5_DTDISPO
Else
	cTipoData := "2"  // E5_DTDIGIT
Endif


If ExistProc( cProcedure, '002' )
	aResult := {}
	
	cCliFor:=Iif( cCliFor=NIL,Iif(cCart=="R",SE1->E1_CLIENTE,SE2->E2_FORNECE),cCliFor )
	cLoja  :=Iif( cLoja  =NIL,Iif(cCart=="R",SE1->E1_LOJA   ,SE2->E2_LOJA   ),cLoja   )
	
	If cCart = "R"
		cAliasTit := "SE1"
		dbSelectArea("SE1")
		nSaldo    := E1_VALOR+SE1->E1_SDACRES-SE1->E1_SDDECRE
		nMoedaTit := SE1->E1_MOEDA
		cCliFor   := Iif(Empty(cCliFor),SE1->E1_CLIENTE,cCliFor)
		cLoja     := Iif(Empty(cLoja  ),SE1->E1_LOJA,cLoja)
	Else
		cAliasTit := "SE2"
		dbSelectArea("SE2")
		nSaldo    := E2_VALOR+SE2->E2_SDACRES-SE2->E2_SDDECRE
		nMoedaTit := SE2->E2_MOEDA
	Endif
	
	nMoeda    := ((nMoeda+1.00)-1.00)
	nMoedaTit := ((nMoedaTit+1.00)-1.00)
	
	aResult := TCSPEXEC( xProcedures(cProcedure),;
	cPrefixo,                cNumero,;
	cParcela,                cTipo,;
	cCliFor,                 DTOS(dData),;
	DTOS(dDataBaixa),        cLoja,;
	DTOS(dDataBase),         cFilAnt,;
	nSaldo,                  nMoedaTit,;
	cPaisLoc,                cTipoData,;
	cPCCBaixa,               cCart, cAdiant )
	
	nSaldo := aResult[1]
	// Zera o Saldo devido problema de arredondamento nos juros, ou seja, o valor dos juros que eh gravado com
	// 2 casas decimais, gera diferena na recomposicao do saldo no titulo
	// Exemplo: Titulo com valor de 24.450, com E1_PORCJUR de 0.13 e tres dias de atraso, grava em E5_JUROS o valor
	// de 95.36, sendo que o valor dos juros seria 95.355
	// Movimentacao no SE5:
	//	      Baixa	Juros	       Saldo
	//		 		            24.450,00
	//-------------------------------
	//		4.001,04	95,36 	20.544,32 3 dias apos vencto.
	//		2.100,95		      18.443,37 mesma data
	//		3.474,23		      14.969,14 mesma data
	//		6.000,00		       8.969,14 5 dias apos vencto
	//		5.060,00		       3.909,14 10 dias apos vencto
	//		3.919,29	10,16	        0,01 12 dias apos vencto
	If Empty((cAliasTit)->&(Right(cAliasTit,2)+"_SALDO")) .And. Abs(nSaldo) <= 0.009
		nSaldo := 0
	Else
		nSaldo := Round(NoRound(xMoeda(nSaldo,nMoedaTit,nMoeda,dData,Msdecimais(nMoeda)+1,nTxMoeda),Msdecimais(nMoeda)+1),Msdecimais(nMoeda))
	Endif
	Return (nSaldo)
Else
	Return xSaldoTit(@cPrefixo,@cNumero,@cParcela,@cTipo,@cNatureza,@cCart,@cCliFor,@nMoeda,@dData,@dDataBaixa,@cLoja,@cFilTit,nTxMoeda,nTipoData)
Endif

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SaldoTit ³ Autor ³ Jailton B Santos-JBS  ³ Data ³ 05/05/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calcula o valor de um titulo em uma determinada data       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SaldoTit(ExpC1,ExpC2,ExpC3,ExpC4,ExpC5,ExpC6,ExpC7,ExpN1)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1=Numero do Prefixo                                    ³±±
±±³          ³ ExpC2=Numero do Titulo                                     ³±±
±±³          ³ ExpC3=Parcela                                              ³±±
±±³          ³ ExpC4=Tipo                                                 ³±±
±±³          ³ ExpC5=Natureza                                             ³±±
±±³          ³ ExpC6=Carteira  (R/P)                                      ³±±
±±³          ³ ExpC7=Fornecedor (se ExpC6 = 'R')                          ³±±
±±³          ³ ExpN1=Moeda                                                ³±±
±±³          ³ ExpD1=Data para conversao                                  ³±±
±±³          ³ ExpD2=Data data baixa a ser considerada (retroativa)       ³±±
±±³          ³ ExpC8=Loja do titulo                                       ³±±
±±³          ³ ExpC9=Filial do titulo                                     ³±±
±±³          ³ ExpX10=Tipo de data para compor saldo (baixa/dispo/digit)  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function xSaldoTit(cPrefixo,cNumero,cParcela,cTipo,cNatureza,cCart,cCliFor,nMoeda,dData,dDataBaixa,cLoja,cFilTit,nTxMoeda,nTipoData)

//Tipos de Data (cTipoData)
// 0 = Data Da Baixa (E5_DATA)
// 1 = Data de Disponibilidade (E5_DTDISPO)
// 2 = Data de Contabilidação (E5_DTDIGIT)

Local cAlias:=Alias(),nSaldo:=0,dDataMoeda, nMoedaTit
Local cCarteira
Local dDtFina
Local cAliasTit

//Controla o Pis Cofins e Csll na baixa
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )


DEFAULT nTxMoeda := 0

cCliFor:=Iif( cCliFor=NIL,Iif(cCart=="R",SE1->E1_CLIENTE,SE2->E2_FORNECE),cCliFor )
cLoja  :=Iif( cLoja  =NIL,Iif(cCart=="R",SE1->E1_LOJA   ,SE2->E2_LOJA   ),cLoja   )
nMoeda :=IIF( nMoeda==NIL,1,nMoeda )
dDataMoeda :=IIF( dData==NIL,dDataBase,dData )
dDataBaixa :=IIF( dDataBaixa==NIL,dDataBase,dDataBaixa )
nTipoData  := IIF( nTipoData  ==nil, 0 , nTipoData )

If nTipoData == 1
	cTipoData := "0"  // E5_DATA
ElseIf nTipodata == 2
	cTipoData := "1"  // E5_DTDISPO
Else
	cTipoData := "2"  // E5_DTDIGIT
Endif

dbSelectArea("SE5")

If cCart = "R"
	cAliasTit := "SE1"
	dbSelectArea("SE1")
	nSaldo := E1_VALOR+SE1->E1_SDACRES-SE1->E1_SDDECRE
	nMoedaTit := SE1->E1_MOEDA
	cCliFor := Iif(Empty(cCliFor),SE1->E1_CLIENTE,cCliFor)
	cLoja   := Iif(Empty(cLoja  ),SE1->E1_LOJA,cLoja)
Else
	cAliasTit := "SE2"
	dbSelectArea("SE2")
	nSaldo := SE2->E2_VALOR+SE2->E2_SDACRES-SE2->E2_SDDECRE
	nMoedaTit := SE2->E2_MOEDA
Endif

nRecSE5 := SE5->(Recno())
nOrdSE5 := SE5->(IndexOrd())

dbSelectArea("SE5")
dbSetOrder(7)
dbSeek(cFilTit+cPrefixo+cNumero+cParcela+cTipo)

While E5_FILIAL + E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO == ;
	cFilTit + cPrefixo + cNumero + cParcela + cTipo .and. !EOF()
	
	IF E5_SITUACA = "C"
		dbSkip()
		Loop
	Endif

	If TemBxCanc(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)
		dbskip()
		Loop
	EndIf
	
	cCarteira := cCart
	If cCart == "R"
		If (E5_TIPO$MVRECANT+"/"+MV_CRNEG).and. E5_TIPODOC $ "BA|VL|MT|JR|CM" ;
			.and. Empty(E5_DOCUMEN) .and. IIF(!(MovBcoBx(E5_MOTBX)), .T. , !Empty(E5_BANCO) )
			cCarteira := "P"        //Baixa de adiantamento (inverte)
			cLoja     := SE1->E1_LOJA
		Endif
	Endif
	
	If cCart == "P"
		If (E5_TIPO$MVPAGANT+"/"+MV_CPNEG).and. E5_TIPODOC $ "BA|VL|MT|JR|CM" .and. ;
			Empty(E5_DOCUMEN) .and. IIF(!(MovBcoBx(E5_MOTBX)), .T. , !Empty(E5_BANCO) )
			cCarteira := "R"        //Baixa de adiantamento (inverte)
		Endif
	Endif
	
	IF (cCarteira == "P" .and. E5_RECPAG == "R") .or. (cCarteira == "R" .and. E5_RECPAG == "P")
		dbSkip( )
		Loop
	Endif
	
	IF cCliFor + cLoja  != E5_CLIFOR + E5_LOJA
		dbSkip()
		Loop
	EndIF
	
	//Defino qual o tipo de data a ser utilizado para compor o saldo do titulo
	If cTipoData == "0"
		dDtFina := E5_DATA
	ElseIf cTipoData == "1"
		dDtFina := E5_DTDISPO
	Else
		dDtFina := E5_DTDIGIT
	Endif
	
	IF dDtFina <= dDataBaixa
		IF E5_TIPODOC $ "VL#BA#V2#CP#LJ"
			nSaldo -= IIF((nMoedaTit < 2.And.cPaisLoc=="BRA").Or. (cPaisLoc <>"BRA" .And. nMoedaTit > 1 .And. !Empty(E5_BANCO)),E5_VALOR,E5_VLMOED2)
			nSaldo += Round(NoRound(xMoeda(E5_VLMULTA+E5_VLJUROS-E5_VLDESCO,1,nMoedaTit,E5_DATA,3,,nTxMoeda),3),2)
			//Retencao de impostos na baixa
			If lPccBaixa .and. cCarteira == "P" .and. Empty(E5_PRETPIS) .and. !(E5_MOTBX == "PCC")
				nSaldo -= Round(NoRound(xMoeda(E5_VRETPIS+E5_VRETCOF+E5_VRETCSLL,1,nMoedaTit,E5_DATA,3,,nTxMoeda),3),2)
			Endif
			If nSaldo <= 0.009
				nSaldo := 0
			Endif
		Endif
	EndIF
	dbSkip()
Enddo
// Zera o Saldo devido problema de arredondamento nos juros, ou seja, o valor dos juros que eh gravado com
// 2 casas decimais, gera diferena na recomposicao do saldo no titulo
// Exemplo: Titulo com valor de 24.450, com E1_PORCJUR de 0.13 e tres dias de atraso, grava em E5_JUROS o valor
// de 95.36, sendo que o valor dos juros seria 95.355
// Movimentacao no SE5:
//	      Baixa	Juros	       Saldo
//		 		            24.450,00
//-------------------------------
//		4.001,04	95,36 	20.544,32 3 dias apos vencto.
//		2.100,95		      18.443,37 mesma data
//		3.474,23		      14.969,14 mesma data
//		6.000,00		       8.969,14 5 dias apos vencto
//		5.060,00		       3.909,14 10 dias apos vencto
//		3.919,29	10,16	        0,01 12 dias apos vencto
If Empty((cAliasTit)->&(Right(cAliasTit,2)+"_SALDO")) .And. Abs(nSaldo) <= 0.009
	nSaldo := 0
Else
	nSaldo := Round(NoRound(xMoeda(nSaldo,nMoedaTit,nMoeda,dData,Msdecimais(nMoeda)+1,nTxMoeda),Msdecimais(nMoeda)+1),Msdecimais(nMoeda))
Endif

dbSelectArea('SE5')

DbSetOrder(nOrdSE5)
DbGoto(nRecSE5)

dbSelectArea(cAlias)
Return ( nSaldo )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³TemBxCanc ³ Autor ³ Jailton B Santos-JBS  ³ Data ³ 05/05/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³VerIfica se a baixa do titulo foi cancelada                 ³±±
±±³          ³Caso n„o seja passada a Chave, o SE5 deve estar posicionado ³±±
±±³          ³para a montagem da Chave.                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³TemBxCanc()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Financeiro                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function TemBxCanc(cChave,lBxFut)

Local aArea    := GetArea()
Local aAreaSE5 := SE5->(GetArea())
Local lRet 	   := .F.
Local cQuery   := ""
Local cAlias   := ""      

DEFAULT lBxFut := .F.

cQuery := "SELECT Count(*) ESTORNO FROM SE5" + __cEmpresa + " WHERE "
cQuery += "E5_FILIAL  ='" + SE5->E5_FILIAL   + "' AND "  // JBS 06/05/2010 - Informado a filial diretamento do SE5
cQuery += "E5_PREFIXO ='" + SE5->E5_PREFIXO  + "' AND "
cQuery += "E5_NUMERO  ='" + SE5->E5_NUMERO   + "' AND "
cQuery += "E5_PARCELA ='" + SE5->E5_PARCELA  + "' AND "
cQuery += "E5_TIPO    ='" + SE5->E5_TIPO     + "' AND "
cQuery += "E5_CLIFOR  ='" + SE5->E5_CLIFOR   + "' AND "
cQuery += "E5_LOJA    ='" + SE5->E5_LOJA     + "' AND "
cQuery += "E5_SEQ     ='" + SE5->E5_SEQ      + "' AND "
cQuery += "E5_TIPODOC ='ES' AND "

If !lBxFut
	cQuery += "E5_DATA <= '" + DTOS(dDataBase) + "' AND "
EndIf

cQuery += "D_E_L_E_T_<>'*'"
cQuery := ChangeQuery(cQuery)
cAlias := "__BXCAN"
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.T.,.T.)

If ( (cAlias)->(ESTORNO) > 0 )
	lRet := .T.
EndIf

(cAlias)->(DbCloseArea())

RestArea(aAreaSE5)
RestArea(aArea)

Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ SomaAbat ³ Autor ³ Jailton B Santos-JBS  ³ Data ³ 05/05/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Soma todos os titulos de abatimento ate uma data limite	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ SomaAbat()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Prefixo,Numero,Parcela,Carteira,Moeda,Data,ClIfor,Loja	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function SomaAbat(cPrefixo,cNumero,cParcela,cCart,nMoeda,dData,cFornCli,cLoja,cFilAbat,dDataRef)

Local cProcedure := 'FIN001' //'SUMABAT'
Local aResult
nMoeda :=Iif( nMoeda==NIL,1,nMoeda )
dData  :=Iif( dData==NIL,dDataBase,dData )
cFilAbat:=Iif( cFilAbat==NIL, Iif(cCart=="R",xFilial("SE1"),xFilial("SE2")), cFilAbat)
cFornCli := If(cFornCli = Nil, If( cCart=="R", SE1->E1_CLIENTE, SE2->E2_FORNECE), cFornCli)
cLoja    := If(cLoja		= Nil, If( cCart=="R", SE1->E1_LOJA, SE2->E2_LOJA), cLoja)
dDataRef := Iif( dDataRef==NIL,dDataBase,dDataRef )

If ExistProc ( cProcedure, '001' ) .and. !Empty(cNumero) .and. ( TcSrvType() <> "AS/400" )
	aResult := TCSPEXEC(xProcedures(cProcedures), cPrefixo,;
	cNumero, cParcela, cCart,nMoeda,DTOS(dData),cFornCli,cLoja,cFilAbat,;
	DTOS(dDataRef),'')
	Return aResult[1]
Else
	Return xSomaAbat(cPrefixo,cNumero,cParcela,cCart,nMoeda,dData,cFornCli,cLoja,cFilAbat, dDataRef)
EndIf

Static Function xSomaAbat(cPrefixo,cNumero,cParcela,cCart,nMoeda,dData,cFornCli,cLoja,cFilAbat, dDataRef)

Local nTotAbat := 0
Local cAlias   := Alias()
Local nOrdem   := indexord()
Local lUniao   := .F.             // Utilizada para considerar titulos antigos, onde cliente era UNIAO

cArea    := Iif(cCart   =  "R","E1","E2")
nMoeda   := Iif(nMoeda  == NIL,1,nMoeda )
dData    := Iif(dData   == NIL,dDataBase,dData )
cFilAbat := Iif(cFilAbat== NIL,Iif(cCart=="R",xFilial("SE1"),xFilial("SE2")), cFilAbat)
cFornCli := Iif(cFornCli=  Nil,If( cCart=="R", SE1->E1_CLIENTE, SE2->E2_FORNECE), cFornCli)
cLoja    := Iif(cLoja	=  Nil,If( cCart=="R", SE1->E1_LOJA, SE2->E2_LOJA), cLoja)
dDataRef := Iif(dDataRef== NIL,dDataBase,dDataRef )

DbSelectArea("__SE2")
DbSetOrder(1)
DbSeek(cFilAbat+cPrefixo+cNumero+cParcela)

While ( !Eof() .And. &cArea._FILIAL==cFilAbat .And.;
	&cArea._PREFIXO=cPrefixo .And. ;
	&cArea._NUM==cNumero .and. &cArea._PARCELA==cParcela )
	If ( cCart == "P" )
		If ( cFornCli != Nil )
			If ( E2_FORNECE!=cFornCli )
				DbSkip()
				Loop
			ElseIf ( cLoja != Nil )
				If ( E2_LOJA != cLoja )
					DbSkip()
					Loop
				EndIf
			EndIf
		EndIf
	EndIf
	If ( &cArea._TIPO $ MVABATIM .And. &cArea._EMISSAO <= dDataRef )
		nTotAbat+=xMoeda(&cArea._VALOR,&cArea._MOEDA,nMoeda,dData,,If(cPaisLoc=="BRA",&cArea._TXMOEDA,0))
	EndIf

	dbSkip()

EndDo

DbSelectArea(cAlias)
DbSetOrder(nOrdem)
Return(nTotAbat)

Static Function fCriaSE2TEMP(aStru,cChave,cTipo) 

Local lRet := .T.
Local aEstrutura := aClone(aStru)

If cTipo == 'CRIAR'                         
    //---------------------------------------------------------------------------------------
    // Fecha SE2 padrão e cria o arquivo temporario como SE2 e trabalha com este arquivo como
    // se fosse a tabela SE2. Antes porém,  à  alimentará, com as  informações filtradas pela
    // query executada para cada empresa e filial apontada dentro da array aEmpresa[XX][YY] 
    //---------------------------------------------------------------------------------------
    SE2->(DbCloseArea())
    aadd(aEstrutura,{"E2_EMPRESA","C",3,0}) 

    cFileWork := CriaTrab(aEstrutura,.T.)
    DbUseArea(.T.,,cFileWork,"SE2",.F.,.F.)  
    If !Empty(cChave)
	    //IndRegua("SE2",cFileWork,cChave,,,"Criando Indice SE2 Temporario...")
	EndIf
ElseIf Select('SE2') > 0
	
	SE2->(DbCloseArea())
	DbSelectArea("SE2")
    //SE2->(E_EraseArq(cFileWork))  
    ChKFile("SE2")
    SE2->(dbSetOrder(1))
    SE2->( DbGoTop())

EndIf

Return(lRet)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fGravaSE2 ºAutor  ³Jailton B Santos-JBSº Data ³ 10/05/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Grava as informações lidas pela query, no arquivo tempora- º±±
±±º          ³ rio para ser trabalhado pelo processo do relatorio.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico Financeiro Dipromed                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fGravaSE2(nTotsRec)
Local lRet := .F.

ProcRegua(nTotsRec) 

If !TRB->( BOF().and.EOF() ) 

    TRB->( DbGoTop() )

    Do While TRB->( !EOF() )

        IncProc() 

        SE2->( RecLock('SE2',.T.) )
        AvReplace('TRB','SE2')      // Esta é uma função padrão. Irá gravar os campos da TRB na tabela SE2
        SE2->( MsUnLock('SE2') )
        TRB->( DbSkip() ) 
        lRet := .T.

    EndDo
EndIf

SE2->( DbGoTop() )           
TRB->( DbCloseArea() )

Return(lRet)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³UFINR150  ºAutor  ³Microsiga           º Data ³  06/28/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ProcPedCom(dDtComp,nMesCom,lTotal)
Local nTotComp  := 0      
DEFAULT dDtComp := StoD("")
DEFAULT nMesCom := 0   
DEFAULT lTotal  := .F.

If lTotal
	aEval(aCompras,{|x| nTotComp+=x[2] })	
ElseIf nMesCom > 0
	aEval(aCompras,{|x| IIf(Month(x[1])==nMesCom,nTotComp+=x[2],nil)})	
Else
	aEval(aCompras,{|x| IIf(x[1]==dDtComp,nTotComp+=x[2],nil)})     
	nDipMCom += nTotComp
	nDipTCom += nTotComp
EndIf	    

Return nTotComp
